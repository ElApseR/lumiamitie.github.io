<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">lmnsh</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://lumiamitie.github.io/feed.xml" />
<link rel="alternate" type="text/html" href="http://lumiamitie.github.io" />
<updated>2015-12-08T21:14:35+09:00</updated>
<id>http://lumiamitie.github.io/</id>
<author>
  <name>Minho Lee</name>
  <uri>http://lumiamitie.github.io/</uri>
  <email>lumiamitie@email.com</email>
</author>


<entry>
  <title type="html"><![CDATA[tidyr Utilities]]></title>
  <link>http://lumiamitie.github.io/r/tidyr-util</link>
  <id>http://lumiamitie.github.io/r/tidyr-util</id>
  <published>2015-12-03T00:00:00+09:00</published>
  <updated>2015-12-03T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/taking-notes.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;tidyr-utilities&quot;&gt;tidyr Utilities&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;tidyr&lt;/code&gt; 패키지에서 가장 중심이 되는 기능은 &lt;code&gt;gather&lt;/code&gt;와 &lt;code&gt;spread&lt;/code&gt;를 이용한 데이터 형태 변환이다. 하지만 이전 포스팅에서도 다루었지만, NA를 처리하는 &lt;code&gt;replace_na&lt;/code&gt;나 &lt;code&gt;fill&lt;/code&gt; 등 데이터를 편리하게 정제할 수 있는 도구들을 제공하기도 한다. 여기서는 이전까지의 글에서 다루지 않았던 tidyr의 다른 기능에 대해서 살펴보려고 한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tidyr과 관련된 이전 포스팅&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/tidy-data/&quot;&gt;Tidy Data&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/replace_na_with_tidyr/&quot;&gt;relace_na with tidyr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;tidyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;expand()&quot;&gt;expand()&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;expand&lt;/code&gt;함수는 선택한 변수들의 조합을 만들어낸다&lt;/p&gt;

&lt;p&gt;어떠한 형태로 사용하는지에 따라서 데이터에 존재하는 조합만 생성할 수도 있고, 데이터와 무관하게 각 변수들로 만들어 낼 수 있는 모든 조합을 생성할 수도 있다.&lt;/p&gt;

&lt;p&gt;우선 실습을 위해 &lt;code&gt;mtcars&lt;/code&gt; 데이터를 사용한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;expand(데이터, 열 이름들)&lt;/code&gt;의 형태로 사용하면 해당 변수들로 만들 수 있는 모든 조합을 생성한다(데이터에는 없더라도)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;expand&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cyl&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [6 x 2]
## 
##      vs   cyl
##   (dbl) (dbl)
## 1     0     4
## 2     0     6
## 3     0     8
## 4     1     4
## 5     1     6
## 6     1     8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;변수를 c()로 묶으면 데이터에 존재하는 조합만 생성한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;expand&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cyl&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   vs cyl
## 1  0   4
## 2  0   6
## 3  0   8
## 4  1   4
## 5  1   6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;두 방식을 섞어서 사용할 수도 있다. 아래와 같이 사용하면 &lt;code&gt;vs&lt;/code&gt;, &lt;code&gt;cyl&lt;/code&gt;에 대해서는 데이터에 존재하는 조합만 만들고 &lt;code&gt;am&lt;/code&gt;에 대해서는 데이터에 없는 조합까지 생성한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;expand&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cyl&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; am&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [10 x 3]
## 
##       vs   cyl    am
##    (dbl) (dbl) (dbl)
## 1      0     4     0
## 2      0     4     1
## 3      0     6     0
## 4      0     6     1
## 5      0     8     0
## 6      0     8     1
## 7      1     4     0
## 8      1     4     1
## 9      1     6     0
## 10     1     6     1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;모든 변수를 c로 묶으면 데이터에 존재하는 조합만 생성된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;expand&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cyl&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; am&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   vs cyl am
## 1  0   4  1
## 2  0   6  1
## 3  0   8  0
## 4  0   8  1
## 5  1   4  0
## 6  1   4  1
## 7  1   6  0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;expand&lt;/code&gt; 함수를 사용하면 원하는 변수의 모든 조합에 대한 테이블을 생성할 수 있다. 데이터에 없는 부분은 &lt;code&gt;NA&lt;/code&gt;로 처리하고 존재하는 조합에만 데이터를 넣으면 된다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;expand&lt;/code&gt; 함수를 사용해서 원하는 변수 조합에 대한 data.frame을 생성한 다음에 원본 데이터를 &lt;code&gt;left_join&lt;/code&gt; 시키면 원하는 모든 조합을 표시하는 테이블이 생성된다. &lt;code&gt;NA&lt;/code&gt;값을 0으로 변환시키기 위해서 &lt;code&gt;replace_na&lt;/code&gt; 함수를 사용할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;expand&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cyl&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; am&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  left_join&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; by&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;vs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;cyl&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;am&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  replace_na&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mpg &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; disp &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; hp &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; drat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; wt &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; qsec &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; gear &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; carb &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [37 x 11]
## 
##       vs   cyl    am   mpg  disp    hp  drat    wt  qsec  gear  carb
##    (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl)
## 1      0     4     0   0.0   0.0     0  0.00 0.000  0.00     0     0
## 2      0     4     1  26.0 120.3    91  4.43 2.140 16.70     5     2
## 3      0     6     0   0.0   0.0     0  0.00 0.000  0.00     0     0
## 4      0     6     1  21.0 160.0   110  3.90 2.620 16.46     4     4
## 5      0     6     1  21.0 160.0   110  3.90 2.875 17.02     4     4
## 6      0     6     1  19.7 145.0   175  3.62 2.770 15.50     5     6
## 7      0     8     0  18.7 360.0   175  3.15 3.440 17.02     3     2
## 8      0     8     0  14.3 360.0   245  3.21 3.570 15.84     3     4
## 9      0     8     0  16.4 275.8   180  3.07 4.070 17.40     3     3
## 10     0     8     0  17.3 275.8   180  3.07 3.730 17.60     3     3
## ..   ...   ...   ...   ...   ...   ...   ...   ...   ...   ...   ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tidyr&lt;/code&gt;에서는 이 세 가지 과정을 하나로 묶어서 &lt;code&gt;complete&lt;/code&gt; 라는 함수로 제공한다. &lt;code&gt;expand&lt;/code&gt;와 &lt;code&gt;replace_na&lt;/code&gt;의 문법이 섞인 형태로 사용할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;complete&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
         vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cyl&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; am&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
         fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mpg &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                     disp &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                     hp &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                     drat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                     wt &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                     qsec &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                     gear &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                     carb &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [37 x 11]
## 
##       vs   cyl    am   mpg  disp    hp  drat    wt  qsec  gear  carb
##    (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl)
## 1      0     4     0   0.0   0.0     0  0.00 0.000  0.00     0     0
## 2      0     4     1  26.0 120.3    91  4.43 2.140 16.70     5     2
## 3      0     6     0   0.0   0.0     0  0.00 0.000  0.00     0     0
## 4      0     6     1  21.0 160.0   110  3.90 2.620 16.46     4     4
## 5      0     6     1  21.0 160.0   110  3.90 2.875 17.02     4     4
## 6      0     6     1  19.7 145.0   175  3.62 2.770 15.50     5     6
## 7      0     8     0  18.7 360.0   175  3.15 3.440 17.02     3     2
## 8      0     8     0  14.3 360.0   245  3.21 3.570 15.84     3     4
## 9      0     8     0  16.4 275.8   180  3.07 4.070 17.40     3     3
## 10     0     8     0  17.3 275.8   180  3.07 3.730 17.60     3     3
## ..   ...   ...   ...   ...   ...   ...   ...   ...   ...   ...   ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nest&quot;&gt;nest&lt;/h2&gt;

&lt;p&gt;어떤 그룹을 기준으로 반복되는 값들을 list-variable 형태로 정리한다. 그룹을 중심으로 데이터를 좀 더 압축적으로 살펴볼 수 있게 된다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;list의 형태로 표현할 열들을 nest 함수의 인자로 하면 된다. 아래 코드에서는 Species함수를 제외한 다른 열의 값을 리스트로 변경한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; nest&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [3 x 5]
## Groups: &amp;lt;by row&amp;gt;
## 
##      Species Sepal.Length Sepal.Width Petal.Length Petal.Width
##       (fctr)        (chr)       (chr)        (chr)       (chr)
## 1     setosa    &amp;lt;dbl[50]&amp;gt;   &amp;lt;dbl[50]&amp;gt;    &amp;lt;dbl[50]&amp;gt;   &amp;lt;dbl[50]&amp;gt;
## 2 versicolor    &amp;lt;dbl[50]&amp;gt;   &amp;lt;dbl[50]&amp;gt;    &amp;lt;dbl[50]&amp;gt;   &amp;lt;dbl[50]&amp;gt;
## 3  virginica    &amp;lt;dbl[50]&amp;gt;   &amp;lt;dbl[50]&amp;gt;    &amp;lt;dbl[50]&amp;gt;   &amp;lt;dbl[50]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;데이터를 nest시킨 이후에는 list 형태로 데이터를 활용할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;nested_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; nest&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
nested_iris&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Sepal.Length
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
##  [1] 5.1 4.9 4.7 4.6 5.0 5.4 4.6 5.0 4.4 4.9 5.4 4.8 4.8 4.3 5.8 5.7 5.4
## [18] 5.1 5.7 5.1 5.4 5.1 4.6 5.1 4.8 5.0 5.0 5.2 5.2 4.7 4.8 5.4 5.2 5.5
## [35] 4.9 5.0 5.5 4.9 4.4 5.1 5.0 4.5 4.4 5.0 5.1 4.8 5.1 4.6 5.3 5.0
## 
## [[2]]
##  [1] 7.0 6.4 6.9 5.5 6.5 5.7 6.3 4.9 6.6 5.2 5.0 5.9 6.0 6.1 5.6 6.7 5.6
## [18] 5.8 6.2 5.6 5.9 6.1 6.3 6.1 6.4 6.6 6.8 6.7 6.0 5.7 5.5 5.5 5.8 6.0
## [35] 5.4 6.0 6.7 6.3 5.6 5.5 5.5 6.1 5.8 5.0 5.6 5.7 5.7 6.2 5.1 5.7
## 
## [[3]]
##  [1] 6.3 5.8 7.1 6.3 6.5 7.6 4.9 7.3 6.7 7.2 6.5 6.4 6.8 5.7 5.8 6.4 6.5
## [18] 7.7 7.7 6.0 6.9 5.6 7.7 6.3 6.7 7.2 6.2 6.1 6.4 7.2 7.4 7.9 6.4 6.3
## [35] 6.1 7.7 6.3 6.4 6.0 6.9 6.7 6.9 5.8 6.8 6.7 6.7 6.3 6.5 6.2 5.9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;여러 개의 변수를 기준으로 하여 nest시킬 수도 있다. 이 경우 &lt;code&gt;dplyr::select&lt;/code&gt;의 열 선택 방식을 사용할 수 있다. 아래의 두 가지 코드는 같은 결과물을 가진다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtcars &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; nest&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;am&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;gear&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;carb&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [14 x 11]
## Groups: &amp;lt;by row&amp;gt;
## 
##       vs    am  gear  carb      mpg      cyl     disp       hp     drat
##    (dbl) (dbl) (dbl) (dbl)    (chr)    (chr)    (chr)    (chr)    (chr)
## 1      0     0     3     2 &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt;
## 2      0     0     3     3 &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt;
## 3      0     0     3     4 &amp;lt;dbl[5]&amp;gt; &amp;lt;dbl[5]&amp;gt; &amp;lt;dbl[5]&amp;gt; &amp;lt;dbl[5]&amp;gt; &amp;lt;dbl[5]&amp;gt;
## 4      0     1     4     4 &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt;
## 5      0     1     5     2 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## 6      0     1     5     4 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## 7      0     1     5     6 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## 8      0     1     5     8 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## 9      1     0     3     1 &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt;
## 10     1     0     4     2 &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt;
## 11     1     0     4     4 &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt;
## 12     1     1     4     1 &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt;
## 13     1     1     4     2 &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt;
## 14     1     1     5     2 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## Variables not shown: wt (chr), qsec (chr)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtcars &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; nest&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;vs&lt;span class=&quot;o&quot;&gt;:-&lt;/span&gt;carb&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [14 x 11]
## Groups: &amp;lt;by row&amp;gt;
## 
##       vs    am  gear  carb      mpg      cyl     disp       hp     drat
##    (dbl) (dbl) (dbl) (dbl)    (chr)    (chr)    (chr)    (chr)    (chr)
## 1      0     0     3     2 &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt;
## 2      0     0     3     3 &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt;
## 3      0     0     3     4 &amp;lt;dbl[5]&amp;gt; &amp;lt;dbl[5]&amp;gt; &amp;lt;dbl[5]&amp;gt; &amp;lt;dbl[5]&amp;gt; &amp;lt;dbl[5]&amp;gt;
## 4      0     1     4     4 &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt;
## 5      0     1     5     2 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## 6      0     1     5     4 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## 7      0     1     5     6 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## 8      0     1     5     8 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## 9      1     0     3     1 &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt;
## 10     1     0     4     2 &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt;
## 11     1     0     4     4 &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt;
## 12     1     1     4     1 &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt;
## 13     1     1     4     2 &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt;
## 14     1     1     5     2 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## Variables not shown: wt (chr), qsec (chr)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;nest를 해제하려면 unnest 함수를 사용한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;nested_iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; unnest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [150 x 5]
## 
##    Species Sepal.Length Sepal.Width Petal.Length Petal.Width
##     (fctr)        (dbl)       (dbl)        (dbl)       (dbl)
## 1   setosa          5.1         3.5          1.4         0.2
## 2   setosa          4.9         3.0          1.4         0.2
## 3   setosa          4.7         3.2          1.3         0.2
## 4   setosa          4.6         3.1          1.5         0.2
## 5   setosa          5.0         3.6          1.4         0.2
## 6   setosa          5.4         3.9          1.7         0.4
## 7   setosa          4.6         3.4          1.4         0.3
## 8   setosa          5.0         3.4          1.5         0.2
## 9   setosa          4.4         2.9          1.4         0.2
## 10  setosa          4.9         3.1          1.5         0.1
## ..     ...          ...         ...          ...         ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;extract&quot;&gt;extract&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;extract&lt;/code&gt; 함수는 정규표현식을 통해 원하는 값만 추출해서 새로운 열을 만들어준다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;extract(데이터, 대상 열, 생성할 열 이름, 정규표현식)&lt;/code&gt;의 형태로 사용한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mtcars&lt;/code&gt;에서 자동차 모델 중 일부의 이름을 따로 data.frame으로 저장해서 실습하려고 한다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtcars_name &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;name &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;row.names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])&lt;/span&gt;
mtcars_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##              name
## 1       Merc 240D
## 2        Merc 230
## 3        Merc 280
## 4       Merc 280C
## 5      Merc 450SE
## 6      Merc 450SL
## 7     Merc 450SLC
## 8     Honda Civic
## 9  Toyota Corolla
## 10  Toyota Corona
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;기본값은 영문자와 숫자를 포함하는 문자열만을 추출한다. 따라서 아래 예제에서는 공백이 나오기 전까지의 문자열을 추출하게 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtcars_name &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  extract&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Brand&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##     Brand
## 1    Merc
## 2    Merc
## 3    Merc
## 4    Merc
## 5    Merc
## 6    Merc
## 7    Merc
## 8   Honda
## 9  Toyota
## 10 Toyota
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;여기서는 정규표현식을 자세히 설명하지 않기 때문에 자세한 동작 원리에 대해서는 언급하지 않는다. 간단하게 설명하면 아래의 예제에서 세 번째 인자인 정규표현식은 &lt;code&gt;(첫 번째 패턴)구분자(두 번째 패턴)&lt;/code&gt; 의 형태로 되어있다.
첫 번째 패턴에 해당하는 결과가 &lt;code&gt;&amp;quot;Brand&amp;quot;&lt;/code&gt; 열에 들어가고, 두 번째 패턴에 해당하는 결과는 &lt;code&gt;&amp;quot;Name&amp;quot;&lt;/code&gt; 열에 입력된다. 그리고 각각의 패턴은 영문자 또는 숫자인 문자열만 찾도록 되어있다. &lt;/p&gt;

&lt;p&gt;R에서 정규표현식에 대한 도움말은 &lt;code&gt;?regex&lt;/code&gt;를 참고하자  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtcars_name &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  extract&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Brand&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;([[:alnum:]]+) ([[:alnum:]]+)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##     Brand    Name
## 1    Merc    240D
## 2    Merc     230
## 3    Merc     280
## 4    Merc    280C
## 5    Merc   450SE
## 6    Merc   450SL
## 7    Merc  450SLC
## 8   Honda   Civic
## 9  Toyota Corolla
## 10 Toyota  Corona
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;unite&quot;&gt;unite&lt;/h2&gt;

&lt;p&gt;두 열을 하나의 열로 합쳐준다. dplyr의 mutate 함수를 통해 두 열을 paste 하는 것과 비슷한 효과를 낸다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;unite(데이터프레임, 결과물의 열 이름, 합칠 열 이름들)&lt;/code&gt;의 형태로 사용한다&lt;/p&gt;

&lt;p&gt;아래 코드는 &lt;code&gt;mtcars&lt;/code&gt; 데이터의 &lt;code&gt;vs&lt;/code&gt;와 &lt;code&gt;am&lt;/code&gt; 열을 합쳐서 &lt;code&gt;vs_am&lt;/code&gt;이라는 새로운 열을 만든다. &lt;code&gt;unite&lt;/code&gt; 의 &lt;code&gt;sep&lt;/code&gt; 기본값이 &lt;code&gt;_&lt;/code&gt;이기 때문에 두 열의 값 사이에 &lt;code&gt;_&lt;/code&gt; 이 들어간 형태로 합쳐진다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;unite&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs_am&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; am&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##                      mpg cyl  disp  hp drat    wt  qsec vs_am gear carb
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46   0_1    4    4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02   0_1    4    4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61   1_1    4    1
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44   1_0    3    1
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02   0_0    3    2
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22   1_0    3    1
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84   0_0    3    4
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00   1_0    4    2
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90   1_0    4    2
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30   1_0    4    4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90   1_0    4    4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40   0_0    3    3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60   0_0    3    3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00   0_0    3    3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98   0_0    3    4
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82   0_0    3    4
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42   0_0    3    4
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47   1_1    4    1
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52   1_1    4    2
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90   1_1    4    1
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01   1_0    3    1
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87   0_0    3    2
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30   0_0    3    2
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41   0_0    3    4
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05   0_0    3    2
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90   1_1    4    1
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70   0_1    5    2
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90   1_1    5    2
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50   0_1    5    4
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50   0_1    5    6
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60   0_1    5    8
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60   1_1    4    2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;unite&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs_am&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; am&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sep &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##                      mpg cyl  disp  hp drat    wt  qsec vs_am gear carb
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46   0x1    4    4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02   0x1    4    4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61   1x1    4    1
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44   1x0    3    1
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02   0x0    3    2
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22   1x0    3    1
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84   0x0    3    4
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00   1x0    4    2
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90   1x0    4    2
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30   1x0    4    4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90   1x0    4    4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40   0x0    3    3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60   0x0    3    3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00   0x0    3    3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98   0x0    3    4
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82   0x0    3    4
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42   0x0    3    4
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47   1x1    4    1
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52   1x1    4    2
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90   1x1    4    1
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01   1x0    3    1
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87   0x0    3    2
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30   0x0    3    2
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41   0x0    3    4
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05   0x0    3    2
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90   1x1    4    1
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70   0x1    5    2
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90   1x1    5    2
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50   0x1    5    4
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50   0x1    5    6
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60   0x1    5    8
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60   1x1    4    2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;SE버전의 함수를 사용하려면 &lt;code&gt;unite_&lt;/code&gt; 함수를 사용한다. 열이름을 문자열의 형태로 전달할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;unite_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;vs_am&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;vs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;am&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##                      mpg cyl  disp  hp drat    wt  qsec vs_am gear carb
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46   0_1    4    4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02   0_1    4    4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61   1_1    4    1
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44   1_0    3    1
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02   0_0    3    2
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22   1_0    3    1
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84   0_0    3    4
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00   1_0    4    2
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90   1_0    4    2
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30   1_0    4    4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90   1_0    4    4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40   0_0    3    3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60   0_0    3    3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00   0_0    3    3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98   0_0    3    4
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82   0_0    3    4
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42   0_0    3    4
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47   1_1    4    1
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52   1_1    4    2
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90   1_1    4    1
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01   1_0    3    1
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87   0_0    3    2
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30   0_0    3    2
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41   0_0    3    4
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05   0_0    3    2
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90   1_1    4    1
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70   0_1    5    2
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90   1_1    5    2
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50   0_1    5    4
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50   0_1    5    6
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60   0_1    5    8
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60   1_1    4    2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;unite_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;vs_am&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;vs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;am&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; sep &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##                      mpg cyl  disp  hp drat    wt  qsec vs_am gear carb
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46   0x1    4    4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02   0x1    4    4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61   1x1    4    1
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44   1x0    3    1
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02   0x0    3    2
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22   1x0    3    1
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84   0x0    3    4
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00   1x0    4    2
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90   1x0    4    2
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30   1x0    4    4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90   1x0    4    4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40   0x0    3    3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60   0x0    3    3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00   0x0    3    3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98   0x0    3    4
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82   0x0    3    4
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42   0x0    3    4
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47   1x1    4    1
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52   1x1    4    2
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90   1x1    4    1
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01   1x0    3    1
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87   0x0    3    2
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30   0x0    3    2
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41   0x0    3    4
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05   0x0    3    2
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90   1x1    4    1
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70   0x1    5    2
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90   1x1    5    2
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50   0x1    5    4
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50   0x1    5    6
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60   0x1    5    8
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60   1x1    4    2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;3개 이상의 변수를 합칠 수도 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;unite&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vagc&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; am&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; gear&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; carb&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##                      mpg cyl  disp  hp drat    wt  qsec    vagc
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46 0_1_4_4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02 0_1_4_4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61 1_1_4_1
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44 1_0_3_1
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02 0_0_3_2
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22 1_0_3_1
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84 0_0_3_4
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00 1_0_4_2
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90 1_0_4_2
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30 1_0_4_4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90 1_0_4_4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40 0_0_3_3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60 0_0_3_3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00 0_0_3_3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98 0_0_3_4
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82 0_0_3_4
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42 0_0_3_4
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47 1_1_4_1
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52 1_1_4_2
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90 1_1_4_1
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01 1_0_3_1
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87 0_0_3_2
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30 0_0_3_2
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41 0_0_3_4
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05 0_0_3_2
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90 1_1_4_1
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70 0_1_5_2
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90 1_1_5_2
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50 0_1_5_4
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50 0_1_5_6
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60 0_1_5_8
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60 1_1_4_2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dplyr::select&lt;/code&gt; 함수에서 지원하는 열 선택 방식을 지원한다. 자세한 내용은 &lt;code&gt;dplyr::select&lt;/code&gt; 함수의 도움말에서 확인할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;unite&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vagc&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;carb&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##                      mpg cyl  disp  hp drat    wt  qsec    vagc
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46 0_1_4_4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02 0_1_4_4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61 1_1_4_1
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44 1_0_3_1
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02 0_0_3_2
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22 1_0_3_1
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84 0_0_3_4
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00 1_0_4_2
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90 1_0_4_2
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30 1_0_4_4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90 1_0_4_4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40 0_0_3_3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60 0_0_3_3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00 0_0_3_3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98 0_0_3_4
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82 0_0_3_4
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42 0_0_3_4
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47 1_1_4_1
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52 1_1_4_2
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90 1_1_4_1
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01 1_0_3_1
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87 0_0_3_2
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30 0_0_3_2
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41 0_0_3_4
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05 0_0_3_2
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90 1_1_4_1
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70 0_1_5_2
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90 1_1_5_2
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50 0_1_5_4
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50 0_1_5_6
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60 0_1_5_8
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60 1_1_4_2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;기본적으로는 열을 합치면 합치는데 사용한 원본 열은 삭제하게끔 되어있다. 원본 열들을 남기고 싶다면 &lt;code&gt;remove = FALSE&lt;/code&gt; 옵션을 사용한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;unite&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vagc&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;carb&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; remove &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##                      mpg cyl  disp  hp drat    wt  qsec    vagc vs am gear
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46 0_1_4_4  0  1    4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02 0_1_4_4  0  1    4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61 1_1_4_1  1  1    4
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44 1_0_3_1  1  0    3
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02 0_0_3_2  0  0    3
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22 1_0_3_1  1  0    3
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84 0_0_3_4  0  0    3
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00 1_0_4_2  1  0    4
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90 1_0_4_2  1  0    4
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30 1_0_4_4  1  0    4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90 1_0_4_4  1  0    4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40 0_0_3_3  0  0    3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60 0_0_3_3  0  0    3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00 0_0_3_3  0  0    3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98 0_0_3_4  0  0    3
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82 0_0_3_4  0  0    3
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42 0_0_3_4  0  0    3
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47 1_1_4_1  1  1    4
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52 1_1_4_2  1  1    4
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90 1_1_4_1  1  1    4
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01 1_0_3_1  1  0    3
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87 0_0_3_2  0  0    3
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30 0_0_3_2  0  0    3
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41 0_0_3_4  0  0    3
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05 0_0_3_2  0  0    3
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90 1_1_4_1  1  1    4
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70 0_1_5_2  0  1    5
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90 1_1_5_2  1  1    5
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50 0_1_5_4  0  1    5
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50 0_1_5_6  0  1    5
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60 0_1_5_8  0  1    5
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60 1_1_4_2  1  1    4
##                     carb
## Mazda RX4              4
## Mazda RX4 Wag          4
## Datsun 710             1
## Hornet 4 Drive         1
## Hornet Sportabout      2
## Valiant                1
## Duster 360             4
## Merc 240D              2
## Merc 230               2
## Merc 280               4
## Merc 280C              4
## Merc 450SE             3
## Merc 450SL             3
## Merc 450SLC            3
## Cadillac Fleetwood     4
## Lincoln Continental    4
## Chrysler Imperial      4
## Fiat 128               1
## Honda Civic            2
## Toyota Corolla         1
## Toyota Corona          1
## Dodge Challenger       2
## AMC Javelin            2
## Camaro Z28             4
## Pontiac Firebird       2
## Fiat X1-9              1
## Porsche 914-2          2
## Lotus Europa           2
## Ford Pantera L         4
## Ferrari Dino           6
## Maserati Bora          8
## Volvo 142E             2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;separate&quot;&gt;separate&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;unite&lt;/code&gt; 함수와는 반대로 열을 쪼개는 역할을 한다. 기본적으로는 &lt;strong&gt;영문자와 숫자가 아닌 값을 기준&lt;/strong&gt;으로 열을 구분한다. &lt;code&gt;unite&lt;/code&gt; 함수에서 기본값으로 &lt;code&gt;_&lt;/code&gt;를 사용해 문자열을 합쳤기 때문에 간단하게 원래 상태로 돌릴 수 있다. 구분자가 정해져있는 경우에는 직접 &lt;code&gt;sep&lt;/code&gt; 옵션에 값을 지정하면 된다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;separate(데이터, 분리시킬 열 이름, 새롭게 생성할 열 이름들)&lt;/code&gt;의 형태로 사용한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;unite&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vagc&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;carb&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  separate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;vagc&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;vs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;am&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;gear&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;carb&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;문자열을 쪼갤 때 원하는 개수의 조각으로 쪼개지지 않을 수도 있다. 이러한 경우 &lt;code&gt;extra&lt;/code&gt;와 &lt;code&gt;fill&lt;/code&gt; 옵션을 사용하면 각각의 상황에 대해서 대응하는 방식을 정해줄 수 있다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;extra&lt;/code&gt;는 지정했던 열 개수보다 많은 개수로 쪼개졌을 경우&lt;/p&gt;

&lt;p&gt;&lt;code&gt;fill&lt;/code&gt;은 지정했던 열 개수보다 적은 개수로 쪼개졌을 경우에 대한 대응 방식을 나타낸다&lt;/p&gt;

&lt;p&gt;양쪽 모두 기본값은 &lt;code&gt;&amp;quot;warn&amp;quot;&lt;/code&gt; 으로, 경고메세지를 출력한다. &lt;code&gt;extra&lt;/code&gt;는 여분의 데이터를 버리고, &lt;code&gt;fill&lt;/code&gt;은 오른쪽부터 모자란 열에 &lt;code&gt;NA&lt;/code&gt;값을 채운다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;x: 123&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;y: error: 7&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  separate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;key&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; extra &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;warn&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Warning: Too many values at 1 locations: 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   key value
## 1   x   123
## 2   y error
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;x: 123&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  separate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;key&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;warn&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Warning: Too few values at 1 locations: 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   key value
## 1   x   123
## 2   y  &amp;lt;NA&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/tidyr-util&quot;&gt;tidyr Utilities&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on December 03, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Grouped Bar chart]]></title>
  <link>http://lumiamitie.github.io/d3/grouped-bar</link>
  <id>http://lumiamitie.github.io/d3/grouped-bar</id>
  <published>2015-11-17T00:00:00+09:00</published>
  <updated>2015-11-17T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/old-book.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;grouped-bar-chart&quot;&gt;Grouped bar chart&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://bl.ocks.org/mbostock/3887051&quot;&gt;http://bl.ocks.org/mbostock/3887051&lt;/a&gt;를 보고 수정하면서 알게 된 내용을 정리하려고 한다.&lt;/p&gt;

&lt;p&gt;위 예제에서는 x축의 scale함수를 &lt;strong&gt;그룹에 대한 scale&lt;/strong&gt;과 &lt;strong&gt;그룹 내에서 막대의 위치&lt;/strong&gt;에 대한 scale 두 개로 나누어서 막대를 배치하는 방식으로 구성했다. 여기서는 D3를 이용해서 기본적인 막대그래프를 만드는 방법은 알고 있다고 가정하고 기본적인 내용에 대해서는 넘어갈 것이다. &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;D3를 이용해서 막대그래프를 구성할 수 있다면 일반 막대그래프와 그룹 막대그래프의 차이는 scale 함수의 구성이 일부 달라진다는 것 뿐이다. &lt;/p&gt;

&lt;p&gt;일반적인 막대 그래프이 다음과 같이 구성되어 있다고 생각해보자&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;x_scale
y_scale

막대의 x축 위치 : x_scale(data.x)
막대의 높이 : height - y_scale(data.value)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;x축의 항목이 ordinal(명목형) 변수일 때 &lt;code&gt;x_scale&lt;/code&gt; 함수는 해당 변수에 맞는 x축 위치를 제공한다&lt;/p&gt;

&lt;p&gt;그림으로 표현하면 아래와 같다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_image/grouped_bar/grouped_bar01.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;x_scale의 결과물이 반환하는 좌표값은 각 막대의 왼쪽 끝에 해당하는 x좌표가 된다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;반면에 그룹별로 막대그래프를 만들 때에는 x축에 대한 scale 함수가 두 개 필요해진다. 우선 그룹에 맞는 위치를 찾아야하고, 그룹 내에서 막대의 위치를 잡아주어야 한다. 따라서 &lt;code&gt;x_scale&lt;/code&gt; 함수도 그룹에 대한 함수와 세부적인 위치에 대한 함수를 따로 생성해야 한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;x_scale_group
x_scale_bar
y_scale
막대의 x축 위치 : x_scale_group(data.group) + x_scale_bar(data.bar)
막대의 높이 : height - y_scale(data.value)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;그림으로 표현한다면 아래와 같다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_image/grouped_bar/grouped_bar02.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;먼저, group의 값에 따라서 &lt;code&gt;x_scale_group&lt;/code&gt; 함수가 해당 그룹의 x 좌표를 반환한다. 화살표의 끝이 각 그룹의 왼쪽 맨 끝을 향하고 있는 것을 볼 수 있다. &lt;code&gt;x_scale_group&lt;/code&gt; 함수는 각 그룹을 하나의 커다란 막대로 생각하여 값을 반환한다. 따라서 여기서 결정되는 가상의 막대 너비(그룹의 범위)는 곧 &lt;code&gt;x_scale_bar&lt;/code&gt; 함수의 range를 결정하는 값이 된다. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_image/grouped_bar/grouped_bar03.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;두 번째 그룹의 막대들을 대상으로 막대의 위치를 결정한다고 하면, &lt;code&gt;x_scale_bar&lt;/code&gt; 함수가 반환하는 값은 해당 그룹의 범위 내에서 막대가 위치해야 하는 지점의 좌표를 반환한다. 실제로 막대를 원하는 위치에 놓기 위해서는 &lt;code&gt;x_scale_group&lt;/code&gt; 의 결과물과 &lt;code&gt;x_scale_bar&lt;/code&gt; 의 결과물을 합하면 원하는 x좌표를 얻을 수 있게 된다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이제 나머지 과정은 일반적인 막대그래프를 만드는 과정과 같다. 따라서 html, css, js, json 파일의 내용과 완성된 결과물로 마무리하려고 한다. 아래 내용을 실습하려면 웹서버 환경이 필요하기 때문에 익숙하지 않다면 &lt;a href=&quot;https://github.com/mbostock/d3/wiki#using&quot;&gt;https://github.com/mbostock/d3/wiki#using&lt;/a&gt;의 내용을 참고해서 진행하면 된다. 크롬 확장프로그램에도 간단한 web server가 있으니 다른 언어를 설치하는 과정이 번거롭다면 참고할 수 있다. &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;grouped_bar.html&quot;&gt;grouped_bar.html&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;//d3js.org/d3.v3.min.js&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;grouped_bar.css&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;grouped bar chart&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;chart&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;grouped_bar.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;grouped_bar.css&quot;&gt;grouped_bar.css&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.pos&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#1f4e79&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.neg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#e51843&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.neu&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#73ad21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.y&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.tick&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:first-child&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.y&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stroke&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ccc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;grouped_bar.json&quot;&gt;grouped_bar.json&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;그룹1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;긍정&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;34&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;그룹2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;긍정&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;그룹3&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;긍정&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;51&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;그룹1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;부정&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;76&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;그룹2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;부정&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;59&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;그룹3&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;부정&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;79&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;그룹1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;중립&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;그룹2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;중립&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;94&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;그룹3&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;중립&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;98&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;grouped_bar.js&quot;&gt;grouped_bar.js&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//grouped bar chart&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 차트의 크기&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chart_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// margin 설정&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;bot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// svg 생성&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// id = &amp;quot;chart&amp;quot; 인 div 태그의 하위 element로 svg 생성&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 차트의 크기에다 margin값을 더해서 svg 전체의 면적을 결정한다&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// x축은 margin.left, y축은 margin.top만큼 평행이동 시켜서 이후의 차트는 margin값과 상관없이 그릴 수 있도록 한다&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#chart&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;svg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chart_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chart_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;transform&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;translate(&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 각 그룹의 위치를 결정하는 scale 함수&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x_scale_group&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ordinal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rangeRoundBands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chart_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 그룹 내에서 막대의 위치를 결정하는 scale 함수&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x_scale_bar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ordinal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 막대의 높이를 결정하는 scale 함수&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// y축의 값이 위에는 높은값, 아래에는 0이 있어야 한다. 그렇기 때문에 range에 들어가는 배열에서 값의 순서가 바뀐다&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y_scale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;chart_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// x축을 생성하는 함수&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xAxis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x_scale_group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;orient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;bottom&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;outerTickSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// y축을 생성하는 함수&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 막대 뒤에 선을 표시하기 위해서 innerTickSize에 -chart_size.width 값을 부여한다&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 원래는 y축 눈금을 만드는 함수인데 -값을 주면 반대방향(차트 안쪽)으로 눈금이 길어진다&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;yAxis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;orient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;left&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;outerTickSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerTickSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;chart_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// json 파일을 불러온다&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 외부 파일을 불러오기 때문에 웹서버 환경에서만 실행 가능해진다&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;grouped_bar.json&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// data를 group 값을 기준으로 그룹 지정한다&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nested&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


    &lt;span class=&quot;c1&quot;&gt;// 그룹명(json 데이터에서 group 값)만 추출한다&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;group_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nested&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// x_scale_group의 domain에 group_name 변수를 지정한다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 그룹 수에 맞게 막대 그룹 개수 설정&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;x_scale_group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;group_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// x_scale_bar의 domain에 각 막대에 해당하는 값을 넣는다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// x_scale_group처럼 배열에서 값을 추출해서 쓰는 것이 더 좋다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// rangeRoundBands([interval], padding)의 형태로 사용했다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// padding의 값은 0과 1 사이의 값이 들어가는데 0.5일 때 막대의 너비와 막대 사이의 간격이 같아진다&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;x_scale_bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;긍정&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;부정&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;중립&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
               &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rangeRoundBands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x_scale_group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rangeBand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()],&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// y_scale의 domain 범위를 지정한다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 막대 그래프의 아래쪽 눈금은 0부터 시작하는 것이 바람직하기 때문에 배열의 첫 번째 값은 0으로 한다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 두 번째 값은 data의 value 값중에서 가장 큰 값을 찾고 그 값에서 임의의 값(여기서는 10)을 더해서 그래프 상단의 공간이 여유가 있도록 한다&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;y_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// x축을 생성한다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 그냥 만들면 (0,0) 위치 (화면 좌측 상단)에 생기기 때문에 margin.left 만큼 x축을 이동시키고 차트의 높이만큼 아래로 내려준다&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;class&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;x Axis&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;transform&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;translate(&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chart_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xAxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// y축을 생성한다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// margin.left만큼 우측으로 평행이동 시킨다&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;class&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;y Axis&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;transform&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;translate(&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;yAxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 막대를 생성하기 위해서 data를 연결한다&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bars&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;svg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selectAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;.bar&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 새로 생성되는 부분(enter)에 대한 코드&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 막대의 x축 위치는 x_scale_group으로 생성되는 그룹 위치와 x_scale_bar로 생성되는 막대 위치를 더하고 margin.left를 더한다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 막대의 y축 위치(막대가 시작되는 좌표)는 일반 막대그래프와 마찬가지로 value값을 y_scale로 변형시키면 된다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// width의 값은 x_scale_bar.rangeBand()값을 그래도 사용한다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 막대의 높이는 y_scale(d.value)부터 시작해서 y축의 0 위치까지 와야 한다. &lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 따라서 막대가 시작되는 지점의 y좌표와 막대의 길이를 더하면 차트의 높이가 되어야 한다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// y의 값이 y_scale(d.value) 이니까 height값은 chart_size.height - y_scale(d.value)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// sentiment에 해당하는 값에 따라서 막대의 색을 다르게 하기 위해 class 항목을 지정하고 해당하는 색상은 css에서 명시한다&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;bars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;rect&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; 
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
                &lt;span class=&quot;nx&quot;&gt;x_scale_group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
                &lt;span class=&quot;nx&quot;&gt;x_scale_bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sentiment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;y_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x_scale_bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rangeBand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chart_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;class&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; 
            &lt;span class=&quot;nx&quot;&gt;class_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;긍정&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;pos&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;부정&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;neg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;중립&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;neu&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;class_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sentiment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]});&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;chart-(image)&quot;&gt;Chart (image)&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_image/grouped_bar/grouped_bar04.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/d3/grouped-bar&quot;&gt;Grouped Bar chart&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on November 17, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[memoise in R]]></title>
  <link>http://lumiamitie.github.io/r/memoise</link>
  <id>http://lumiamitie.github.io/r/memoise</id>
  <published>2015-11-14T00:00:00+09:00</published>
  <updated>2015-11-14T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/note-and-pen.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;memoization&quot;&gt;Memoization&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;메모이제이션(memoization)&lt;/strong&gt;은 컴퓨터 프로그램이 동일한 계산을 반복해야 할 때, 
이전에 계산한 값을 메모리에 저장함으로써 동일한 계산의 반복 수행을 제거하여 
프로그램 실행 속도를 빠르게 하는 기술이다&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%A9%94%EB%AA%A8%EC%9D%B4%EC%A0%9C%EC%9D%B4%EC%85%98&quot;&gt;https://ko.wikipedia.org/wiki/메모이제이션&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;여기서는 memoise 패키지에 구현된 함수를 사용한다&lt;/p&gt;

&lt;p&gt;memoization 여부에 따른 성능 차이를 확인해보기 위해 쓸데없이 시간을 많이 잡아먹는 함수를 하나 만들어보기로 했다&lt;/p&gt;

&lt;p&gt;iris 데이터를 지정한 횟수만큼 중복시켜서 rbind를 반복시키는 함수를 만들고 시간을 측정했다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;i &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rbind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; new_df&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이러한 형태로 data.frame을 합치게 될 경우, 매번 df의 마지막 row를 찾고 합치고 하는 과정을 반복해야 하기 때문에 df의 row 수가 많아질 수록 시간이 오래 걸리게 된다. 실제 코드는 아래와 같다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# install.packages(&amp;#39;memoise&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;memoise&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;bind_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;stopifnot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;o&quot;&gt;%%&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  new_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;i &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    new_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rbind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;new_iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;new_iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bind_iris&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##   13.65    0.08   13.95
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;memoise&quot;&gt;memoise&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;memoise&lt;/code&gt; 함수를 사용하려면 memoise 함수에 원하는 함수를 인자로 넣고 새로운 함수를 생성하면 된다. 새로 만들어진 함수를 이용해서 값을 계산하면 memoise 함수는 &lt;strong&gt;인자에 새로운 값이 들어올 때만&lt;/strong&gt; 새로 계산하게 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;m_bind_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; memoise&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bind_iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;따라서 첫 번째 계산때는 시간이 오래 걸리는 반면에 두 번째 계산에서는 시간이 대폭 단축되는 것을 확인할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_bind_iris&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##   12.96    0.05   13.20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_bind_iris&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##       0       0       0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;하지만 새로운 input 값이 들어오면 전체를 다시 계산하기 때문에 다시 원래의 속도가 나온다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_bind_iris&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##    3.65    0.03    3.70
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://adv-r.had.co.nz/&quot;&gt;advanced R&lt;/a&gt; 페이지에 memoization 관련하여 실린 예제가 있다. 피보나치 수열을 재귀함수를 통해 계산하도록 구성했는데, 이렇게 동일한 input값이 지속적으로 등장할 수 있는 환경에서는 memoization이 효과를 발휘할 수 있다&lt;/p&gt;

&lt;p&gt;실제 내용은 아래 페이지에서 확인할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://adv-r.had.co.nz/Function-operators.html&quot;&gt;http://adv-r.had.co.nz/Function-operators.html&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;fib &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  fib&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; fib&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;fib&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##    5.29    0.00    5.39
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이제 이 함수에 memoization을 적용한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;m_fib &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; memoise&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  m_fib&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; m_fib&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_fib&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##    0.02    0.00    0.02
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_fib&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##       0       0       0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;기본적으로 함수 내부의 &lt;strong&gt;재귀 호출에 걸리는 시간이 큰 폭으로 줄어들기 때문에&lt;/strong&gt; 성능이 향상된다. 그리고 두 번째로 실행했을 때는 그 자체의 결과물이 캐싱되어 있기 때문에 더 빠르게 결과물을 확인할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;caching&quot;&gt;Caching&lt;/h2&gt;

&lt;p&gt;캐싱의 여부는 parameter의 이름이 아니라 값에 의해서 결정된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;a &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_bind_iris&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##    7.30    0.02    7.41
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_bind_iris&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##       0       0       0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;따라서 아래와 같은 경우에는 동일한 a 변수이지만 값이 변경되었기 때문에 새로 계산한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;a &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;450&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_bind_iris&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##    8.79    0.04    8.99
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;반면에 새로운 변수 b에 이전 a와 동일한 값을 넣게 되면 캐싱된 결과를 바로 가져오는 것을 확인할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;b &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_bind_iris&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;b&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##       0       0       0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;memoise()&lt;/code&gt; 함수는 &lt;strong&gt;default parameter&lt;/strong&gt;에 대한 정보를 가지고 있지 않다. 따라서 함수가 자동적으로 default parameter를 사용한 경우와 사용자가 default parameter와 동일한 값을 지정해 주는 상황을 서로 다른 input으로 간주한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;bind_iris2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; param &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;aaa&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;stopifnot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;o&quot;&gt;%%&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  new_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;i &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    new_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rbind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;new_iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;new_iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

m_bind_iris2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; memoise&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bind_iris2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이 함수에서는 param 인자의 기본값이 &amp;ldquo;aaa&amp;quot;이기 때문에 아래 두 함수는 결과적으로는 같은 함수다. 하지만 memoise 함수는 &lt;strong&gt;서로 다른 input&lt;/strong&gt;으로 보기 때문에 새로 계산하는 것을 확인할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_bind_iris2&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##    3.00    0.00    2.99
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_bind_iris2&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; param &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;aaa&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##    3.31    0.00    3.36
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;함수 내부에 random한 값을 다루는 부분이 있을 경우에는 memoization의 사용을 주의해야 한다. input 값이 같으면 output이 같아지기 때문에 함수 안에 random한 값을 발생시켜야 하는 과정이 있다면 memoise를 적용한 이후에는 동일한 값이 출력된다. 따라서 이러한 경우에는 필요에 맞게 주의해서 사용할 필요가 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; runif&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 0.59122861 0.06253046 0.46490960 0.81359091 0.31473203
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;m_runif &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; memoise&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;runif&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; m_runif&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 0.6717948 0.6717948 0.6717948 0.6717948 0.6717948
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h2 id=&quot;forget&quot;&gt;forget&lt;/h2&gt;

&lt;p&gt;만약 memoise 해둔 함수를 제거해야 한다면 &lt;code&gt;forget()&lt;/code&gt; 함수를 이용한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;forget&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_fib&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] TRUE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/memoise&quot;&gt;memoise in R&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on November 14, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[dplyr advanced - Databases]]></title>
  <link>http://lumiamitie.github.io/r/dplyr-advanced-databases</link>
  <id>http://lumiamitie.github.io/r/dplyr-advanced-databases</id>
  <published>2015-10-31T00:00:00+09:00</published>
  <updated>2015-10-31T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/macphoto.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;databases&quot;&gt;Databases&lt;/h1&gt;

&lt;p&gt;dplyr은 data.frame과 같은 메모리 내의 데이터 뿐만 아니라 데이터베이스에 있는 자료를 가지고 작업을 할 수 있도록 도와주는 기능을 제공한다. 일반적인 작은 데이터라면 데이터베이스를 통해 R로 자료로 가져오는 과정이 오히려 번거롭겠지만, 데이터베이스에 저장된 데이터를 가져오거나, 엄청나게 많은 양의 데이터(메모리가 감당못할)를 가져와야 할 때에는 데이터베이스를 이용해야 한다.&lt;/p&gt;

&lt;p&gt;만약 데이터베이스에서 대용량의 데이터를 가져와야 한다면 테이블을 통째로 가지고 오기 보다는 필요한 항목으로 간추리고 내용을 요약하여 정리하게 된다. dplyr을 이런 과정을 더 간편하게 해 준다. 데이터베이스에서 원하는 데이터를 가져다가 R에서 작업하기 위해서는 SQL과 R 양쪽에서 머리를 쥐어짜게 만드는 경우가 많은데 dplyr은 SELECT에 한해서 R의 코드가 SQL로 변환되도록 도와준다&lt;/p&gt;

&lt;p&gt;현재 dplyr은 &lt;strong&gt;SQLite&lt;/strong&gt;, &lt;strong&gt;MySQL&lt;/strong&gt;, &lt;strong&gt;PostgreSQL&lt;/strong&gt;과 구글의 &lt;strong&gt;Bigquery&lt;/strong&gt;를 지원하고 있다. 여기서는 가장 간단하게 사용할 수 있는 &lt;strong&gt;SQLite&lt;/strong&gt;를 가지고 dplyr을 통해 데이터베이스에 접근하는 방법을 살펴보려고 한다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;우선 시작하기 전에 &lt;code&gt;RSQLite&lt;/code&gt; 패키지를 설치하고 dplyr을 불러오자&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# install.packages(&amp;#39;RSQLite&amp;#39;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;SQLite는 파일을 기반으로하는 데이터베이스이기 때문에 아래 코드와 같이 데이터베이스를 생성해주면 &lt;strong&gt;working directory&lt;/strong&gt; 안에 해당 이름으로 db가 생성된다. 처음 db를 만들 때는 &lt;code&gt;create = T&lt;/code&gt; 옵션을 넣어주고, 이후에 db에 접근할 때는 &lt;code&gt;create = F&lt;/code&gt; 또는 &lt;strong&gt;create 옵션 없이&lt;/strong&gt; 사용하면 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;sqlite_db &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; src_sqlite&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;sqlite_db.sqlite3&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; create &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;다른 database의 경우에도 각각의 함수들이 존재한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;src_mysql()&lt;/code&gt;, &lt;code&gt;src_postgres()&lt;/code&gt;, &lt;code&gt;src_bigquery()&lt;/code&gt; 의 함수를 통해 각 데이터베이스에 접근할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code&gt;sqlite_db&lt;/code&gt;에는 아직 아무런 데이터가 없다&lt;/p&gt;

&lt;p&gt;일단 가장 친숙한 iris 데이터를 db에 넣어보려고 한다. &lt;code&gt;copy_to()&lt;/code&gt; 함수는 local의 데이터를 remote source의 db에서 사용할 수 있도록 데이터를 복사한다. &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;copy_to(db_connection, local_data.frame)&lt;/code&gt;의 형태로 사용한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;name&lt;/code&gt;옵션을 텍스트를 지정하면 테이블을 해당 이름으로 db에 저장한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;temporary = TRUE&lt;/code&gt; 일 경우 테이블을 임시 테이블로 저장한다. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;copy_to&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sqlite_db&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; temporary &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: sqlite 3.8.6 [sqlite_db.sqlite3]
## From: iris [150 x 5]
## 
##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
##           (dbl)       (dbl)        (dbl)       (dbl)   (chr)
## 1           5.1         3.5          1.4         0.2  setosa
## 2           4.9         3.0          1.4         0.2  setosa
## 3           4.7         3.2          1.3         0.2  setosa
## 4           4.6         3.1          1.5         0.2  setosa
## 5           5.0         3.6          1.4         0.2  setosa
## 6           5.4         3.9          1.7         0.4  setosa
## 7           4.6         3.4          1.4         0.3  setosa
## 8           5.0         3.4          1.5         0.2  setosa
## 9           4.4         2.9          1.4         0.2  setosa
## 10          4.9         3.1          1.5         0.1  setosa
## ..          ...         ...          ...         ...     ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;이제 src_tbls 함수를 통해 db를 살펴보면 iris 데이터가 테이블 형태로 db에 들어간 것을 확인할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;src_tbls&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sqlite_db&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;iris&amp;quot;         &amp;quot;sqlite_stat1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;db에서 테이블을 가져오려면 tbl함수에서 source를 db connection으로 지정하고 table 명을 지정해주면 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;tbl&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sqlite_db&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;iris&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: sqlite 3.8.6 [sqlite_db.sqlite3]
## From: iris [150 x 5]
## 
##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
##           (dbl)       (dbl)        (dbl)       (dbl)   (chr)
## 1           5.1         3.5          1.4         0.2  setosa
## 2           4.9         3.0          1.4         0.2  setosa
## 3           4.7         3.2          1.3         0.2  setosa
## 4           4.6         3.1          1.5         0.2  setosa
## 5           5.0         3.6          1.4         0.2  setosa
## 6           5.4         3.9          1.7         0.4  setosa
## 7           4.6         3.4          1.4         0.3  setosa
## 8           5.0         3.4          1.5         0.2  setosa
## 9           4.4         2.9          1.4         0.2  setosa
## 10          4.9         3.1          1.5         0.1  setosa
## ..          ...         ...          ...         ...     ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;쿼리를 직접 입력해서 데이터를 불러올 수도 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;tbl&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sqlite_db&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sql&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;SELECT * FROM iris&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: sqlite 3.8.6 [sqlite_db.sqlite3]
## From: &amp;lt;derived table&amp;gt; [?? x 5]
## 
##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
##           (dbl)       (dbl)        (dbl)       (dbl)   (chr)
## 1           5.1         3.5          1.4         0.2  setosa
## 2           4.9         3.0          1.4         0.2  setosa
## 3           4.7         3.2          1.3         0.2  setosa
## 4           4.6         3.1          1.5         0.2  setosa
## 5           5.0         3.6          1.4         0.2  setosa
## 6           5.4         3.9          1.7         0.4  setosa
## 7           4.6         3.4          1.4         0.3  setosa
## 8           5.0         3.4          1.5         0.2  setosa
## 9           4.4         2.9          1.4         0.2  setosa
## 10          4.9         3.1          1.5         0.1  setosa
## ..          ...         ...          ...         ...     ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;db에서 데이터를 불러오면 이후에는 local data를 다루는 것 처럼 작업할 수 있다
data.frame에 사용하는 것처럼 dplyr의 기본적인 함수들인 &lt;code&gt;select&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;mutate&lt;/code&gt;, &lt;code&gt;summarise&lt;/code&gt;, &lt;code&gt;arrange&lt;/code&gt;를 적용할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_db &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; tbl&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sqlite_db&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;iris&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
iris_db &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: sqlite 3.8.6 [sqlite_db.sqlite3]
## From: iris [12 x 5]
## Filter: Sepal.Length &amp;gt; 7 
## 
##    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species
##           (dbl)       (dbl)        (dbl)       (dbl)     (chr)
## 1           7.1         3.0          5.9         2.1 virginica
## 2           7.6         3.0          6.6         2.1 virginica
## 3           7.3         2.9          6.3         1.8 virginica
## 4           7.2         3.6          6.1         2.5 virginica
## 5           7.7         3.8          6.7         2.2 virginica
## 6           7.7         2.6          6.9         2.3 virginica
## 7           7.7         2.8          6.7         2.0 virginica
## 8           7.2         3.2          6.0         1.8 virginica
## 9           7.2         3.0          5.8         1.6 virginica
## 10          7.4         2.8          6.1         1.9 virginica
## 11          7.9         3.8          6.4         2.0 virginica
## 12          7.7         3.0          6.1         2.3 virginica
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# Source: sqlite 3.8.6 [sqlite_db.sqlite3]
# From: iris [12 x 5]
# Filter: Sepal.Length &amp;gt; 7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;source를 보면 &lt;code&gt;as.tbl(iris)&lt;/code&gt;가 &lt;code&gt;Source: local data frame [150 x 5]&lt;/code&gt; 을 보여주는 것과는 다르게 sqlite를 source로 하는 것을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;laziness&quot;&gt;Laziness&lt;/h2&gt;

&lt;p&gt;dplyr이 데이터베이스를 가지고 작업할 때에는 최대한 느긋한 계산을 통해 데이터를 처리하려고 한다&lt;/p&gt;

&lt;p&gt;다시 말하자면 사용자가 직접 요청하기 전에는 전체 데이터를 가지고 오지 않는다. 작업을 할 때에도 최대한 끝까지 작업을 미루다가 사용자가 최종적으로 요구하는 항목들만 가지고 연산해서 데이터를 가져온다. 아래 코드를 예로 들면 &lt;code&gt;iris_fltd&lt;/code&gt; 라는 변수를 생성할 때 까지도 db 작업을 하지 않다가 &lt;code&gt;iris_fltd&lt;/code&gt;를 진짜 실행시키는 경우에만 db에 연결하여 데이터 작업을 하게 된다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;필요한 경우에는 특정 함수를 사용해서 강제로 연산을 하도록 만들 수도 있다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;작업한 내용을 local 환경으로 가져오고 싶을 때는 &lt;code&gt;collect()&lt;/code&gt;함수를 사용한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;collect()&lt;/code&gt; 함수는 쿼리를 실행하고 그 결과물을 R로 반환한다(&lt;code&gt;tbl_df&lt;/code&gt; 형태로)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_fltd &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; iris_db &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

collect&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris_fltd&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [12 x 5]
## 
##    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species
##           (dbl)       (dbl)        (dbl)       (dbl)     (chr)
## 1           7.1         3.0          5.9         2.1 virginica
## 2           7.6         3.0          6.6         2.1 virginica
## 3           7.3         2.9          6.3         1.8 virginica
## 4           7.2         3.6          6.1         2.5 virginica
## 5           7.7         3.8          6.7         2.2 virginica
## 6           7.7         2.6          6.9         2.3 virginica
## 7           7.7         2.8          6.7         2.0 virginica
## 8           7.2         3.2          6.0         1.8 virginica
## 9           7.2         3.0          5.8         1.6 virginica
## 10          7.4         2.8          6.1         1.9 virginica
## 11          7.9         3.8          6.4         2.0 virginica
## 12          7.7         3.0          6.1         2.3 virginica
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;source: local data frame [12 x 5]&lt;/code&gt;로 source가 변경된 것을 확인할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;compute()&lt;/code&gt; 함수를 사용하면 쿼리를 실행하고 그 결과물을 db의 임시 테이블에 저장한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;compute&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris_fltd&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: sqlite 3.8.6 [sqlite_db.sqlite3]
## From: vdtgepxwho [12 x 5]
## 
##    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species
##           (dbl)       (dbl)        (dbl)       (dbl)     (chr)
## 1           7.1         3.0          5.9         2.1 virginica
## 2           7.6         3.0          6.6         2.1 virginica
## 3           7.3         2.9          6.3         1.8 virginica
## 4           7.2         3.6          6.1         2.5 virginica
## 5           7.7         3.8          6.7         2.2 virginica
## 6           7.7         2.6          6.9         2.3 virginica
## 7           7.7         2.8          6.7         2.0 virginica
## 8           7.2         3.2          6.0         1.8 virginica
## 9           7.2         3.0          5.8         1.6 virginica
## 10          7.4         2.8          6.1         1.9 virginica
## 11          7.9         3.8          6.4         2.0 virginica
## 12          7.7         3.0          6.1         2.3 virginica
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;테이블 목록을 확인하면 임시 테이블이 생성된 것을 볼 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;src_tbls&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sqlite_db&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;iris&amp;quot;         &amp;quot;sqlite_stat1&amp;quot; &amp;quot;vdtgepxwho&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code&gt;dplyr&lt;/code&gt;은 db 작업을 할 때, 실수로 무거운 연산을 수행하는 것을 방지하기 위해서 몇 가지 제한을 둔다&lt;/p&gt;

&lt;p&gt;우선, &lt;code&gt;nrow()&lt;/code&gt;의 결과는 무조건 NA로 처리한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;nrow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;tbl&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sqlite_db&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sql&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;SELECT * FROM iris&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] NA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;연산을 할 때, 실제로 계산이 다 끝나기 전에는 row의 개수가 얼마나 될지 파악하기 힘들기 때문에 &lt;code&gt;nrow()&lt;/code&gt;의 결과는 NA로 반환한다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;또, tbl의 결과물은 첫 10개만 보여준다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그리고 tail()함수를 사용할 수 없다.마찬가지로 전체 쿼리의 결과물을 보기 전에는 마지막 row를 확인할 수 없다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# tail(tbl(sqlite_db, sql(&amp;#39;SELECT * FROM iris&amp;#39;)))
# &amp;gt; Error: tail is not supported by sql sources
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code&gt;query&lt;/code&gt;항목에서는 데이터에 대한 작업이 sql로 어떻게 변환되었는지 확인할 수 있다&lt;/p&gt;

&lt;p&gt;또는 &lt;code&gt;show_query()&lt;/code&gt;함수를 통해 확인할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_fltd&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;query
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## &amp;lt;Query&amp;gt; SELECT &amp;quot;Sepal.Length&amp;quot;, &amp;quot;Sepal.Width&amp;quot;, &amp;quot;Petal.Length&amp;quot;, &amp;quot;Petal.Width&amp;quot;, &amp;quot;Species&amp;quot;
## FROM &amp;quot;iris&amp;quot;
## WHERE &amp;quot;Sepal.Length&amp;quot; &amp;gt; 7.0
## &amp;lt;SQLiteConnection&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;show_query&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris_fltd&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## &amp;lt;SQL&amp;gt;
## SELECT &amp;quot;Sepal.Length&amp;quot;, &amp;quot;Sepal.Width&amp;quot;, &amp;quot;Petal.Length&amp;quot;, &amp;quot;Petal.Width&amp;quot;, &amp;quot;Species&amp;quot;
## FROM &amp;quot;iris&amp;quot;
## WHERE &amp;quot;Sepal.Length&amp;quot; &amp;gt; 7.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;group-operation&quot;&gt;Group Operation&lt;/h2&gt;

&lt;p&gt;SQLite는 window function에 대한 지원이 취약하다. 따라서 group을 지정한 상태에서 mutate나 filter에 대한 결과물이 생각과는 다르게 나올 수 있다는 점을 염두해야 한다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;로컬에 있는 iris에서 Species별로 Sepal.Length의 평균을 계산해서 새로운 열에 데이터를 저장하려고 한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  group_by&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mean_SL &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [150 x 6]
## Groups: Species [3]
## 
##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species mean_SL
##           (dbl)       (dbl)        (dbl)       (dbl)  (fctr)   (dbl)
## 1           5.1         3.5          1.4         0.2  setosa   5.006
## 2           4.9         3.0          1.4         0.2  setosa   5.006
## 3           4.7         3.2          1.3         0.2  setosa   5.006
## 4           4.6         3.1          1.5         0.2  setosa   5.006
## 5           5.0         3.6          1.4         0.2  setosa   5.006
## 6           5.4         3.9          1.7         0.4  setosa   5.006
## 7           4.6         3.4          1.4         0.3  setosa   5.006
## 8           5.0         3.4          1.5         0.2  setosa   5.006
## 9           4.4         2.9          1.4         0.2  setosa   5.006
## 10          4.9         3.1          1.5         0.1  setosa   5.006
## ..          ...         ...          ...         ...     ...     ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;iris&lt;/code&gt;와 &lt;code&gt;iris_db&lt;/code&gt;의 데이터는 동일하지만 &lt;code&gt;group_by&lt;/code&gt;를 통한 &lt;code&gt;mutate&lt;/code&gt;연산을 &lt;em&gt;SQLite&lt;/em&gt;*가 지원하지 않기 때문에&lt;/p&gt;

&lt;p&gt;위의 코드와는 전혀 다른 결과물이 나오게 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_db &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  group_by&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mean_SL &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: sqlite 3.8.6 [sqlite_db.sqlite3]
## From: iris [1 x 6]
## Grouped by: Species 
## 
##   Sepal.Length Sepal.Width Petal.Length Petal.Width   Species  mean_SL
##          (dbl)       (dbl)        (dbl)       (dbl)     (chr)    (dbl)
## 1          5.9           3          5.1         1.8 virginica 5.843333
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;반면에 summarise 함수는 정상적으로 작동한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  group_by&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  summarise&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mean_SL &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [3 x 2]
## 
##      Species mean_SL
##       (fctr)   (dbl)
## 1     setosa   5.006
## 2 versicolor   5.936
## 3  virginica   6.588
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_db &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  group_by&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  summarise&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mean_SL &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: sqlite 3.8.6 [sqlite_db.sqlite3]
## From: &amp;lt;derived table&amp;gt; [?? x 2]
## 
##       Species mean_SL
##         (chr)   (dbl)
## 1      setosa   5.006
## 2  versicolor   5.936
## 3   virginica   6.588
## ..        ...     ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;other-databases&quot;&gt;Other Databases&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Mysql&lt;/code&gt;의 경우에는 &lt;code&gt;RMySQL&lt;/code&gt; 패키지를 설치하고 나면 &lt;code&gt;src_mysql()&lt;/code&gt;함수를 통해 접근할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;db와의 connection을 생성하고 나면 이후의 사용 방법은 대부분 비슷하다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;mysql_db= src_mysql(dbname = &amp;quot;dbname&amp;quot;, 
                    host = &amp;quot;000.000.000.00&amp;quot;, 
                    user = &amp;#39;user&amp;#39;, 
                    password = &amp;#39;password&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;의 형태로 connection을 생성할 수 있다. 다만 윈도우에서는 &lt;code&gt;RMySQL&lt;/code&gt; 설치 자체가 까다로울 수 있으니 주의해야 한다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;dplyr의 데이터베이스 작업에 대해서 더 자세한 내용을 살펴보고 싶다면 &lt;/p&gt;

&lt;p&gt;dplyr을 불러온 후에 &lt;code&gt;vignette(&amp;#39;databases&amp;#39;)&lt;/code&gt; 를 통해 dplyr의 database 관련 작업에 대한 문서를 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;또는 &lt;a href=&quot;https://cran.r-project.org/web/packages/dplyr/vignettes/databases.html&quot;&gt;https://cran.r-project.org/web/packages/dplyr/vignettes/databases.html&lt;/a&gt; 에서 문서를 볼 수 있다&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/dplyr-advanced-databases&quot;&gt;dplyr advanced - Databases&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on October 31, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Tidy data]]></title>
  <link>http://lumiamitie.github.io/r/tidy-data</link>
  <id>http://lumiamitie.github.io/r/tidy-data</id>
  <published>2015-10-26T00:00:00+09:00</published>
  <updated>2015-10-26T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;../../images/taking-notes.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;tidy-data&quot;&gt;Tidy data&lt;/h1&gt;

&lt;p&gt;많은 패키지들, 특히 ggplot2는 특정한 형태로 정리된 데이터를 요구한다. 처음에 익숙하지 않을 때는 함수가 요구하는 데이터의 형태를 맞추기도 버거웠지만 차츰 익숙해지면서 깔끔하게 정리된 데이터의 중요성을 깨닫게 된다. 깔끔한 데이터를 만드는 과정 중에서 wide format과 long format 사이의 변환은 방법을 모르면 헤매거나 크게 돌아갈 수도 있기 때문에 여기서 가장 대표적인 패키지, &lt;code&gt;tidyr&lt;/code&gt;과 &lt;code&gt;reshape2&lt;/code&gt;의 기본적인 사용법을 정리해보려고 한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;tidy data&lt;/strong&gt;에 대한 내용은 &lt;a href=&quot;https://cran.r-project.org/web/packages/tidyr/vignettes/tidy-data.html&quot;&gt;https://cran.r-project.org/web/packages/tidyr/vignettes/tidy-data.html&lt;/a&gt;를 참고하거나 R에서 &lt;code&gt;tidyr&lt;/code&gt;을 설치하고 &lt;code&gt;vignette(&amp;#39;tidy-data&amp;#39;)&lt;/code&gt;명령어로 문서를 볼 수 있다. &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;tidyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;reshape2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;데이터를 살펴보면 table의 형태를 가진 자료가 많다. 열과 행에 각각 변수가 들어가며, 찾고자 하는 열과 행에 기록된 값을 찾는다.&lt;/p&gt;

&lt;p&gt;이런 형태의 데이터는 contingency table, wide-format data 등 여러 가지 이름을 가진다&lt;/p&gt;

&lt;p&gt;엑셀을 사용한다면 데이터블 pivot table로 정리했을 때 이러한 형태로 데이터를 정리할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;WorldPhones
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##      N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer
## 1951  45939  21574 2876   1815    1646     89      555
## 1956  60423  29990 4708   2568    2366   1411      733
## 1957  64721  32510 5230   2695    2526   1546      773
## 1958  68484  35218 6662   2845    2691   1663      836
## 1959  71799  37598 6856   3000    2868   1769      911
## 1960  76036  40341 8220   3145    3054   1905     1008
## 1961  79831  43173 9053   3338    3224   2005     1076
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위 데이터에서 1958년도 Asia의 값을 확인하려면 4번째 행, 3번째 열의 값인 6662를 보면 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;WorldPhones&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#로 바로 확인할 수 있다&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 6662
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;WorldPhones&lt;/code&gt; 데이터는 7개의 행과 7개의 열을 가지고 있다.&lt;/p&gt;

&lt;p&gt;다시 말하자면 행에 해당하는 변수(연도)가 7가지, 열에 해당하는 변수(지역)가 7가지인 셈이다.&lt;/p&gt;

&lt;p&gt;또, 같은 데이터를 이러한 형태로도 표현할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;area &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;dimnames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;WorldPhones&lt;span class=&quot;p&quot;&gt;)[[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt; 
            &lt;span class=&quot;kp&quot;&gt;as.data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;WorldPhones&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; row.names&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##       area X1951 X1956 X1957 X1958 X1959 X1960 X1961
## 1   N.Amer 45939 60423 64721 68484 71799 76036 79831
## 2   Europe 21574 29990 32510 35218 37598 40341 43173
## 3     Asia  2876  4708  5230  6662  6856  8220  9053
## 4   S.Amer  1815  2568  2695  2845  3000  3145  3338
## 5  Oceania  1646  2366  2526  2691  2868  3054  3224
## 6   Africa    89  1411  1546  1663  1769  1905  2005
## 7 Mid.Amer   555   733   773   836   911  1008  1076
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;위 자료들은 모두 동일한 데이터를 표현하고 있지만 그 형태는 각기 다르다. &lt;/p&gt;

&lt;p&gt;그냥 단순하게 행과 열을 구분하는 것 만으로는 우리가 표현하고자 하는 데이터를 명확하게 표현하기 힘들다&lt;/p&gt;

&lt;p&gt;따라서 데이터가 생긴 형태뿐만 아니라 그 안에 담긴 의미를 적절하게 표현해줄 수 있는 방식을 정의할 필요가 있다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;tidy-data&quot;&gt;Tidy data&lt;/h2&gt;

&lt;p&gt;우리가 어떤 Dataset을 가지고 있다면 이 데이터가 가지고 있는 기본적인 속성은 다음과 같다&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;기본적으로 Dataset은 숫자 또는 문자열 등의 값(value)이 모여서 구성된다. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;모든 값은 하나의 변수(variable)와 하나의 관측치(observation)에 속한다. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;변수는 같은 속성의 값을 측정한 결과를 말하고, 관측치는 관측대상 하나가 가지는 모든 속성값을 의미한다&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;WorldPhones_df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;year &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;row.names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;WorldPhones&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                            &lt;span class=&quot;kp&quot;&gt;as.data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;WorldPhones&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; row.names &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;WorldPhones_df&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   year N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer
## 1 1951  45939  21574 2876   1815    1646     89      555
## 2 1956  60423  29990 4708   2568    2366   1411      733
## 3 1957  64721  32510 5230   2695    2526   1546      773
## 4 1958  68484  35218 6662   2845    2691   1663      836
## 5 1959  71799  37598 6856   3000    2868   1769      911
## 6 1960  76036  40341 8220   3145    3054   1905     1008
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;위에서 설명한 데이터를 좀 더 깔끔하게 구성하기 위해 다음과 같은 원칙을 정했다&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;각 변수는 하나의 열을 구성하고, 각 관측치는 하나의 행을 구성한다&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;하나의 테이블은 동일한 속성의 관측대상들로 구성된다&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이러한 원칙 하에 정리된 데이터를 tidy data라고 한다&lt;/p&gt;

&lt;p&gt;WorldPhones 데이터를 깔끔하게 정리해본다면 다음과 같이 할 수 있을 것이다&lt;/p&gt;

&lt;p&gt;일단 함수보다는 결과물에 형태를 살펴보자&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;melt&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;WorldPhones&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    Var1     Var2 value
## 1  1951   N.Amer 45939
## 2  1956   N.Amer 60423
## 3  1957   N.Amer 64721
## 4  1958   N.Amer 68484
## 5  1959   N.Amer 71799
## 6  1960   N.Amer 76036
## 7  1961   N.Amer 79831
## 8  1951   Europe 21574
## 9  1956   Europe 29990
## 10 1957   Europe 32510
## 11 1958   Europe 35218
## 12 1959   Europe 37598
## 13 1960   Europe 40341
## 14 1961   Europe 43173
## 15 1951     Asia  2876
## 16 1956     Asia  4708
## 17 1957     Asia  5230
## 18 1958     Asia  6662
## 19 1959     Asia  6856
## 20 1960     Asia  8220
## 21 1961     Asia  9053
## 22 1951   S.Amer  1815
## 23 1956   S.Amer  2568
## 24 1957   S.Amer  2695
## 25 1958   S.Amer  2845
## 26 1959   S.Amer  3000
## 27 1960   S.Amer  3145
## 28 1961   S.Amer  3338
## 29 1951  Oceania  1646
## 30 1956  Oceania  2366
## 31 1957  Oceania  2526
## 32 1958  Oceania  2691
## 33 1959  Oceania  2868
## 34 1960  Oceania  3054
## 35 1961  Oceania  3224
## 36 1951   Africa    89
## 37 1956   Africa  1411
## 38 1957   Africa  1546
## 39 1958   Africa  1663
## 40 1959   Africa  1769
## 41 1960   Africa  1905
## 42 1961   Africa  2005
## 43 1951 Mid.Amer   555
## 44 1956 Mid.Amer   733
## 45 1957 Mid.Amer   773
## 46 1958 Mid.Amer   836
## 47 1959 Mid.Amer   911
## 48 1960 Mid.Amer  1008
## 49 1961 Mid.Amer  1076
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위와 같이 정리하면 변수 &lt;code&gt;Var1&lt;/code&gt;에는 연도가, &lt;code&gt;Var2&lt;/code&gt;에는 지역이 들어가고 &lt;code&gt;value&lt;/code&gt; 열에는 값이 들어간다&lt;/p&gt;

&lt;p&gt;또, 첫 번째 행에는 1951년도 북아메리카의 전화기 수, 10 번째 행에는 1957년도 유럽의 전화기 수가 정리되어 있다. &lt;/p&gt;

&lt;p&gt;원래의 형태에 비해서는 분명 양이 많아졌지만 이와 같은 형태로 여러 가지 장점이 있다.&lt;/p&gt;

&lt;p&gt;우선 변수를 자유롭게 추가할 수 있다. 기존의 &lt;code&gt;WorldPhone&lt;/code&gt;과 같은 Wide format의 데이터는 행과 열에 변수가 하나씩 들어간다. 때문에 두 개 변수에 대해서는 더 간단하고 깔끔하게 정리할 수 있지만 추가적인 변수를 표현하기에는 힘들다. 반면에 long format으로 정리한 경우에는 그냥 열을 하나 더 만들면 변수를 추가할 수 있다&lt;/p&gt;

&lt;p&gt;두 번째로는 변수를 열 하나로 관리하기 때문에 데이터를 더 깔끔하게 처리할 수 있다. 하나의 변수는 같은 속성을 공유하게 되는데 같은 변수라면 같은 열에 배치되는 이러한 방식은 동일한 속성의 값을 같은 방식으로 처리할 수 있게 해준다. 이렇게 데이터가 정리된 경우 dplyr의 mutate함수를 이용하면 열 단위로 데이터를 처리할 수 있게된다. 또한 ggplot2같은 패키지에서는 변수와 그래프의 에스테틱을 맵핑시키는 과정에서 이러한 tidy data의 강점을 최대한 활용한다. 또, formula를 사용하게 되는 경우라면 하나의 변수가 하나의 열을 구성하는 것이 필수적이다&lt;/p&gt;

&lt;p&gt;세 번째로는 데이터 구조가 표준화된다는 점이 있다. 어떤 함수가 tidy data를 요구한다는 것을 알면 우리는 해당 데이터를 data.frame으로 구성해서 각 변수가 각각의 열을 구성하도록 하면 된다. 그리고 이렇게 tidy data를 한 번 구성하고 나면 tidy data를 사용하는 다른 패키지 및 함수에 바로 적용할 수도 있게 된다. ggplot2에서는 이러한 성질을 이용해서 다양한 시각화를 통일된 문법으로 시도할 수 있도록 기능을 지원한다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br / &gt;&lt;/p&gt;

&lt;h2 id=&quot;tidying-messy-datasets&quot;&gt;Tidying messy datasets&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;tidy-data&lt;/code&gt; 문서를 보면 지저분한 데이터의 대표적인 사례로 다섯 가지 경우를 들고 있다&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;열 이름에 변수 이름이 아니라 값이 들어가있는 경우&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;하나의 열에 여러 개의 변수가 들어가있는 경우&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;변수가 행, 열 모두에 들어간 경우&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;하나의 테이블에 여러 가지 종류의 관측대상이 포함된 경우&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;하나의 관측 대상이 여러 개의 테이블에 포함된 경우&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;각각의 경우에 대한 설명은 vignette에서 확인할 수 있으니 여기에서는 넘어가려고 한다. 결국 우리가 원하는 것은 지저분한 데이터를 단정하게 만드는 것이다. 글의 초반에 나와있는 문구처럼 지저분한 데이터는 그 종류를 여러가지로 나눠볼 수 있겠지만 단정하게 만들면 데이터의 형태가 비슷한 형태로 종합된다&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;reshape2&quot;&gt;reshape2&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;tidyr&lt;/code&gt;보다 이전에 등장하여 많이 쓰였던 패키지이다. &lt;code&gt;tidyr&lt;/code&gt;패키지가 data.frame에 특화되어있기 때문에 data.frame에 대한 작업이 아니라면 여전히 reshape2 패키지를 사용하게 된다&lt;/p&gt;

&lt;p&gt;기본적으로는 &lt;code&gt;melt&lt;/code&gt;와 &lt;code&gt;cast&lt;/code&gt;라는 두 가지 함수로 구성된다. &lt;code&gt;melt&lt;/code&gt;는 messy data(또는 wide format)를 tidy한 형태(또는 long format)로 변형시켜준다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cast&lt;/code&gt;는 tidy한 형태의 데이터를 contingency table이나 엑셀의 피벗테이블처럼 행과 열에 특정 변수를 지정하여 데이터를 요약해준다. 결과물의 형태에 따라 &lt;code&gt;acast&lt;/code&gt;와 &lt;code&gt;dcast&lt;/code&gt;로 구분된다. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;dcast&lt;/code&gt;는 data.frame의 형태로 결과물을 내보내고, &lt;code&gt;acast&lt;/code&gt;는 vector / matrix / array의 형태로 결과물을 만들어낸다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;phone_melt &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; melt&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;WorldPhones&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; value.name &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;phone_melt&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Var1   Var2 number
## 1 1951 N.Amer  45939
## 2 1956 N.Amer  60423
## 3 1957 N.Amer  64721
## 4 1958 N.Amer  68484
## 5 1959 N.Amer  71799
## 6 1960 N.Amer  76036
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dcast&lt;/code&gt;는 formula 형태로 row와 col에 들어갈 변수를 지정할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;y~x&lt;/strong&gt;의 형태로 사용하기 때문에 row에 들어갈 변수는 x에, col에 들어갈 변수는 y에 지정한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;value.var&lt;/code&gt;에는 value값으로 들어갈 변수를 지정할 수 있다. &lt;/p&gt;

&lt;p&gt;지정하지 않으면 적당한 변수를 넣지만 경고메세지가 발생한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;dcast&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;phone_melt&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Var1&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;Var2&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; value.var &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Var1 N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer
## 1 1951  45939  21574 2876   1815    1646     89      555
## 2 1956  60423  29990 4708   2568    2366   1411      733
## 3 1957  64721  32510 5230   2695    2526   1546      773
## 4 1958  68484  35218 6662   2845    2691   1663      836
## 5 1959  71799  37598 6856   3000    2868   1769      911
## 6 1960  76036  40341 8220   3145    3054   1905     1008
## 7 1961  79831  43173 9053   3338    3224   2005     1076
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;같은 내용을 &lt;code&gt;acast&lt;/code&gt;로 실행하면 matrix로 데이터가 출력된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;acast&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;phone_melt&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Var1&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;Var2&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; value.var &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##      N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer
## 1951  45939  21574 2876   1815    1646     89      555
## 1956  60423  29990 4708   2568    2366   1411      733
## 1957  64721  32510 5230   2695    2526   1546      773
## 1958  68484  35218 6662   2845    2691   1663      836
## 1959  71799  37598 6856   3000    2868   1769      911
## 1960  76036  40341 8220   3145    3054   1905     1008
## 1961  79831  43173 9053   3338    3224   2005     1076
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# matrix&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;acast&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;phone_melt&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Var1&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;Var2&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; value.var &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;matrix&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;reshape2가 tidyr과 다른 점은 matrix에 대해서도 바로 적용할 수 있다는 것이다&lt;/p&gt;

&lt;p&gt;matrix형태의 데이터를 이용해 ggplot2로 그래프를 그린다고 하면 reshape2를 사용해 data.frame으로 변경하면 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;str&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;volcano&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##  num [1:87, 1:61] 100 101 102 103 104 105 105 106 107 108 ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;volcano_melt &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; melt&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;volcano&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;volcano_melt&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Var1 Var2 value
## 1    1    1   100
## 2    2    1   101
## 3    3    1   102
## 4    4    1   103
## 5    5    1   104
## 6    6    1   105
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;tidyr&quot;&gt;tidyr&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;tidyr&lt;/code&gt; 패키지는 data.frame에만 적용할 수 있는 패키지이다. pipe 연산자(%&amp;gt;%)를 이용한 작업을 쉽게 할 수 있도록 구성되어있다. pipe에 대한 자세한 내용은 &lt;a href=&quot;http://lumiamitie.github.io/r/magrittr/&quot;&gt;이 곳&lt;/a&gt; 에서 확인할 수 있다&lt;/p&gt;

&lt;p&gt;위에서 만들었던 &lt;code&gt;WorldPhones_df&lt;/code&gt; 를 tidy한 형태로 변형시키려고 한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;WorldPhones_df
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   year N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer
## 1 1951  45939  21574 2876   1815    1646     89      555
## 2 1956  60423  29990 4708   2568    2366   1411      733
## 3 1957  64721  32510 5230   2695    2526   1546      773
## 4 1958  68484  35218 6662   2845    2691   1663      836
## 5 1959  71799  37598 6856   3000    2868   1769      911
## 6 1960  76036  40341 8220   3145    3054   1905     1008
## 7 1961  79831  43173 9053   3338    3224   2005     1076
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gather&lt;/code&gt;는 reshape2의 melt와 비슷한 기능을 한다. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;gather&lt;/code&gt;함수는 기본적으로 &lt;code&gt;gather(data, key, value, column_list)&lt;/code&gt;로 구성된다. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;data&lt;/code&gt;는 말 그대로 대상이 되는 data.frame을 의미하고 &lt;code&gt;key&lt;/code&gt;는 key column의 이름, &lt;code&gt;value&lt;/code&gt;는 value column의 이름을 입력한다. &lt;code&gt;column_list&lt;/code&gt;에는 key와 value로 구분할 열의 이름들을 지정하면 된다. &lt;code&gt;dplyr&lt;/code&gt;의 &lt;code&gt;select&lt;/code&gt; 항목에서 사용할 수 있는 열 선택 방법과 동일하게 사용할 수 있다. N.Amer 부터 Mid.Amer까지의 열을 선택할 것이니 &lt;code&gt;N.Amer:Mid.Amer&lt;/code&gt;로 지정하면 된다&lt;/p&gt;

&lt;p&gt;이 중에서 첫 번째 열은 year는 놔두고, N.Amer부터 Mid.Amer까지를 key와 value로 분리시킨다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;key column&lt;/strong&gt;의 이름은 &lt;code&gt;area&lt;/code&gt;, &lt;strong&gt;value column&lt;/strong&gt;의 이름은 &lt;code&gt;number&lt;/code&gt;로 지정한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;phone_gather &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; gather&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;WorldPhones_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; area&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; number&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; N.Amer&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;Mid.Amer&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;phone_gather&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   year   area number
## 1 1951 N.Amer  45939
## 2 1956 N.Amer  60423
## 3 1957 N.Amer  64721
## 4 1958 N.Amer  68484
## 5 1959 N.Amer  71799
## 6 1960 N.Amer  76036
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;spread&lt;/code&gt; 함수는 reshape2의 &lt;code&gt;cast&lt;/code&gt;계열 함수와 비슷한 기능을 한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;spread(data, key, value)&lt;/code&gt;의 형태로 사용되는데 열별로 정리하려고하는 변수를 key에 지정하고, 값으로 정리해야하는 변수는 value에 넣는다. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;spread&lt;/code&gt;함수를 이용해서 &lt;code&gt;gather&lt;/code&gt;를 사용하기 전의 원래 형태로 돌리려면 다음과 같이 할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;spread&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;phone_gather&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; area&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; number&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   year N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer
## 1 1951  45939  21574 2876   1815    1646     89      555
## 2 1956  60423  29990 4708   2568    2366   1411      733
## 3 1957  64721  32510 5230   2695    2526   1546      773
## 4 1958  68484  35218 6662   2845    2691   1663      836
## 5 1959  71799  37598 6856   3000    2868   1769      911
## 6 1960  76036  40341 8220   3145    3054   1905     1008
## 7 1961  79831  43173 9053   3338    3224   2005     1076
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;만약 NA값이 발생할 경우 &lt;code&gt;fill&lt;/code&gt; 옵션을 통해서 NA값을 임의의 값으로 채워넣을 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;na_sample &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; phone_gather &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; sample_n&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;아래와 같이 NA가 잔뜩 발생하는 경우&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;spread&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;na_sample&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; area&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; number&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   year N.Amer Europe Asia S.Amer Oceania
## 1 1951  45939     NA 2876   1815      NA
## 2 1957     NA  32510   NA     NA      NA
## 3 1958  68484  35218   NA     NA      NA
## 4 1959     NA  37598 6856     NA      NA
## 5 1961  79831     NA   NA     NA    3224
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;fill&lt;/code&gt; 옵션에 0을 지정하면 NA값 대신에 0으로 빈칸을 채운다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;spread&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;na_sample&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; area&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; number&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   year N.Amer Europe Asia S.Amer Oceania
## 1 1951  45939      0 2876   1815       0
## 2 1957      0  32510    0      0       0
## 3 1958  68484  35218    0      0       0
## 4 1959      0  37598 6856      0       0
## 5 1961  79831      0    0      0    3224
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;좀 더 상세한 NA처리를 위해서는 &lt;code&gt;replace_na&lt;/code&gt;와 &lt;code&gt;fill&lt;/code&gt;이라는 함수를 제공한다&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/replace_na_with_tidyr/&quot;&gt;http://lumiamitie.github.io/r/replace_na_with_tidyr/&lt;/a&gt; 에 정리한 내용을 참고하면 된다&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/tidy-data&quot;&gt;Tidy data&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on October 26, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[dplyr advanced - data_frame]]></title>
  <link>http://lumiamitie.github.io/r/dplyr-advanced-data_frame</link>
  <id>http://lumiamitie.github.io/r/dplyr-advanced-data_frame</id>
  <published>2015-10-19T00:00:00+09:00</published>
  <updated>2015-10-19T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;../../images/macphoto.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;data_frame&quot;&gt;data_frame&lt;/h2&gt;

&lt;p&gt;dplyr은 data.frame을 더 편리하게 사용할 수 있도록 변형된 형태의 data.frame을 제공한다&lt;/p&gt;

&lt;p&gt;초창기부터 제공했던 &lt;code&gt;tbl_df&lt;/code&gt; 을 이용하면 화면에 맞게 행과 열의 수를 제한해서 볼 수 있고&lt;/p&gt;

&lt;p&gt;dplyr과 관련된 추가적인 정보(&lt;code&gt;group_by&lt;/code&gt; 정보, column의 type, source정보 등)를 제공한다&lt;/p&gt;

&lt;p&gt;이후에 추가된 &lt;code&gt;data_frame&lt;/code&gt;은 tbl_df와 data.frame을 기반으로 하여 data.frame을 더욱 편리하게 사용할 수 있도록 여러가지 기능을 제공한다&lt;/p&gt;

&lt;p&gt;dplyr의 기능과 궁합이 잘 맞는 데이터 형태이기 때문에 차이점을 명확하게 알고 쓴다면 도움이 많이 될 것 같다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;아래 내용은 dplyr 패키지 내부에 있는 &lt;code&gt;data_frames&lt;/code&gt; 문서를 정리하고 일부 내용을 추가했다&lt;/p&gt;

&lt;p&gt;R에서는 dplyr 패키지를 불러온 후에 &lt;code&gt;vignette(&amp;#39;data_frames&amp;#39;)&lt;/code&gt; 명령어로 문서를 볼 수 있으며&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cran.r-project.org/web/packages/dplyr/vignettes/data_frames.html&quot;&gt;CRAN 페이지&lt;/a&gt;에서도 문서를 확인할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## 
## Attaching package: &amp;#39;dplyr&amp;#39;
## 
## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter, lag
## 
## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     intersect, setdiff, setequal, union
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;data.frame과의-차이점&quot;&gt;data.frame과의 차이점&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;data.frame은 &lt;code&gt;stringsAsFactors = FALSE&lt;/code&gt; 를 해주지 않으면 문자열을 factor로 가져간다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;month &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;month.abb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    month 
## &amp;quot;factor&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;data_frame은 입력한 데이터의 type을 변경하지 않는다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;data_frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;month &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;month.abb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##       month 
## &amp;quot;character&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;list를 값으로 가지는 column을 쉽게 생성할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list_col &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data_frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;index &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                      rnorm &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;rnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                                   rnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                                   rnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                      &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
list_col&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
##  [1] -0.21884373 -0.83728231  0.74070271 -0.01440668  1.92528622
##  [6]  0.64657433  1.53596809  0.37297701  0.75368773  1.26919784
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이 경우 rnorm column은 list의 형태로 출력되기 때문에&lt;/p&gt;

&lt;p&gt;sapply 함수를 이용하면 mutate와 함께 자료를 정리할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list_col &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mean &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;rnorm&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [3 x 3]
## 
##   index     rnorm       mean
##   (int)     (chr)      (dbl)
## 1     1 &amp;lt;dbl[10]&amp;gt;  0.6173861
## 2     2  &amp;lt;dbl[5]&amp;gt; -0.2303840
## 3     3  &amp;lt;dbl[7]&amp;gt; -0.2237431
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;data_frame은 변수의 이름을 변경하지 않는다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# space.variable&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;space variable&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   space.variable
## 1              1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# space variable&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;data_frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;space variable&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [1 x 1]
## 
##   space variable
##            (dbl)
## 1              1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;값을 계산할 때 느긋(lazy)하게 순차적으로 진행한다&lt;/p&gt;

&lt;p&gt;다시 말하자면, dplyr의 mutate 함수를 사용하는 것처럼 data_frame을 생성할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Error&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Error in data.frame(x = 1:5, y = 3 * x) : object &amp;#39;x&amp;#39; not found
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;data_frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [5 x 2]
## 
##       x     y
##   (int) (dbl)
## 1     1     3
## 2     2     6
## 3     3     9
## 4     4    12
## 5     5    15
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;기타-특이사항들&quot;&gt;기타 특이사항들&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;data_frame은-row.names()를-사용하지-않는다&quot;&gt;data_frame은 &lt;code&gt;row.names()&lt;/code&gt;를 사용하지 않는다&lt;/h4&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;tidy data의 관점에서 변수는 attribute로 관리하지 않고 테이블 안에서 변수로 직접 관리한다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;data_frame에서-벡터의-재사용은-길이-1의-벡터로만-한정한다&quot;&gt;data_frame에서 벡터의 재사용은 길이 1의 벡터로만 한정한다&lt;/h4&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;큰 단위의 벡터에서 벡터 재사용은 버그의 빈번하게 발생시킨다&lt;/p&gt;

&lt;p&gt;아래 예제에서 보면 x와 y 벡터는 길이가 다르지만 &lt;/p&gt;

&lt;p&gt;data.frame에서는 y를 다시 사용하는 방식으로 길이를 맞춰서 data.frame을 생성한다&lt;/p&gt;

&lt;p&gt;data_frame은 그러한 벡터 재사용을 허용하지 않는다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   x y
## 1 1 1
## 2 2 2
## 3 3 1
## 4 4 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Error&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;data_frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Error in data_frame_(lazyeval::lazy_dots(...)) : 
  arguments imply differing number of rows: 4, 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;data_frame은-tbl_df-클래스를-추가시킨다&quot;&gt;data_frame은 tbl_df 클래스를 추가시킨다&lt;/h4&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;따라서 기본적으로는 데이터를 호출했을 때 데이터의 일부만 보이게 된다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;print(data_frame, n = 100)&lt;/code&gt; 등의 함수로 원하는 만큼의 데이터를 볼 수 있다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;tbl_df-클래스로-인해서-[-]의-동작도-달라진다&quot;&gt;tbl_df 클래스로 인해서 [ ]의 동작도 달라진다&lt;/h4&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;기존 data.frame에서는 해당 열을 벡터로 바꾸어서 출력하는 반면에 &lt;/p&gt;

&lt;p&gt;data_frame에서는 형태를 변경하지 않는다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_head &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
iris_df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; tbl_df&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris_head&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

iris_head&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Species&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] setosa setosa setosa setosa setosa setosa
## Levels: setosa versicolor virginica
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_df&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Species&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [6 x 1]
## 
##   Species
##    (fctr)
## 1  setosa
## 2  setosa
## 3  setosa
## 4  setosa
## 5  setosa
## 6  setosa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;data_frame으로-변경하려면-as_data_frame()함수를-사용하면-된다&quot;&gt;data_frame으로 변경하려면 &lt;code&gt;as_data_frame()&lt;/code&gt;함수를 사용하면 된다&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;as.data.frame()&lt;/code&gt;보다 훨씬 빠르다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;as_data_frame&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [150 x 5]
## 
##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
##           (dbl)       (dbl)        (dbl)       (dbl)  (fctr)
## 1           5.1         3.5          1.4         0.2  setosa
## 2           4.9         3.0          1.4         0.2  setosa
## 3           4.7         3.2          1.3         0.2  setosa
## 4           4.6         3.1          1.5         0.2  setosa
## 5           5.0         3.6          1.4         0.2  setosa
## 6           5.4         3.9          1.7         0.4  setosa
## 7           4.6         3.4          1.4         0.3  setosa
## 8           5.0         3.4          1.5         0.2  setosa
## 9           4.4         2.9          1.4         0.2  setosa
## 10          4.9         3.1          1.5         0.1  setosa
## ..          ...         ...          ...         ...     ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/dplyr-advanced-data_frame&quot;&gt;dplyr advanced - data_frame&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on October 19, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[dplyr advanced - Standard Evaluation]]></title>
  <link>http://lumiamitie.github.io/r/dplyr-advanced-se</link>
  <id>http://lumiamitie.github.io/r/dplyr-advanced-se</id>
  <published>2015-10-16T00:00:00+09:00</published>
  <updated>2015-10-16T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;../../../images/old-book.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;non-standard-evaluation&quot;&gt;Non-standard Evaluation&lt;/h1&gt;

&lt;p&gt;dplyr은 기본적으로 non-standard evaluation (NSE)을 사용하여 연산을 처리한다&lt;/p&gt;

&lt;p&gt;사실 이 글을 쓰는 지금도 NSE가 정확히 어떤 것인지는 잘 모르겠다&amp;hellip; &lt;/p&gt;

&lt;p&gt;모든 값을 계산하지 않고 필요할 때만 계산하는? 것이라고 알아들었기는 하지만 정확한 동작 방식은 정말 모르겠다..&lt;/p&gt;

&lt;p&gt;내부적으로 어떻게 다른지는 알 수 없지만 한 가지 눈에 보이는 확실한 차이점은 존재한다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;NSE는 아래 코드처럼 column name을 하나의 object 처럼 사용한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sl2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; Sepal.Length&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species  sl2
## 1          5.1         3.5          1.4         0.2  setosa 10.2
## 2          4.9         3.0          1.4         0.2  setosa  9.8
## 3          4.7         3.2          1.3         0.2  setosa  9.4
## 4          4.6         3.1          1.5         0.2  setosa  9.2
## 5          5.0         3.6          1.4         0.2  setosa 10.0
## 6          5.4         3.9          1.7         0.4  setosa 10.8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  group_by&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  summarise&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mean &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [3 x 2]
## 
##      Species  mean
##       (fctr) (dbl)
## 1     setosa 5.006
## 2 versicolor 5.936
## 3  virginica 6.588
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;반면에 r의 기본 함수(&lt;code&gt;[&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt; 등)들은 column name을 문자열의 형태로 받는다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span class=&quot;s&quot;&gt;&amp;#39;[&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Sepal.Length&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length
## 1          5.1
## 2          4.9
## 3          4.7
## 4          4.6
## 5          5.0
## 6          5.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;dplyr에서는 filter, mutate, summarise, arrange, select, group_by 등의 함수에서 nse를 사용한다&lt;/p&gt;

&lt;p&gt;이들 함수는 각각 se버전을 가지고 있는데, 함수 이름 뒤에 _ 를 붙이면 된다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;filter_&lt;/code&gt;, &lt;code&gt;mutate_&lt;/code&gt;, &lt;code&gt;summarise_&lt;/code&gt;, &lt;code&gt;arrange_&lt;/code&gt;, &lt;code&gt;select_&lt;/code&gt;, &lt;code&gt;group_by_&lt;/code&gt; 등이 각 함수의 se 버전이다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br / &gt;
&lt;br / &gt;&lt;/p&gt;

&lt;h1 id=&quot;standard-evaluation&quot;&gt;Standard Evaluation&lt;/h1&gt;

&lt;p&gt;se버전의 함수를 사용할 때는 함수의 input값을 따옴표로 감싸진 문자열로 넣게 된다&lt;/p&gt;

&lt;p&gt;se버전에서 함수에 인자를 넘기는 방법은 크게 세 가지가 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# String&lt;/span&gt;
iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  head &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mean(Sepal.Length)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa
##   mean(Sepal.Length)
## 1               4.95
## 2               4.95
## 3               4.95
## 4               4.95
## 5               4.95
## 6               4.95
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# quote()&lt;/span&gt;
iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  head &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;quote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa
##   mean(Sepal.Length)
## 1               4.95
## 2               4.95
## 3               4.95
## 4               4.95
## 5               4.95
## 6               4.95
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# formula&lt;/span&gt;
iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  head &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa
##   mean(Sepal.Length)
## 1               4.95
## 2               4.95
## 3               4.95
## 4               4.95
## 5               4.95
## 6               4.95
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;이 중에서 가장 좋은 방법은 formula를 쓰는 것이다&lt;/p&gt;

&lt;p&gt;따옴표나 quote를 사용할 때는 해당 입력값이 어느 environment에 존재하는지 못찾게 되는 경우도 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;divide_by_two &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;num&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;num&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 제대로 실행된다&lt;/span&gt;
iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  head &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;divide_by_two&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa
##   divide_by_two(Sepal.Length)
## 1                        2.55
## 2                        2.45
## 3                        2.35
## 4                        2.30
## 5                        2.50
## 6                        2.70
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# 오류 발생&lt;/span&gt;
iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  head &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;divide_by_two(Sepal.Length)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Error: could not find function &amp;quot;divide_by_two&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# 오류 발생&lt;/span&gt;
iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  head &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;quote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;divide_by_two&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Error: could not find function &amp;quot;divide_by_two&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;여러 가지 input을 한꺼번에 입력하거나, 변수명을 지정해야 할 때에는 &lt;code&gt;.dots&lt;/code&gt; argument에 값을 넘기면 된다&lt;/p&gt;

&lt;p&gt;setNames 함수를 사용해서 함수의 내용과 변수명을 함께 지정해주면 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  summarise_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.&lt;/span&gt;dots &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; setNames&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mean(Sepal.Length)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;sd(Sepal.Length)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mean&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;sd&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##       mean        sd
## 1 5.843333 0.8280661
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  summarise_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.&lt;/span&gt;dots &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; setNames&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;sd&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mean&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;sd&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##       mean        sd
## 1 5.843333 0.8280661
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;이러한 se버전의 함수를 어떻게 활용할까?&lt;/p&gt;

&lt;p&gt;변수를 만들 때 고정된 문자열과 변하는 숫자, 문자열을 이용해 많은 수의 변수를 생성해야 한다고 생각해보자&lt;/p&gt;

&lt;p&gt;예를 들면&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  select&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  head &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sl10 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Sepal.Length &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         sl20 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Sepal.Length &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         sl30 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Sepal.Length &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length sl10 sl20 sl30
## 1          5.1 15.1 25.1 35.1
## 2          4.9 14.9 24.9 34.9
## 3          4.7 14.7 24.7 34.7
## 4          4.6 14.6 24.6 34.6
## 5          5.0 15.0 25.0 35.0
## 6          5.4 15.4 25.4 35.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위와 같은 형태로 변수를 만들어야 한다고 생각해보자&lt;/p&gt;

&lt;p&gt;위 예제는 3개만 만드니까 다 타이핑할 수 있겠지만&lt;/p&gt;

&lt;p&gt;저렇게 변수를 10개 이상? 100개를 만들어야 한다면?&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이러한 상황에서 se버전의 함수를 이용하면 해결할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  select&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  head &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;m&quot;&gt;.&lt;/span&gt;dots &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; setNames&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
              &lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;paste0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Sepal.Length + &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; collapse &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
              &lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;paste0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;sl&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; collapse &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length sl10 sl20 sl30
## 1          5.1 15.1 25.1 35.1
## 2          4.9 14.9 24.9 34.9
## 3          4.7 14.7 24.7 34.7
## 4          4.6 14.6 24.6 34.6
## 5          5.0 15.0 25.0 35.0
## 6          5.4 15.4 25.4 35.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;paste0()&lt;/code&gt;는 둘 이상의 문자열을 하나로 묶어주는 역할을 한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sapply&lt;/code&gt; 는 첫 번째의 인자의 요소들이 차례대로 두 번째 인자의 함수에 parameter로 들어가서 값이 계산되고&lt;/p&gt;

&lt;p&gt;그 결과물을 벡터 등으로 묶어서 반환해준다&lt;/p&gt;

&lt;p&gt;for문을 짧은 함수 형태로 사용하는 것과 비슷한 효과를 낼 수 있다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;일반적인 상황에서 데이터를 정제하고 분석할 때는 크게 필요를 느끼지 못할 수도 있지만&lt;/p&gt;

&lt;p&gt;엄청나게 반복적인 작업을 해야할 때에는 이러한 방식으로 연산하면 시간을 크게 절약할 수도 있다&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/dplyr-advanced-se&quot;&gt;dplyr advanced - Standard Evaluation&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on October 16, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[List and sapply]]></title>
  <link>http://lumiamitie.github.io/r/list-and-sapply</link>
  <id>http://lumiamitie.github.io/r/list-and-sapply</id>
  <published>2015-10-11T00:00:00+09:00</published>
  <updated>2015-10-11T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;../../images/note-and-pen.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;p&gt;json이나 파이썬의 딕셔너리처럼 자유로운 형태의 데이터를 사용하게 되면 list를 많이 사용하게 된다. 평소에는 주로 data.frame을 사용하다보니 상대적으로 list에는 익숙하지가 않았다. 이번에 인스타그램에서 데이터를 가져오면서 리스트에 대해 한 번쯤 정리를 해야겠다는 필요성을 느꼈다. 그래서 api를 통해 데이터를 가져올 때 많이 사용할 만한 내용을 살펴보려고 한다&lt;/p&gt;

&lt;hr&gt;

&lt;h1 id=&quot;list&quot;&gt;List&lt;/h1&gt;

&lt;p&gt;R의 리스트는 key-value 형태로 데이터를 저장한다&lt;/p&gt;

&lt;p&gt;value에는 숫자, 문자열, 리스트, 데이터프레임 등 다양한 형태의 데이터 프레임이 존재할 수 있다&lt;/p&gt;

&lt;p&gt;다만 여기서는 json 형태의 데이터를 R로 가져왔을 때 가장 많이 발생하는 형태인 &amp;lsquo;리스트가 중첩된 형태&amp;rsquo; 를 중점적으로 생각하려고 한다&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;list-생성하기&quot;&gt;list 생성하기&lt;/h2&gt;

&lt;p&gt;리스트를 생성하려면 &lt;code&gt;list()&lt;/code&gt;함수를 사용하면 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list01 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;aaa&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;a01&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; like &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; filter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;filterA&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
              &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;a02&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; like &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  filter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;filterB&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
              &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;a03&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; like &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; filter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;filterC&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

list01
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## $id
## [1] &amp;quot;aaa&amp;quot;
## 
## $data
## $data[[1]]
## $data[[1]]$media_id
## [1] &amp;quot;a01&amp;quot;
## 
## $data[[1]]$like
## [1] 18
## 
## $data[[1]]$filter
## [1] &amp;quot;filterA&amp;quot;
## 
## 
## $data[[2]]
## $data[[2]]$media_id
## [1] &amp;quot;a02&amp;quot;
## 
## $data[[2]]$like
## [1] 5
## 
## $data[[2]]$filter
## [1] &amp;quot;filterB&amp;quot;
## 
## 
## $data[[3]]
## $data[[3]]$media_id
## [1] &amp;quot;a03&amp;quot;
## 
## $data[[3]]$like
## [1] 23
## 
## $data[[3]]$filter
## [1] &amp;quot;filterC&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h2 id=&quot;list-불러오기&quot;&gt;list 불러오기&lt;/h2&gt;

&lt;p&gt;리스트에 값을 저장했을 때, 데이터를 불러오는 방식은 크게 두 가지가 있다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;key-value의-형태&quot;&gt;key-value의 형태&lt;/h3&gt;

&lt;p&gt;인덱싱을 통해 특정 데이터를 호출할 때 [] 를 사용하면 key값과 value값이 모두 반환되어 list 형식으로 값이 나오게 된다&lt;/p&gt;

&lt;p&gt;숫자를 입력하면 1부터 시작하는 인덱스 번호로 호출되고&lt;/p&gt;

&lt;p&gt;변수에 이름이 존재할 경우에는 이름으로 호출할 수도 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list01&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## $id
## [1] &amp;quot;aaa&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list01&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## $id
## [1] &amp;quot;aaa&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;value-값만-출력&quot;&gt;value 값만 출력&lt;/h3&gt;

&lt;p&gt;반면에 [[]]를 이용해서 출력할 경우에는 key없이 value만 호출하게 된다&lt;/p&gt;

&lt;p&gt;value 항목이 벡터 형태라면 벡터만 출력되고, 리스트 형태라면 리스트가 출력된다&lt;/p&gt;

&lt;p&gt;마찬가지로 숫자를 넣으면 인덱스 번호로 호출한다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$&lt;/code&gt;를 통해 호출하는 경우에도 value만 출력된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list01&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;aaa&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list01&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [[1]]$media_id
## [1] &amp;quot;a01&amp;quot;
## 
## [[1]]$like
## [1] 18
## 
## [[1]]$filter
## [1] &amp;quot;filterA&amp;quot;
## 
## 
## [[2]]
## [[2]]$media_id
## [1] &amp;quot;a02&amp;quot;
## 
## [[2]]$like
## [1] 5
## 
## [[2]]$filter
## [1] &amp;quot;filterB&amp;quot;
## 
## 
## [[3]]
## [[3]]$media_id
## [1] &amp;quot;a03&amp;quot;
## 
## [[3]]$like
## [1] 23
## 
## [[3]]$filter
## [1] &amp;quot;filterC&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list01&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;aaa&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list01&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;aaa&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;list에서-데이터-추출하기&quot;&gt;list에서 데이터 추출하기&lt;/h2&gt;

&lt;p&gt;인스타그램에서 데이터를 성공적으로 받아왔다고 하면, 이제 거기에서 필요한 데이터만 꺼내서 정리해야 한다.&lt;/p&gt;

&lt;p&gt;일정한 형태가 반복될 것이기 때문에 for문이나 sapply함수 등을 사용해서 정리할 수 있다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;list01의-data에서-media_id만-추출하기---for문&quot;&gt;list01의 data에서 media_id만 추출하기 - for문&lt;/h3&gt;

&lt;p&gt;빈 벡터를 하나 만들고, for문이 돌 때마다 값을 하나씩 추가한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;post &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt; list01&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;media_id&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; post&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;media_id&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

media_id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;a01&amp;quot; &amp;quot;a02&amp;quot; &amp;quot;a03&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3 id=&quot;list01의-data에서-media_id만-추출하기---sapply&quot;&gt;list01의 data에서 media_id만 추출하기 - sapply&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;sapply&lt;/code&gt;함수를 이용하면 &lt;code&gt;list01$data&lt;/code&gt;의 각 항목을 &lt;code&gt;x&lt;/code&gt;로 둘 때 &lt;code&gt;x$media_id&lt;/code&gt;의 값을 벡터로 정리해서 반환해준다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;list01&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; x&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;media_id&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;a01&amp;quot; &amp;quot;a02&amp;quot; &amp;quot;a03&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;list01&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;media_id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;a01&amp;quot; &amp;quot;a02&amp;quot; &amp;quot;a03&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sapply?&quot;&gt;sapply?&lt;/h2&gt;

&lt;p&gt;첫 번째 인자로 들어오는 벡터 또는 리스트의 항목을 하나씩 그 뒤에 들어오는 함수에 대입시킨다&lt;/p&gt;

&lt;p&gt;각 결과물을 벡터로 모아서 반환한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##  [1]  2  4  6  8 10 12 14 16 18 20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위 코드에서는 &lt;/p&gt;

&lt;p&gt;1이 x에 반영되어 2*1&lt;/p&gt;

&lt;p&gt;2가 x에 반영되어 2*2&lt;/p&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;10이 x에 반영되어 2*10&lt;/p&gt;

&lt;p&gt;이 반복되어서 최종적으로는 2부터 20까지의 짝수 벡터가 출력된다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;데이터를-data.frame에-정리하기&quot;&gt;데이터를 data.frame에 정리하기&lt;/h2&gt;

&lt;p&gt;위에서는 간단하게 필요한 변수만 벡터로 저장해 보았다면 여기서는 여러 가지 변수들을 모아서 데이터 프레임으로 저장해 보려고 한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;list01$data-를-데이터-프레임으로-정리하기---for문&quot;&gt;list01$data 를 데이터 프레임으로 정리하기 - for문&lt;/h3&gt;

&lt;p&gt;row단위로 데이터를 합치게 된다&lt;/p&gt;

&lt;p&gt;for문 안에서 1행의 데이터 프레임을 생성한 다음에 기존에 있던 데이터프레임의 마지막 행에 추가하는 형태로 반복한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df_data_for &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;post &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt; list01&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  df_data_for &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rbind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_data_for&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                      &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; post&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;media_id&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                                 like &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; post&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;like&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                                 filter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; post&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;filter&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

df_data_for
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   media_id like  filter
## 1      a01   18 filterA
## 2      a02    5 filterB
## 3      a03   23 filterC
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;list01$data를-데이터-프레임으로-정리하기---sapply&quot;&gt;list01$data를 데이터 프레임으로 정리하기 - sapply&lt;/h3&gt;

&lt;p&gt;col단위로 데이터를 합치게 된다&lt;/p&gt;

&lt;p&gt;sapply함수를 이용해 각각의 열에 들어갈 자료를 벡터로 만들고 그 벡터들을 data.frame함수로 묶게된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df_data_sapply &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;list01&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; x&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;media_id&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  like &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;list01&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; x&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;like&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  filter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;list01&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; x&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;filter&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

df_data_sapply
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   media_id like  filter
## 1      a01   18 filterA
## 2      a02    5 filterB
## 3      a03   23 filterC
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;list-들을-합치는-방법들&quot;&gt;list 들을 합치는 방법들&lt;/h2&gt;

&lt;p&gt;api에서 한 번에 제공하는 데이터의 양은 한정되어있다&lt;/p&gt;

&lt;p&gt;따라서 분석을 하기 위해서는 데이터를 계속 수집하면서 하나의 데이터셋으로 모아줄 필요가 있다&lt;/p&gt;

&lt;p&gt;맨 처음에 생성했던 리스트와 동일한 형태로 list02라는 리스트를 생성한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list02 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;bbb&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;b01&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; like &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  filter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;filterD&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
              &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;b02&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; like &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; filter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;filterA&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
              &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;b03&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; like &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; filter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;filterB&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;첫 번째로 리스트를 합치는 방법은 벡터에서 처럼 &lt;code&gt;c()&lt;/code&gt; 함수를 사용하는 것이다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;list01&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; list02&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## $id
## [1] &amp;quot;aaa&amp;quot;
## 
## $data
## $data[[1]]
## $data[[1]]$media_id
## [1] &amp;quot;a01&amp;quot;
## 
## $data[[1]]$like
## [1] 18
## 
## $data[[1]]$filter
## [1] &amp;quot;filterA&amp;quot;
## 
## 
## $data[[2]]
## $data[[2]]$media_id
## [1] &amp;quot;a02&amp;quot;
## 
## $data[[2]]$like
## [1] 5
## 
## $data[[2]]$filter
## [1] &amp;quot;filterB&amp;quot;
## 
## 
## $data[[3]]
## $data[[3]]$media_id
## [1] &amp;quot;a03&amp;quot;
## 
## $data[[3]]$like
## [1] 23
## 
## $data[[3]]$filter
## [1] &amp;quot;filterC&amp;quot;
## 
## 
## 
## $id
## [1] &amp;quot;bbb&amp;quot;
## 
## $data
## $data[[1]]
## $data[[1]]$media_id
## [1] &amp;quot;b01&amp;quot;
## 
## $data[[1]]$like
## [1] 8
## 
## $data[[1]]$filter
## [1] &amp;quot;filterD&amp;quot;
## 
## 
## $data[[2]]
## $data[[2]]$media_id
## [1] &amp;quot;b02&amp;quot;
## 
## $data[[2]]$like
## [1] 15
## 
## $data[[2]]$filter
## [1] &amp;quot;filterA&amp;quot;
## 
## 
## $data[[3]]
## $data[[3]]$media_id
## [1] &amp;quot;b03&amp;quot;
## 
## $data[[3]]$like
## [1] 13
## 
## $data[[3]]$filter
## [1] &amp;quot;filterB&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이렇게 하면 &lt;code&gt;list01$id&lt;/code&gt;, &lt;code&gt;list01$data&lt;/code&gt;, &lt;code&gt;list02$id&lt;/code&gt;, &lt;code&gt;list02$data&lt;/code&gt; 순으로 들어간다&lt;/p&gt;

&lt;p&gt;따라서 각각의 항목을 [[1]], [[2]], [[3]], [[4]]로 호출할 수 있다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;c()&lt;/code&gt; 함수에서 &lt;code&gt;recursive = TRUE&lt;/code&gt; 옵션을 사용하면 list 안에 있는 내용을 모두 벡터로 반환한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;list01&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; list02&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; recursive &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##            id data.media_id     data.like   data.filter data.media_id 
##         &amp;quot;aaa&amp;quot;         &amp;quot;a01&amp;quot;          &amp;quot;18&amp;quot;     &amp;quot;filterA&amp;quot;         &amp;quot;a02&amp;quot; 
##     data.like   data.filter data.media_id     data.like   data.filter 
##           &amp;quot;5&amp;quot;     &amp;quot;filterB&amp;quot;         &amp;quot;a03&amp;quot;          &amp;quot;23&amp;quot;     &amp;quot;filterC&amp;quot; 
##            id data.media_id     data.like   data.filter data.media_id 
##         &amp;quot;bbb&amp;quot;         &amp;quot;b01&amp;quot;           &amp;quot;8&amp;quot;     &amp;quot;filterD&amp;quot;         &amp;quot;b02&amp;quot; 
##     data.like   data.filter data.media_id     data.like   data.filter 
##          &amp;quot;15&amp;quot;     &amp;quot;filterA&amp;quot;         &amp;quot;b03&amp;quot;          &amp;quot;13&amp;quot;     &amp;quot;filterB&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;전체 항목이 벡터로 반환되는 것을 볼 수 있다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;리스트의 형태로 두 리스트를 묶을 수도 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;list01&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; list02&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [[1]]$id
## [1] &amp;quot;aaa&amp;quot;
## 
## [[1]]$data
## [[1]]$data[[1]]
## [[1]]$data[[1]]$media_id
## [1] &amp;quot;a01&amp;quot;
## 
## [[1]]$data[[1]]$like
## [1] 18
## 
## [[1]]$data[[1]]$filter
## [1] &amp;quot;filterA&amp;quot;
## 
## 
## [[1]]$data[[2]]
## [[1]]$data[[2]]$media_id
## [1] &amp;quot;a02&amp;quot;
## 
## [[1]]$data[[2]]$like
## [1] 5
## 
## [[1]]$data[[2]]$filter
## [1] &amp;quot;filterB&amp;quot;
## 
## 
## [[1]]$data[[3]]
## [[1]]$data[[3]]$media_id
## [1] &amp;quot;a03&amp;quot;
## 
## [[1]]$data[[3]]$like
## [1] 23
## 
## [[1]]$data[[3]]$filter
## [1] &amp;quot;filterC&amp;quot;
## 
## 
## 
## 
## [[2]]
## [[2]]$id
## [1] &amp;quot;bbb&amp;quot;
## 
## [[2]]$data
## [[2]]$data[[1]]
## [[2]]$data[[1]]$media_id
## [1] &amp;quot;b01&amp;quot;
## 
## [[2]]$data[[1]]$like
## [1] 8
## 
## [[2]]$data[[1]]$filter
## [1] &amp;quot;filterD&amp;quot;
## 
## 
## [[2]]$data[[2]]
## [[2]]$data[[2]]$media_id
## [1] &amp;quot;b02&amp;quot;
## 
## [[2]]$data[[2]]$like
## [1] 15
## 
## [[2]]$data[[2]]$filter
## [1] &amp;quot;filterA&amp;quot;
## 
## 
## [[2]]$data[[3]]
## [[2]]$data[[3]]$media_id
## [1] &amp;quot;b03&amp;quot;
## 
## [[2]]$data[[3]]$like
## [1] 13
## 
## [[2]]$data[[3]]$filter
## [1] &amp;quot;filterB&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;인스타그램에서 데이터를 받아오면 이런 형식일 것이다&lt;/p&gt;

&lt;p&gt;첫 번째 항목([[1]])에 list01이 들어가고 두 번째 항목([[2]])에 list02가 들어간다&lt;/p&gt;

&lt;p&gt;위에서 데이터를 data.frame으로 저장했던 방식을 응용하면 (for, sapply 또는 for + sapply) 필요한 항목만 정리할 수 있다&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/list-and-sapply&quot;&gt;List and sapply&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on October 11, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[networkD3]]></title>
  <link>http://lumiamitie.github.io/r/visualization/networkD3</link>
  <id>http://lumiamitie.github.io/r/visualization/networkD3</id>
  <published>2015-10-03T00:00:00+09:00</published>
  <updated>2015-10-03T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/note-and-pen.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;networkd3&quot;&gt;networkD3&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;networkD3&lt;/code&gt; 패키지는 &lt;code&gt;htmlwidget&lt;/code&gt; 패키지를 바탕으로 D3 기반의 네트워크 시각화를 가능하게 해준다.&lt;/p&gt;

&lt;p&gt;기존의 igraph 패키지로는 만족스러운 모양새의 그래프를 만들기 힘들다고 생각해서 gephi와 d3를 사용하고 있었는데 d3 기반의 시각화를 R로 빠르게 구현할 수 있어서 관심을 가지게 되었다. &lt;/p&gt;

&lt;p&gt;물론 세세한 부분까지 변경하는 것은 조금 무리가 있을 것 같지만 처음 d3로 force layout을 만들 때 고생했던 것을 생각하면 간단한 코드로 이렇게 force layout을 구현할 수 있다는 것 만으로도 상당히 유용하게 사용할 수 있을 것 같다. &lt;/p&gt;

&lt;p&gt;이렇게 생성한 그래프는 html 형태로 export 할 수 있고, RMarkdown 문서에 바로 첨부할 수도 있다&lt;/p&gt;

&lt;p&gt;이 글에서는 d3 그래프가 제대로 표시되지 않기 때문에 실제로 실행되는 결과물을 보려면 &lt;a href=&quot;http://lumiamitie.github.io/r_tutorial/blog_link/networkd3.html&quot;&gt;링크&lt;/a&gt; 에서 확인할 수 있다&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;data&quot;&gt;Data&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.thomsonreuters.com/index.php/mobile-patent-suits-graphic-of-the-day/&quot;&gt;http://blog.thomsonreuters.com/index.php/mobile-patent-suits-graphic-of-the-day/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;위 링크는 모바일 관련 소송에 대한 그래픽 자료이다. 해당 데이터를 d3를 이용해 네트워크 형태로 시각화한 자료는 &lt;a href=&quot;http://bl.ocks.org/mbostock/1153292&quot;&gt;여기&lt;/a&gt;에서 확인할 수 있다. 이 글에서는 link데이터를 가져와서 networkD3 패키지로 시각화 하는 작업을 진행할 것이다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;networkD3&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;시작하기 전에 네트워크 시각화를 하는데 필요한 데이터의 형태에 대해서 알아볼 필요가 있다. &lt;/p&gt;

&lt;p&gt;네트워크 형태로 데이터를 시각화할 때 필요한 데이터는 두 가지가 있다&lt;/p&gt;

&lt;p&gt;우선 노드(&lt;strong&gt;Node&lt;/strong&gt; 또는 &lt;strong&gt;Vertex&lt;/strong&gt;)에 대한 정보가 필요하고&lt;/p&gt;

&lt;p&gt;이 각각의 노드를 어떻게 연결할 것인지(&lt;strong&gt;Link&lt;/strong&gt; 또는 &lt;strong&gt;Edge&lt;/strong&gt;)에 대한 정보가 필요하다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;networkD3&lt;/code&gt;패키지에서 기본적으로 제공하는 데이터 중에서 소설 레미제라블의 인물 관계도를 나타내는 &lt;code&gt;MisLinks&lt;/code&gt;와 &lt;code&gt;MisNodes&lt;/code&gt; 데이터를 가지고 살펴보자 &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;data&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;MisLinks&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; MisNodes&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;MisNodes&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##              name group size
## 1          Myriel     1   15
## 2        Napoleon     1   20
## 3 Mlle.Baptistine     1   23
## 4    Mme.Magloire     1   30
## 5    CountessdeLo     1   11
## 6        Geborand     1    9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이름에서부터 느껴지듯이 &lt;code&gt;MisNodes&lt;/code&gt;는 Node에 대한 데이터다&lt;/p&gt;

&lt;p&gt;각각의 노드를 구별하는 열이 존재하고(여기서는 &lt;code&gt;name&lt;/code&gt;열)&lt;/p&gt;

&lt;p&gt;해당 노드가 그룹화 되어있는 경우 그룹을 표시해준다(&lt;code&gt;group&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;또 필수적이지는 않지만 각각의 노드가 가지는 값(중요도, 크기 등)이 있을 경우에 해당 값을 추가한다(&lt;code&gt;size&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;MisLinks&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   source target value
## 1      1      0     1
## 2      2      0     8
## 3      3      0    10
## 4      3      2     6
## 5      4      0     1
## 6      5      0     1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;MisLinks&lt;/code&gt;는 노드를 연결하는 정보에 대한 데이터이다&lt;/p&gt;

&lt;p&gt;한 행은 &lt;code&gt;source&lt;/code&gt;로 부터 &lt;code&gt;target&lt;/code&gt;으로 연결되는 선 하나를 나타낸다&lt;/p&gt;

&lt;p&gt;각 &lt;code&gt;source&lt;/code&gt;와 &lt;code&gt;target&lt;/code&gt;열의 값은 Node 데이터의 인덱스(0부터 시작)를 나타낸다&lt;/p&gt;

&lt;p&gt;따라서 source = 1, target = 0은 source = Napoleon, target = Myriel을 의미한다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그러면 다시 돌아와서 우리가 처리할 데이터를 확인해보자&lt;/p&gt;

&lt;p&gt;데이터는 JSON 형태로 되어있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;links &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;[&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Microsoft&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Amazon&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;licensing&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Microsoft&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;HTC&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;licensing&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Samsung&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Apple&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Motorola&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Apple&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Nokia&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Apple&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;resolved&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;HTC&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Apple&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Kodak&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Apple&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Microsoft&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Barnes &amp;amp; Noble&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Microsoft&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Foxconn&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Oracle&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Google&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Apple&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;HTC&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Microsoft&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Inventec&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Samsung&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Kodak&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;resolved&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;LG&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Kodak&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;resolved&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;RIM&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Kodak&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Sony&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;LG&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Kodak&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;LG&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;resolved&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Apple&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Nokia&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;resolved&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Qualcomm&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Nokia&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;resolved&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Apple&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Motorola&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Microsoft&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Motorola&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Motorola&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Microsoft&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Huawei&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;ZTE&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Ericsson&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;ZTE&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Kodak&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Samsung&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;resolved&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Apple&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Samsung&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Kodak&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;RIM&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Nokia&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Qualcomm&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;]&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;jsonlite&lt;/code&gt; 패키지의 &lt;code&gt;fromJSON&lt;/code&gt;함수를 이용해서 json데이터를 data.frame으로 변환시킨다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;link_df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; jsonlite&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;fromJSON&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;links&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이렇게 가져온 데이터는 link만을 담고 있기 때문에 node는 link의 source와 target 전체에서 unique한 항목만 추출한다&lt;/p&gt;

&lt;p&gt;그리고 link에서 source와 target은 node의 인덱스를 가지고 표현해야 하기 때문에&lt;/p&gt;

&lt;p&gt;&lt;code&gt;node_df&lt;/code&gt;라는 data.frame에 0부터 시작하는 인덱스 번호를 부여하고&lt;/p&gt;

&lt;p&gt;다시 &lt;code&gt;link_df&lt;/code&gt;에 &lt;code&gt;left_join&lt;/code&gt;해서 source와 target 각각의 인덱스를 가져온다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# node의 index 숫자는 0부터 시작해야 한다&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# dplyr::row_number()가 1부터 숫자를 매기기 때문에 거기서 1씩을 빼도록 한다&lt;/span&gt;
node_df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;node &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;unique&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;link_df&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; link_df&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;target&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;idx &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; row_number&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# node_df에서 index값을 가져와서 source와 target에 해당하는 index 값을 저장한다&lt;/span&gt;
link_df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; link_df &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  left_join&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;node_df &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; rename&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;source_idx &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; idx&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; by&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;source&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  left_join&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;node_df &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; rename&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;target_idx &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; idx&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; by&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;target&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;완성된 데이터는 다음과 같은 형태를 가진다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;node_df
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##              node idx
## 1       Microsoft   0
## 2         Samsung   1
## 3        Motorola   2
## 4           Nokia   3
## 5             HTC   4
## 6           Kodak   5
## 7          Oracle   6
## 8           Apple   7
## 9              LG   8
## 10            RIM   9
## 11           Sony  10
## 12       Qualcomm  11
## 13         Huawei  12
## 14       Ericsson  13
## 15         Amazon  14
## 16 Barnes &amp;amp; Noble  15
## 17        Foxconn  16
## 18         Google  17
## 19       Inventec  18
## 20            ZTE  19
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;link_df
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##       source         target      type source_idx target_idx
## 1  Microsoft         Amazon licensing          0         14
## 2  Microsoft            HTC licensing          0          4
## 3    Samsung          Apple      suit          1          7
## 4   Motorola          Apple      suit          2          7
## 5      Nokia          Apple  resolved          3          7
## 6        HTC          Apple      suit          4          7
## 7      Kodak          Apple      suit          5          7
## 8  Microsoft Barnes &amp;amp; Noble      suit          0         15
## 9  Microsoft        Foxconn      suit          0         16
## 10    Oracle         Google      suit          6         17
## 11     Apple            HTC      suit          7          4
## 12 Microsoft       Inventec      suit          0         18
## 13   Samsung          Kodak  resolved          1          5
## 14        LG          Kodak  resolved          8          5
## 15       RIM          Kodak      suit          9          5
## 16      Sony             LG      suit         10          8
## 17     Kodak             LG  resolved          5          8
## 18     Apple          Nokia  resolved          7          3
## 19  Qualcomm          Nokia  resolved         11          3
## 20     Apple       Motorola      suit          7          2
## 21 Microsoft       Motorola      suit          0          2
## 22  Motorola      Microsoft      suit          2          0
## 23    Huawei            ZTE      suit         12         19
## 24  Ericsson            ZTE      suit         13         19
## 25     Kodak        Samsung  resolved          5          1
## 26     Apple        Samsung      suit          7          1
## 27     Kodak            RIM      suit          5          9
## 28     Nokia       Qualcomm      suit          3         11
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;데이터를 모두 준비하고 나면 forceNetwork 함수로 그래프를 생성할 수 있다&lt;/p&gt;

&lt;p&gt;함수의 동작을 위해 최소한 필요한 옵션은 다음과 같다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Links&lt;/strong&gt;에는 link가 담긴 data.frame&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nodes&lt;/strong&gt;에는 node가 담긴 data.frame&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Source&lt;/strong&gt;에는 Links에서 source의 index가 담긴 열 이름&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Target&lt;/strong&gt;에는 Links에서 target의 index가 담긴 열 이름&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NodeID&lt;/strong&gt;에는 Nodes에서 node이름이 담긴 열 이름&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Group&lt;/strong&gt;은 Nodes에서 group이름이 담긴 열 이름(없으면 NodeID와 동일하게)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;forceNetwork&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Links &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; link_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Nodes &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; node_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             Source &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;source_idx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Target &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;target_idx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             NodeID &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/networkd3/networkd3_01.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bounded&lt;/code&gt; 옵션을 TRUE로 하면 Node들이 특정 범위 밖으로 나가지 못하는 범위가 생긴다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;opacityNoHover&lt;/code&gt; 옵션을 TRUE로 하면 마우스를 node에 올리지 않아도 label이 보인다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;forceNetwork&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Links &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; link_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Nodes &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; node_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             Source &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;source_idx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Target &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;target_idx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             NodeID &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             bounded &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             opacityNoHover &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/networkd3/networkd3_02.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;zoom = TRUE&lt;/code&gt;로는 zoom을 가능하게 한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;forceNetwork&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Links &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; link_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Nodes &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; node_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             Source &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;source_idx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Target &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;target_idx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             NodeID &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             bounded &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             opacityNoHover &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/networkd3/networkd3_03.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;fontSize&lt;/strong&gt;는 폰트 크기&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;linkDistance&lt;/strong&gt;는 link의 길이&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;opacity&lt;/strong&gt;는 전체적인 투명도를 조절한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;forceNetwork&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Links &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; link_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Nodes &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; node_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             Source &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;source_idx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Target &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;target_idx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             NodeID &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             opacityNoHover &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             fontSize &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             linkDistance &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             opacity &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/networkd3/networkd3_04.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/visualization/networkD3&quot;&gt;networkD3&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on October 03, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[leaflet in R]]></title>
  <link>http://lumiamitie.github.io/r/visualization/leaflet-in-R</link>
  <id>http://lumiamitie.github.io/r/visualization/leaflet-in-R</id>
  <published>2015-09-25T00:00:00+09:00</published>
  <updated>2015-09-25T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/desk-pen-ruler.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;leaflet-in-r&quot;&gt;leaflet in R&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;leaflet&lt;/strong&gt;은 인터랙티브한 지도를 구현할 수 있게 해주는 오픈소스 자바스크립트 라이브러리이다&lt;/p&gt;

&lt;p&gt;R의 leaflet 패키지는 R에서 데이터를 가지고 쉽게 Leaflet 지도를 생성할 수 있게 해준다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;install.packages(&amp;#39;leaflet&amp;#39;)&lt;/code&gt;를 통해 해당 패키지를 설치하면 바로 사용할 수 있다&lt;/p&gt;

&lt;p&gt;실습을 위한 데이터는 서울 열린 데이터 광장의 &lt;a href=&quot;http://data.seoul.go.kr/openinf/sheetview.jsp?infId=OA-1218&amp;amp;tMenu=11&quot;&gt;공공 Wifi 위치정보&lt;/a&gt; 데이터 중에서 설치기관이 skt, kt, lgu+인 경우로만 필터링해서 사용했다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# install.packages(&amp;#39;leaflet&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;leaflet&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# 서울의 위도, 경도 값&lt;/span&gt;
seoul_lonlat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;unlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggmap&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;geocode&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;seoul&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;google&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# 서울 열린데이터광장&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# http://data.seoul.go.kr/openinf/sheetview.jsp?infId=OA-1218&amp;amp;tMenu=11&lt;/span&gt;
wifi_data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; read.csv&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;../dataset/wifi_data.csv&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; stringsAsFactors &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;이-페이지에서는-leaflet이-구동-되지-않습니다-ㅠㅠ&quot;&gt;이 페이지에서는 leaflet이 구동 되지 않습니다 ㅠㅠ&lt;/h3&gt;

&lt;p&gt;현재 페이지에서 leaflet을 제대로 보이기 힘든 것 같아서 여기에는 지도의 캡쳐로 대신하고 실제 구동되는 페이지는 &lt;a href=&quot;http://lumiamitie.github.io/r_tutorial/blog_link/leaflet_in_r.html&quot;&gt;다음 링크&lt;/a&gt; 로 들어가시면 확인하실 수 있습니다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br / &gt;
&lt;br / &gt;&lt;/p&gt;

&lt;h2 id=&quot;creating-default-map&quot;&gt;Creating default map&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;leaflet(data)&lt;/code&gt;를 통해 leaflet map widget을 생성하고 데이터를 연결한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;setView()&lt;/code&gt;함수를 사용하면 지도의 중심과 확대 정도를 설정한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;addTiles()&lt;/code&gt; 함수는 기본 타일(OpenStreetMap)을 불러와서 지도를 보여준다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;addCircles()&lt;/code&gt; 함수를 통해 데이터를 원의 형태로 지도에 나타낼 수 있다&lt;/p&gt;

&lt;p&gt;각각의 함수는 &lt;code&gt;%&amp;gt;%&lt;/code&gt;를 통해 연결할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;leaflet&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;wifi_data&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  setView&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; lat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addTiles&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addCircles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/leaflet_in_R/leaflet01.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br / &gt;
&lt;br / &gt;&lt;/p&gt;

&lt;h2 id=&quot;third-party-tiles&quot;&gt;Third Party Tiles&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;addTiles()&lt;/code&gt;대신에 &lt;code&gt;addProviderTiles()&lt;/code&gt;를 이용하면 OSM이 아닌 다른 형태의 지도를 사용할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Stamen.Toner&lt;/code&gt;,&lt;code&gt;Stamen.Watercolor&lt;/code&gt;, &lt;code&gt;Acetate.terrain&lt;/code&gt;, &lt;code&gt;CartoDB.Positron&lt;/code&gt; 등의 옵션을 사용할 수 있고&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/leaflet-extras/leaflet-providers&quot;&gt;https://github.com/leaflet-extras/leaflet-providers&lt;/a&gt;에서 다른 provider들의 지도를 불러올 수 있는 방법에 대해서 알아볼 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;leaflet&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;wifi_data&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  setView&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; lat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addProviderTiles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Stamen.Toner&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addCircles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/leaflet_in_R/leaflet02.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;leaflet&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;wifi_data&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  setView&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; lat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addProviderTiles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;CartoDB.Positron&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addCircles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/leaflet_in_R/leaflet03.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br / &gt;
&lt;br / &gt;&lt;/p&gt;

&lt;h2 id=&quot;popup&quot;&gt;Popup&lt;/h2&gt;

&lt;p&gt;popup 옵션을 이용하면 tooltip을 생성할 수 있다&lt;/p&gt;

&lt;p&gt;클릭하면 해당 데이터를 확인할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;leaflet&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;wifi_data&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  setView&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; lat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addProviderTiles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Stamen.Toner&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addCircles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; popup &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/leaflet_in_R/leaflet04.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br / &gt;
&lt;br / &gt;&lt;/p&gt;

&lt;h2 id=&quot;color&quot;&gt;Color&lt;/h2&gt;

&lt;p&gt;leaftlet에서는 &lt;code&gt;colorNumeric&lt;/code&gt;, &lt;code&gt;colorBin&lt;/code&gt;, &lt;code&gt;colorQuantile&lt;/code&gt;, &lt;code&gt;colorFactor&lt;/code&gt; 등의 함수를 이용해서 색상을 지정하는 함수를 생성할 수 있다.&lt;/p&gt;

&lt;p&gt;위에서 사용한 와이파이 정보를 통신사별로 구별하기 위해서 서로 다른 색상을 지정해보려고 한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;colorFactor&lt;/code&gt;함수를 이용하면 &lt;code&gt;RColorBrewer&lt;/code&gt; 패키지의 색상이나 다른 함수의 색상을 가져와서 구성할 수 있다&lt;/p&gt;

&lt;p&gt;첫 번째 인수로는 RColorBrewer의 팔레트 이름, 두 번째 인수는 적용할 데이터(열까지)를 지정한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;telecom_color &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; colorFactor&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Set1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; wifi_data&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;색상 함수를 생성하면 &lt;code&gt;color&lt;/code&gt;옵션에서 해당 변수에 함수를 사용한 형태로 값을 지정한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;leaflet&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;wifi_data&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  setView&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; lat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addProviderTiles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Stamen.Toner&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addCircles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; popup &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; color &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;telecom_color&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/leaflet_in_R/leaflet05.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br / &gt;
&lt;br / &gt;&lt;/p&gt;

&lt;h2 id=&quot;legends&quot;&gt;Legends&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;addLegend&lt;/code&gt;함수를 이용해서 범례를 추가할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;position&lt;/code&gt; 항목에는 topright&amp;quot;, bottomright, bottomleft, topleft 중 하나를 선택하여 범례의 위치를 지정할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pal&lt;/code&gt; 옵션에는 우리가 사용했던 색상 팔레트 함수를 입력한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;values&lt;/code&gt; 옵션에는 색상 팔레트 함수가 색상을 생성하는데 사용한 변수값을 지정한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;leaflet&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;wifi_data&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  setView&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; lat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addProviderTiles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Stamen.Toner&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addCircles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; popup &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; color &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;telecom_color&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addLegend&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;position &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;bottomright&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            title &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Wifi Provider&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            pal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; telecom_color&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; values &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; opacity &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/leaflet_in_R/leaflet06.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;interactive-layer&quot;&gt;Interactive Layer&lt;/h2&gt;

&lt;p&gt;각각의 레이어를 서로 다른 group으로 지정하면 사용자 선택에 의해서 원하는 레이어만 선택하여 볼 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;addCircles&lt;/code&gt;함수를 사용할 때 &lt;code&gt;group&lt;/code&gt;이라는 항목을 추가하고&lt;/p&gt;

&lt;p&gt;&lt;code&gt;addLayersControl&lt;/code&gt;함수에서 설정을 통해 선택창을 생성할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;baseGroups&lt;/strong&gt; 항목에 목록을 넣으면 라디오 버튼(항목 중에서 한 개만 선택가능)이 구성되고&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;overlayGroups&lt;/strong&gt; 항목에 들어가는 목록은 체크박스를 구성한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;leaflet&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  setView&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; lat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addProviderTiles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Stamen.Toner&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addCircles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; wifi_data &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;div &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;SKT&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
             lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; popup &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;skt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             color &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;telecom_color&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addCircles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; wifi_data &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;div &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;KT&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
             lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; popup &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;kt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             color &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;telecom_color&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addCircles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; wifi_data &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;div &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;LGU+&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
             lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; popup &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;lg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             color &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;telecom_color&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addLayersControl&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;overlayGroups &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;skt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;kt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;lg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                   options &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; layersControlOptions&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;collapsed &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/leaflet_in_R/leaflet07.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/visualization/leaflet-in-R&quot;&gt;leaflet in R&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on September 25, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Geocoding with R - 02]]></title>
  <link>http://lumiamitie.github.io/r/geocoding-with-r-02</link>
  <id>http://lumiamitie.github.io/r/geocoding-with-r-02</id>
  <published>2015-09-14T00:00:00+09:00</published>
  <updated>2015-09-14T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/macphoto.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;geocoding-with-ggmap::geocode&quot;&gt;Geocoding with ggmap::geocode&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggmap&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggplot2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;ggmap&lt;/code&gt; 패키지에는 &lt;code&gt;geocode&lt;/code&gt;라는 함수가 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;geocode&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Seoul&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;google&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Information from URL : http://maps.googleapis.com/maps/api/geocode/json?address=Seoul&amp;amp;sensor=false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##       lon      lat
## 1 126.978 37.56654
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위와 같은 형태로 사용하면 검색하는 위치의 위도와 경도값을 반환해준다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그런데 한글로 검색하면 오류가 나는 것을 볼 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;geocode&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;서울&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;google&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Information from URL : http://maps.googleapis.com/maps/api/geocode/json?address=%BC%AD%BF%EF&amp;amp;sensor=false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Warning: geocode failed with status INVALID_REQUEST, location = &amp;quot;서울&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   lon lat
## 1  NA  NA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;인코딩 문제이기 때문에 &lt;code&gt;enc2utf8&lt;/code&gt; 함수를 이용해서 인코딩을 변환하면 함수를 사용할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;geocode&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;enc2utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;서울&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;google&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Information from URL : http://maps.googleapis.com/maps/api/geocode/json?address=%EC%84%9C%EC%9A%B8&amp;amp;sensor=false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##       lon      lat
## 1 126.978 37.56654
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;또, 아래와 같이 &lt;code&gt;output = &amp;#39;latlona&amp;#39;&lt;/code&gt;옵션을 추가할 경우, 위도 경도에 주소까지 반환하게 된다&lt;/p&gt;

&lt;p&gt;하지만 그냥 사용하면 주소가 영어로 나오는 것을 볼 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;geocode&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Seoul&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;google&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; output &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;latlona&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##       lon      lat            address
## 1 126.978 37.56654 seoul, south korea
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;http://maps.googleapis.com/maps/api/geocode/json?address=Seoul&amp;amp;sensor=false&lt;/code&gt; 의 형태로 검색할 때 나오는 주소가 반환되는 것인데 여기에 아래와 같이 &lt;code&gt;language=ko&lt;/code&gt; 옵션이 추가되면 주소가 한글로 반환된다&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://maps.googleapis.com/maps/api/geocode/json?address=Seoul&amp;amp;language=ko&amp;amp;sensor=false&quot;&gt;http://maps.googleapis.com/maps/api/geocode/json?address=Seoul&amp;amp;language=ko&amp;amp;sensor=false&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;따라서 주소를 검색할 때, &lt;code&gt;지명&amp;amp;language=ko&lt;/code&gt;의 형태로 검색하면 url 주소에 옵션이 추가되어서 한글 주소를 반환받을 수 있게 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;geocode&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Seoul&amp;amp;language=ko&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;google&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; output &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;latlona&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Information from URL : http://maps.googleapis.com/maps/api/geocode/json?address=Seoul&amp;amp;language=ko&amp;amp;sensor=false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##       lon      lat           address
## 1 126.978 37.56654   대한민국 서울특별시
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;다음은 &lt;code&gt;geocode&lt;/code&gt;함수를 데이터프레임의 형태를 통해 일괄적으로 처리하는 &lt;code&gt;mutate_geocode&lt;/code&gt; 함수에 대해 보려고 한다.&lt;/p&gt;

&lt;p&gt;지명이 factor로 들어가지 않게 처리하고 한글을 UTF-8로 변환시킨다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;city_df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;city &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;서울&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;부산&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;대전&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                     stringsAsFactors &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

city_df&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;city &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;enc2utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;city_df&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;city&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

city_df
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   city
## 1 서울
## 2 부산
## 3 대전
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;데이터 프레임이 완성되면 &lt;code&gt;mutate_geocode&lt;/code&gt; 함수를 사용한다&lt;/p&gt;

&lt;p&gt;첫 번째 인수로 해당 데이터 프레임이 들어가고&lt;/p&gt;

&lt;p&gt;두 번째 인수로 데이터프레임에서 주소에 해당하는 열 이름을 지정한다&lt;/p&gt;

&lt;p&gt;그리고 &lt;code&gt;source = &amp;#39;google&amp;#39;&lt;/code&gt;을 통해 구글 api를 사용할 것을 명시한다(기본값이 에러가 안난다면 사용해도 된다)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;city_lonlat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mutate_geocode&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;city_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; city&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;google&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

city_lonlat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   city      lon      lat
## 1 서울 126.9780 37.56654
## 2 부산 129.0756 35.17955
## 3 대전 127.3845 36.35041
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그러면 &lt;code&gt;mutate_geocode&lt;/code&gt;로 지하철 2호선 역들의 위치를 모두 검색해보고&lt;/p&gt;

&lt;p&gt;지도상에 표시해보려고 한다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;2호선 역 목록을 모두 입력했다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;station_list &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;시청역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;을지로입구역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;을지로3가역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;을지로4가역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;동대문역사문화공원역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;신당역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;상왕십리역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;왕십리역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;한양대역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;뚝섬역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;성수역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;건대입구역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;구의역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;강변역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;잠실나루역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;잠실역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;신천역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;종합운동장역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;삼성역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;선릉역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;역삼역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;강남역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;교대역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;서초역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;방배역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;사당역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;낙성대역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;서울대입구역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;봉천역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;신림역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;신대방역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;구로디지털단지역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;대림역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;신도림역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;문래역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;영등포구청역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;당산역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;합정역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;홍대입구역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;신촌역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;이대역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;아현역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;충정로역&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;위에서 지정한 2호선 역 목록을 데이터프레임으로 구성한 다음에 주소의 인코딩을 utf8로 변경한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;station_df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;station_list&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; stringsAsFactors &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
station_df&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;station_list &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;enc2utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;station_df&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;station_list&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;ggmap 패키지의 mutate_geocode 함수를 이용해서 위도/경도값을 받아온다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mutate_geocode(데이터프레임, 열이름, 소스(여기서는 구글))&lt;/code&gt;의 형태로 지정한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;station_latlon &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mutate_geocode&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;station_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; station_list&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;google&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;station_latlon&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##         station_list      lon      lat
## 1              시청역 126.9771 37.56544
## 2         을지로입구역 126.9827 37.56606
## 3          을지로3가역 126.9926 37.56629
## 4          을지로4가역 126.9976 37.56661
## 5   동대문역사문화공원역 127.0092 37.56564
## 6              신당역 127.0195 37.56567
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;위도경도 데이터가 완성되면 ggmap 패키지의 &lt;code&gt;qmap&lt;/code&gt;함수를 이용해 지도를 생성하고 ggplot2 그래프를 그릴 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;seoul_map &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; qmap&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Seoul&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;stamen&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; maptype &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;toner&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;seoul_map &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; station_latlon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; size &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; colour&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;#018b4d&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/geocoding_with_r-02/unnamed-chunk-12-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/geocoding-with-r-02&quot;&gt;Geocoding with R - 02&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on September 14, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Replace NA with tidyr]]></title>
  <link>http://lumiamitie.github.io/r/replace_na_with_tidyr</link>
  <id>http://lumiamitie.github.io/r/replace_na_with_tidyr</id>
  <published>2015-09-12T00:00:00+09:00</published>
  <updated>2015-09-12T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;../../../images/taking-notes.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;p&gt;9월 7일에 업데이트된 tidyr 0.3 버전에는 NA 값을 처리하는 함수들이 일부 추가되었다.&lt;/p&gt;

&lt;p&gt;그 중에서 &lt;code&gt;replace_na&lt;/code&gt;와 &lt;code&gt;fill&lt;/code&gt; 함수에 대해 살펴보려고 한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;tidyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data_frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;우선 &lt;code&gt;replace_na&lt;/code&gt; 함수는 각 열별로 NA를 대체할 값을 list를 통해 전달한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  replace_na&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;unknown&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [3 x 2]
## 
##       x       y
##   (dbl)   (chr)
## 1     1       a
## 2     2 unknown
## 3     0       b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;code&gt;fill&lt;/code&gt;함수는 NA값이 등장하면 해당 열에서 마지막으로 나온 NA값이 아닌 값으로 NA를 채워넣는다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  fill&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;y&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [3 x 2]
## 
##       x     y
##   (dbl) (chr)
## 1     1     a
## 2     2     a
## 3     2     b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;fill 함수 내부에서 select문의 변수 선택 용법대로 값을 채워넣을 열을 선택할 수도 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  fill&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;y&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# x열부터 y열까지&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [3 x 2]
## 
##       x     y
##   (dbl) (chr)
## 1     1     a
## 2     2     a
## 3     2     b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  fill&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;y&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# x열 포함, y열 제외&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [3 x 2]
## 
##       x     y
##   (dbl) (chr)
## 1     1     a
## 2     2    NA
## 3     2     b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nytimes.com/movies/boxoffice/us/weekend.html&quot;&gt;http://www.nytimes.com/movies/boxoffice/us/weekend.html&lt;/a&gt; 에서 데이터를 가져와서 이번주 영화 순위와 저번주 영화순위만으로 데이터를 다시 정리했다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;movie_thiswk &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; read.csv&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;weekly_thiswk.csv&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; stringsAsFactors &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
movie_thiswk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    thiswk                             title
## 1       1                          War Room
## 2       2            Straight Outta Compton
## 3       3               A Walk in the Woods
## 4       4 Mission Impossible : Rogue Nation
## 5       5          The Transporter Refueled
## 6       6                         No Escape
## 7       7                        Inside Out
## 8       8           The Man From U.N.C.L.E.
## 9       9        Un Gallo Con Muchos Huevos
## 10     10                        Sinister 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;movie_lastwk &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; read.csv&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;weekly_lastwk.csv&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; stringsAsFactors &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
movie_lastwk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    lastwk                             title
## 1       1            Straight Outta Compton
## 2       2                          War Room
## 3       3 Mission Impossible : Rogue Nation
## 4       4                         No Escape
## 5       5                        Sinister 2
## 6       6           The Man From U.N.C.L.E.
## 7       7                  Hitman: Agent 47
## 8       8                           Ant-Man
## 9       9                    Jurassic World
## 10     10                          The Gift
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;movie_thiswk&lt;/code&gt;와 &lt;code&gt;movie_lastwk&lt;/code&gt;를 left_join으로 묶어서 생기는 NA값을 처리하려고 한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mv_rank &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; movie_thiswk &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  left_join&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;movie_lastwk&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; by &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

mv_rank
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    thiswk                             title lastwk
## 1       1                          War Room      2
## 2       2            Straight Outta Compton      1
## 3       3               A Walk in the Woods     NA
## 4       4 Mission Impossible : Rogue Nation      3
## 5       5          The Transporter Refueled     NA
## 6       6                         No Escape      4
## 7       7                        Inside Out     NA
## 8       8           The Man From U.N.C.L.E.      6
## 9       9        Un Gallo Con Muchos Huevos     NA
## 10     10                        Sinister 2      5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;lastwk 열의 NA값을 0으로 대체하려면 다음과 같이 할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mv_rank &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  replace_na&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lastwk &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    thiswk                             title lastwk
## 1       1                          War Room      2
## 2       2            Straight Outta Compton      1
## 3       3               A Walk in the Woods      0
## 4       4 Mission Impossible : Rogue Nation      3
## 5       5          The Transporter Refueled      0
## 6       6                         No Escape      4
## 7       7                        Inside Out      0
## 8       8           The Man From U.N.C.L.E.      6
## 9       9        Un Gallo Con Muchos Huevos      0
## 10     10                        Sinister 2      5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gcookbook&lt;/code&gt;패키지의 &lt;code&gt;aapl&lt;/code&gt;데이터에서 2012-09-20일 이후의 데이터는 3건이 있다&lt;/p&gt;

&lt;p&gt;9월 21일부터 10월 2일까지 날짜 데이터에 aapl 데이터를 left_join 시키고 &lt;code&gt;fill&lt;/code&gt; 함수를 이용해서 처리하려고 한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;gcookbook&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aapl&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##         date adj_price
## 1 1984-09-07      3.01
## 2 1984-09-14      3.17
## 3 1984-09-21      3.05
## 4 1984-09-28      2.85
## 5 1984-10-05      2.83
## 6 1984-10-12      2.58
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;aapl_data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; aapl &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;date &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;2012-09-20&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

aapl_data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##         date adj_price
## 1 2012-09-21    700.09
## 2 2012-09-28    667.10
## 3 2012-10-01    659.39
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;daily_price &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;date &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;as.Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;2012-09-21&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;%Y-%m-%d&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;+0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  left_join&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aapl_data&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;daily_price
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##          date adj_price
## 1  2012-09-21    700.09
## 2  2012-09-22        NA
## 3  2012-09-23        NA
## 4  2012-09-24        NA
## 5  2012-09-25        NA
## 6  2012-09-26        NA
## 7  2012-09-27        NA
## 8  2012-09-28    667.10
## 9  2012-09-29        NA
## 10 2012-09-30        NA
## 11 2012-10-01    659.39
## 12 2012-10-02        NA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;아래와 같이 &lt;code&gt;fill&lt;/code&gt;함수를 사용하면 NA값들이 직전에 나온 값으로 대체되는 것을 볼 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;daily_price &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  fill&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;adj_price&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##          date adj_price
## 1  2012-09-21    700.09
## 2  2012-09-22    700.09
## 3  2012-09-23    700.09
## 4  2012-09-24    700.09
## 5  2012-09-25    700.09
## 6  2012-09-26    700.09
## 7  2012-09-27    700.09
## 8  2012-09-28    667.10
## 9  2012-09-29    667.10
## 10 2012-09-30    667.10
## 11 2012-10-01    659.39
## 12 2012-10-02    659.39
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/replace_na_with_tidyr&quot;&gt;Replace NA with tidyr&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on September 12, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[D3 - enter/update/exit]]></title>
  <link>http://lumiamitie.github.io/d3/d3-enter-update-exit</link>
  <id>http://lumiamitie.github.io/d3/d3-enter-update-exit</id>
  <published>2015-09-03T00:00:00+09:00</published>
  <updated>2015-09-03T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/old-book.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;d3&quot;&gt;D3&lt;/h1&gt;

&lt;p&gt;거창하게 D3라는 제목으로 시작하고 있는 글이지만 그렇다고 해서 이 글을 읽고나면 없던 그래프가 생긴다거나 하는 것은 아닙니다. 다만 이제 막 간단한 그래프 예제들을 따라 그려보고 슬슬 예제를 고쳐서 본인이 생각하는 형태의 그래프를 그려보기 시작하는 분들께 도움이 되었으면 하는 내용입니다. &lt;/p&gt;

&lt;p&gt;D3를 처음 접했던 프로젝트 초반에 저를 가장 괴롭혔던 것들 중 하나가 바로 &lt;code&gt;enter&lt;/code&gt; 의 개념입니다. 물론 저는 개발자도 아니고 다른 언어라고 해봤자 R이나 간신히 쓰던 수준이라 &amp;ldquo;언어가 달라지니 헷갈려서 힘드네요 하하&amp;rdquo; 와 같은 드립은 생각도 못하는 흔한 문과생입니다. 게다가 다른 데서는 저런거 보기도 힘들지요. 덕분에 꽤나 오랜 시간동안 저 &lt;code&gt;enter&lt;/code&gt; 라는 것에 대해서 고민을 하고 (잘못된) 결론을 내린 끝에 지금 다시보면 부끄러워질 결과물들을 내놓았습니다. 막상 프로젝트할 때는 일단 돌아가긴 하니까 덮어두고 신경을 꺼버렸습니다. 아니, 신경을 못썼죠. 프로젝트 마감 기한이 계속 다가오니 일단 작동하는 것에 대해선 신경을 쓸 여유가 없었습니다. 그렇게 프로젝트에서 직접 뒹굴면서 말도 안되는 코딩을 하다가 나중에서야 조금이나마 더 이해하게 된 것들입니다. 만약 이것도 틀렸다면&amp;hellip; 음 더 공부해야죠 ㅠㅠ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;enter?&quot;&gt;enter?&lt;/h2&gt;

&lt;p&gt;사실 제가 멍청이인게, 지금 쓰는 내용들은 그냥 &lt;a href=&quot;http://bost.ocks.org/mike/join/&quot;&gt;Thinking with Joins&lt;/a&gt; 라는 글로 Mike Bostock가 올려놓은 내용입니다. 저도 이거 몇 번 읽은 것 같은데 그 때는 그냥 그렇구나 하고 넘겼던 내용들이 사람을 참 힘들게 만들었죠. &lt;/p&gt;

&lt;p&gt;사실 enter는 그냥 단순하게 막대그래프 하나만을 그릴 때는 그렇게 어려운 개념이 아닙니다. 비어있는 selection을 하나 선택하고, data()로 어떤 데이터랑 연결시킬지 결정하고, enter()로 실제 요소들과 연결시킨 후에, append()로 데이터의 개수만큼 요소를 추가시킵니다. 일단 그래프가 뙇 하고 만들어지는걸 보니까 이후에는 저걸 그냥 공식처럼 외워서 써먹었습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;svg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selectAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.empty&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;rect&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;대략 이런 형태가 되겠네요. 사실 그 때 잘 이해가 안됐던 것은 &lt;code&gt;.selectAll(&amp;#39;.empty&amp;#39;)&lt;/code&gt; 입니다. 예제들을 보면 뒤에서 만들 요소들을 선택하는게 보통이긴 한데 어찌됐든 저 시점에서는 아무 것도 안잡히니까 결국 비어있는 selection이거든요. 그래서 나름 실험해본답시고 다른, 전혀 상관없는 선택을 잡아서 해보니까 그래도 그래프는 그려집니다. 점점 저부분이 필요없는 부분인가 하고 고민을 하게 됩니다.&lt;/p&gt;

&lt;h2 id=&quot;new-graph?&quot;&gt;New Graph?&lt;/h2&gt;

&lt;p&gt;이제 두 번째 오해입니다. 버튼을 누르든지 뭐든지 무엇인가 이벤트가 생기면 데이터를 바꿔서 차트를 다시 그려야하는 상황이 되었습니다. 안돌아가는 머리를 열심히 굴려서 생각해낸 방법은 이렇습니다.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;새로 지정된 데이터가 지금 차트에 그려진 데이터랑 같은가?
    &amp;gt; 맞다 &amp;mdash;&amp;gt; 가만히 놔둔다
    &amp;gt; 다르다 &amp;mdash;&amp;gt; 데이터를 표시하는 요소들을 전부 지우고 새로 그린다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;지금 생각해보면 프로젝트가 그래도 무사히 끝나서 정말 다행이라는 생각이 듭니다. 저는 결국 이벤트마다 if문을 열심히 적어가면서 화면에 보이는 것과 입력받은 데이터가 같은지 확인하고 그래프를 직접 지우고 새로 그리고 하는 과정을 반복시켰습니다. 뭐 어찌됐든 원하는대로 돌아가니까요. &lt;/p&gt;

&lt;hr&gt;

&lt;h1 id=&quot;enter-/-update-/-exit&quot;&gt;enter / update / exit&lt;/h1&gt;

&lt;p&gt;d3에서 enter와 관련된 개념을 볼 때 자주 등장하는 그림이 있습니다. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_image/d3_enter_update_exit/d3_enter_update_exit01.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;저걸 보고 처음 했던 생각은 &amp;lsquo;우와 update라는 함수도 있나보네&amp;rsquo; 였습니다. 하하. enter()라는 함수가 있으니 당연히 update()랑 exit()가 나중에 나오겠구나. 그런데 책을 뒤져봐도 update라는 함수는 안보이죠. 그렇게 멘붕이 시작되었습니다.&lt;/p&gt;

&lt;p&gt;결론부터 말씀드리자면, 결국 책에서 하는 것과 동일한 내용입니다. 설명을 위해 위에서 보았던 코드 구조를 살짝 바꿔서 다시 적어보겠습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;svg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selectAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;rect&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;rect&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;.selectAll(&amp;#39;rect&amp;#39;)&lt;/code&gt; 로 선택하면 맨 처음에는 아무 것도 없습니다. 그리고 dataset이 들어옵니다. 요소가 아무것도 없는데 data는 있으니까 그 개수만큼 &lt;code&gt;append(&amp;#39;rect&amp;#39;)&lt;/code&gt; 가 실행됩니다. enter의 역할은 여기까지 입니다. 빈 rect 요소들이 생겼으니 뒤에서 attr를 통해서 값을 추가합니다. 그렇다면 이미 사각형 요소들이 존재할 때 데이터를 바꿔서 그리려면 어떻게 할까요? 새로 들어온 데이터가 더 적으면요??&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_image/d3_enter_update_exit/d3_enter_update_exit02.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;그림에서 update는 점선으로 된 사각형이 없습니다. 반면 enter와 exit는 점선으로 특정 요소들을 선택해놓았습니다. enter는 새로 생긴 요소들에 대한 선택이고, exit는 새로 들어온 데이터가 반영되지 않는 요소들을 선택합니다. 그리고 update는 앞에 selectAll이 선택한 요소들을 그대로 받아와서 변경합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;결국 &lt;strong&gt;update&lt;/strong&gt;라는 것은 선택한 요소들의 attr값을 바꿔주는 것 뿐입니다. 데이터가 바뀌었으니 막대의 너비나 높이 값을 변경하고 선의 패스 위치를 바꿔야 합니다. 기존에 만들었던 사각형들이 있는데 새로 들어온 데이터의 개수가 동일하다면 기껏 만들어놓은 사각형들을 지우고 새로 만들 필요가 없습니다. 자원낭비죠. 그러니까 있는 요소들을 다시 선택해서 재활용을 시도합니다. 막대의 너비로 데이터를 표시했다면, 높이나 x,y 좌표 등은 그대로 놔두고 너비의 값만 바꿔주면 되겠네요. 이렇게 이미 존재하는 요소들을 &lt;strong&gt;재활용&lt;/strong&gt;하기 위해서는 처음에 그래프를 만들때 앞으로 우리가 만들 요소들을 선택하도록 잡아주는 것이 편할겁니다. &amp;#39;rect&amp;#39;로 잡아도 좋고, 다른데서도 rect요소를 쓸 것 같으면 클래스를 하나 정해두면 좋겠네요.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enter&lt;/strong&gt;는 data()로 받아들인 요소의 수가 이미 존재하는 객체보다 많을 때 새로 생성된 요소들을 선택합니다. 저처럼 if 같은걸로 상황구분할 필요없이, 조건이 되면 발동되는 요소인거죠 ( you just activated&amp;hellip;.) 이 경우에는 모자란만큼 append를 해서 data만큼 요소들 만들어주고, 새로 생성한 요소들의 attr를 data에 맞게 넣어줍니다. enter 이후의 코드들은 새로 생성된 요소들에 반영됩니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Exit&lt;/strong&gt;은 data()로 들어온 요소보다 이미 존재하는 객체가 적을 때, 선택받지 못한 요소들을 선택합니다. 보통 선택을 받지 못한 요소들이 아무것도 안하고 놀기 시작하니까 &lt;strong&gt;remove&lt;/strong&gt; 메서드를 통해서 해당 요소들을 지우는 작업이 따라붙게 됩니다.&lt;/p&gt;

&lt;p&gt;그리고 선택하는 작업을 반복할 수는 없으니 적당한 변수에다가 selection + data 까지만 진행에서 담아두고, 그 이후에 메서드 체인을 이용해서 enter, update, exit 작업을 지정하게 됩니다. svg를 생성해서 선택하고 svg라는 변수에 저장한 이후라고 하면 아래와 같은 형식이 됩니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selectAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;rect&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//enter&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//update&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//exit  &lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;남들 앞에 보이기엔 부끄러운 코드지만 위 내용을 반영해서 버튼을 통해 데이터를 변경하는 예제를 아주아주 단순화시켜서 작성해 보았으니 참고해보시면 좋을 것 같습니다. 실행되는 결과는 &lt;a href=&quot;http://lumiamitie.github.io/d3datavis/d3_enter_update_exit.html&quot;&gt;여기&lt;/a&gt; 에서 확인하실 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;!DOCTYPE HTML&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;enter, update, exit&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
&amp;lt;div id=&amp;quot;select&amp;quot;&amp;gt;
    &amp;lt;button value=&amp;#39;data1&amp;#39;&amp;gt;data1&amp;lt;/button&amp;gt;
    &amp;lt;button value=&amp;#39;data2&amp;#39;&amp;gt;data2&amp;lt;/button&amp;gt;
    &amp;lt;button value=&amp;#39;data3&amp;#39;&amp;gt;data3&amp;lt;/button&amp;gt;
    &amp;lt;button value=&amp;#39;data4&amp;#39;&amp;gt;data4&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div id=&amp;quot;chart&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;

    &amp;lt;script src=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js&amp;quot; charset=&amp;quot;utf-8&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script&amp;gt;
    var svg = d3.select(&amp;quot;#chart&amp;quot;)
                .append(&amp;quot;svg&amp;quot;)
                .attr(&amp;quot;width&amp;quot;,500)
                .attr(&amp;quot;height&amp;quot;,500);

    // sample data
    var data = {&amp;#39;data1&amp;#39;:[10,20,30,40,50,60,70,80,90,100],
                &amp;#39;data2&amp;#39;:[50,55,60,65,70,75,80,85,90],
                &amp;#39;data3&amp;#39;:[40,20,30,80,10,25,90,45],
                &amp;#39;data4&amp;#39;:[5,100,15,70,35,90,25,75,45,50,100]};

    // 초기화면에서 나타날 그래프
    drawbar(data[&amp;#39;data1&amp;#39;]);

    // button event 
    d3.selectAll(&amp;quot;button&amp;quot;)
        .on(&amp;quot;click&amp;quot;, function(){
            var selectedData = this.value;
            drawbar(data[selectedData])
        })

    // 막대그래프를 그리는 함수  
    function drawbar(bardata) {
        var bars = d3.select(&amp;quot;svg&amp;quot;)
                    .selectAll(&amp;quot;rect&amp;quot;)
                    .data(bardata);

        //enter         
        bars.enter()
            .append(&amp;quot;rect&amp;quot;)
            .attr(&amp;quot;width&amp;quot;, function(d){
                return d;
            })
            .attr(&amp;quot;height&amp;quot;, 15)
            .attr(&amp;quot;x&amp;quot;, 20)
            .attr(&amp;quot;y&amp;quot;, function(d, i){
                return  20 + i*20;
            });

        //update
        bars.attr(&amp;quot;width&amp;quot;, function(d){
            return d;
        })

        //exit
        bars.exit()
            .remove();

    };
    &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/d3/d3-enter-update-exit&quot;&gt;D3 - enter/update/exit&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on September 03, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Web Scraping with rvest]]></title>
  <link>http://lumiamitie.github.io/r/web/web-scraping-with-rvest</link>
  <id>http://lumiamitie.github.io/r/web/web-scraping-with-rvest</id>
  <published>2015-09-02T00:00:00+09:00</published>
  <updated>2015-09-02T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;../../../images/taking-notes.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;web-scraping-with-rvest&quot;&gt;Web Scraping with rvest&lt;/h1&gt;

&lt;p&gt;꿈꾸는 데이터 디자이너 2기의 수업 보조자료입니다
강의자료는 &lt;a href=&quot;http://www.slideshare.net/neuroassociates/week5rscraping&quot;&gt;이 곳&lt;/a&gt;에서 확인하실 수 있습니다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;rvest&quot;&gt;rvest&lt;/h1&gt;

&lt;p&gt;rvest는 html과 xml 자료를 쉽게 가져와서 처리할 수 있도록 해주는 Hadley Wickham의 패키지이다. 파이썬의 BeautifulSoup 등을 참고해서 기존에 있던 패키지들 보다 더 간단한 문법으로 데이터를 처리하고, Hadley Wickham의 다른 패키지들 처럼 &lt;code&gt;%&amp;gt;%&lt;/code&gt;연산자를 활용하기 쉽게 구성되었다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h1 id=&quot;html&quot;&gt;HTML&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;rvest&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# url을 chr에 저장한다&lt;/span&gt;
daum_bball &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;http://score.sports.media.daum.net/record/baseball/kbo/prnk.daum&amp;#39;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# html()함수를 통해 해당 주소를 긁어오고 html 형태로 파싱한다&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# encoding은 &amp;#39;UTF-8&amp;#39;로 지정한다&lt;/span&gt;
daum_bball_html &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; html&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;daum_bball&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; encoding&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;UTF-8&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;html 문서 내에서 &lt;code&gt;html_node()&lt;/code&gt;함수를 통해 &lt;strong&gt;id값이 table1인 항목&lt;/strong&gt;을 찾고&lt;/p&gt;

&lt;p&gt;table 태그 내부의 자료를 &lt;code&gt;html_table()&lt;/code&gt;을 통해 data.frame 형태로 자료를 가져온다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;bball_table &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; html_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;daum_bball_html&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;#table1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
html_table&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bball_table&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    순위       선수 (팀) 경기 승 패 세이브 홀드    이닝 투구수 피안타
## 1     1    양현종 (KIA)   26 12  5      0    1 152 2/3   2488    123
## 2     2       해커 (NC)   25 16  4      0    0 166 1/3   2511    135
## 3     3   유희관 (두산)   24 16  4      0    0 163 1/3   2503    155
## 4     4 린드블럼 (롯데)   26 11  7      0    0     174   2731    158
## 5     5   장원준 (두산)   24 11  9      0    0 142 1/3   2402    146
## 6     6   윤성환 (삼성)   24 13  7      0    0     160   2483    156
## 7     7   피가로 (삼성)   23 12  6      0    0     152   2453    145
## 8     8   밴헤켄 (넥센)   26 12  6      0    0 162 1/3   2666    154
## 9     9     김광현 (SK)   23 11  3      0    0     136   2268    138
## 10   10   레일리 (롯데)   26  7  8      0    0     146   2400    155
## 11   11 피어밴드 (넥센)   25 11  8      0    0 149 1/3   2432    162
## 12   12   옥스프링 (kt)   26  9  9      0    0     159   2677    164
## 13   13       켈리 (SK)   23  7  9      0    0 142 2/3   2239    152
## 14   14       소사 (LG)   25  8 10      0    1 153 1/3   2459    159
## 15   15    스틴슨 (KIA)   27 10  8      0    0 151 1/3   2539    167
## 16   16   차우찬 (삼성)   24  9  5      0    0     143   2510    131
## 17   17 클로이드 (삼성)   23 10  8      0    0 133 1/3   2259    155
## 18   18     루카스 (LG)   28  8  9      0    1 142 1/3   2733    140
## 19   19   탈보트 (한화)   25  8  9      0    0     126   2299    131
##    피홈런 탈삼진 사사구 실점 자책 평균자책 WHIP QS
## 1      15    125     62   41   39     2.30 1.21 16
## 2       9    143     30   58   48     2.60 0.99 21
## 3      17    113     37   58   57     3.14 1.18 15
## 4      21    141     41   66   65     3.36 1.14 19
## 5       7    110     53   61   56     3.54 1.40 15
## 6      22    140     25   66   63     3.54 1.13 14
## 7      15    108     50   64   60     3.55 1.28 16
## 8      11    165     53   74   66     3.66 1.28 14
## 9      12    127     53   69   57     3.77 1.40 12
## 10     16    112     43   79   65     4.01 1.36 15
## 11     16    122     49   73   68     4.10 1.41 16
## 12     20    122     56   85   73     4.13 1.38 13
## 13     14    104     42   70   66     4.16 1.36 13
## 14     15    129     29   84   72     4.23 1.23 14
## 15     13     80     56   83   77     4.58 1.47 11
## 16     24    150     59   80   75     4.72 1.33 15
## 17     17     97     32   76   71     4.79 1.40 13
## 18     11    134     90   85   78     4.93 1.62  9
## 19     11     91     69   83   74     5.29 1.59 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;pipe 연산자를 통해 표현하면 다음과 같다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;daum_bball_html &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  html_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;#table1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  html_table&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;html_table()&lt;/code&gt;함수의 경우 윈도우 환경에서는 아직 인코딩을 제대로 처리하지 못하는 것으로 보인다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rvest&lt;/code&gt; 이전에 사용하던 &lt;code&gt;XML&lt;/code&gt;과 &lt;code&gt;RCurl&lt;/code&gt; 패키지를 이용해서 비슷한 방식으로 가지고 올 수 있다&lt;/p&gt;

&lt;p&gt;글의 맨 마지막 부분에서 코드를 살펴볼 수 있다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code&gt;html_node()&lt;/code&gt; 함수는 node이름이나 css주소, xpath등을 받으면 해당하는 요소를 &lt;strong&gt;1개만&lt;/strong&gt; 반환한다&lt;/p&gt;

&lt;p&gt;테이블의 header 부분 정보를 담고있는 thead 태그 내부에서 html_node(&amp;lsquo;th&amp;rsquo;)로 th 태그의 항목들을 검색해보면&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;가장 첫 번째 th 요소&lt;/strong&gt;를 태그와 내용을 함께 반환한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;bball_thead &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; html_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;daum_bball_html&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;thead&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
html_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bball_thead&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;th&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## &amp;lt;th scope=&amp;quot;col&amp;quot;&amp;gt;순위&amp;lt;/th&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# pipe&lt;/span&gt;
daum_bball_html &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  html_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;thead&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  html_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;th&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;html_nodes()&lt;/code&gt; 함수는 해당하는 요소를 전부 반환한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;html_nodes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bball_thead&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;th&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## &amp;lt;th scope=&amp;quot;col&amp;quot;&amp;gt;순위&amp;lt;/th&amp;gt; 
## 
## [[2]]
## &amp;lt;th class=&amp;quot;txt_league&amp;quot; scope=&amp;quot;col&amp;quot;&amp;gt;선수 &amp;lt;em&amp;gt;(팀)&amp;lt;/em&amp;gt;&amp;lt;/th&amp;gt; 
## 
## [[3]]
## &amp;lt;th scope=&amp;quot;col&amp;quot;&amp;gt;
##   &amp;lt;a href=&amp;quot;?season_id=2015&amp;amp;amp;col=GP&amp;amp;amp;ord=DESC&amp;quot; class=&amp;quot;ico_comm3 btn_align&amp;quot;&amp;gt;경기&amp;lt;/a&amp;gt;
## &amp;lt;/th&amp;gt; 
## 
## [[4]]
## &amp;lt;th scope=&amp;quot;col&amp;quot;&amp;gt;
##   &amp;lt;a href=&amp;quot;?season_id=2015&amp;amp;amp;col=W&amp;amp;amp;ord=DESC&amp;quot; class=&amp;quot;ico_comm3 btn_align&amp;quot;&amp;gt;승&amp;lt;/a&amp;gt;
## &amp;lt;/th&amp;gt; 
## 
## [[5]]
## &amp;lt;th scope=&amp;quot;col&amp;quot;&amp;gt;
##   &amp;lt;a href=&amp;quot;?season_id=2015&amp;amp;amp;col=L&amp;amp;amp;ord=DESC&amp;quot; class=&amp;quot;ico_comm3 btn_align&amp;quot;&amp;gt;패&amp;lt;/a&amp;gt;
## &amp;lt;/th&amp;gt; 
## 
## [[6]]
## &amp;lt;th scope=&amp;quot;col&amp;quot;&amp;gt;
##   &amp;lt;a href=&amp;quot;?season_id=2015&amp;amp;amp;col=SV&amp;amp;amp;ord=DESC&amp;quot; class=&amp;quot;ico_comm3 btn_align&amp;quot;&amp;gt;세이브&amp;lt;/a&amp;gt;
## &amp;lt;/th&amp;gt; 
## 
## [[7]]
## &amp;lt;th scope=&amp;quot;col&amp;quot;&amp;gt;
##   &amp;lt;a href=&amp;quot;?season_id=2015&amp;amp;amp;col=HLD&amp;amp;amp;ord=DESC&amp;quot; class=&amp;quot;ico_comm3 btn_align&amp;quot;&amp;gt;홀드&amp;lt;/a&amp;gt;
## &amp;lt;/th&amp;gt; 
## 
## [[8]]
## &amp;lt;th scope=&amp;quot;col&amp;quot;&amp;gt;
##   &amp;lt;a href=&amp;quot;?season_id=2015&amp;amp;amp;col=IP&amp;amp;amp;ord=DESC&amp;quot; class=&amp;quot;ico_comm3 btn_align&amp;quot;&amp;gt;이닝&amp;lt;/a&amp;gt;
## &amp;lt;/th&amp;gt; 
## 
## [[9]]
## &amp;lt;th scope=&amp;quot;col&amp;quot;&amp;gt;
##   &amp;lt;a href=&amp;quot;?season_id=2015&amp;amp;amp;col=NP&amp;amp;amp;ord=DESC&amp;quot; class=&amp;quot;ico_comm3 btn_align&amp;quot;&amp;gt;투구수&amp;lt;/a&amp;gt;
## &amp;lt;/th&amp;gt; 
## 
## [[10]]
## &amp;lt;th scope=&amp;quot;col&amp;quot;&amp;gt;
##   &amp;lt;a href=&amp;quot;?season_id=2015&amp;amp;amp;col=HIT&amp;amp;amp;ord=DESC&amp;quot; class=&amp;quot;ico_comm3 btn_align&amp;quot;&amp;gt;피안타&amp;lt;/a&amp;gt;
## &amp;lt;/th&amp;gt; 
## 
## [[11]]
## &amp;lt;th scope=&amp;quot;col&amp;quot;&amp;gt;
##   &amp;lt;a href=&amp;quot;?season_id=2015&amp;amp;amp;col=HR&amp;amp;amp;ord=DESC&amp;quot; class=&amp;quot;ico_comm3 btn_align&amp;quot;&amp;gt;피홈런&amp;lt;/a&amp;gt;
## &amp;lt;/th&amp;gt; 
## 
## [[12]]
## &amp;lt;th scope=&amp;quot;col&amp;quot;&amp;gt;
##   &amp;lt;a href=&amp;quot;?season_id=2015&amp;amp;amp;col=SO&amp;amp;amp;ord=DESC&amp;quot; class=&amp;quot;ico_comm3 btn_align&amp;quot;&amp;gt;탈삼진&amp;lt;/a&amp;gt;
## &amp;lt;/th&amp;gt; 
## 
## [[13]]
## &amp;lt;th scope=&amp;quot;col&amp;quot;&amp;gt;
##   &amp;lt;a href=&amp;quot;?season_id=2015&amp;amp;amp;col=BB&amp;amp;amp;ord=DESC&amp;quot; class=&amp;quot;ico_comm3 btn_align&amp;quot;&amp;gt;사사구&amp;lt;/a&amp;gt;
## &amp;lt;/th&amp;gt; 
## 
## [[14]]
## &amp;lt;th scope=&amp;quot;col&amp;quot;&amp;gt;
##   &amp;lt;a href=&amp;quot;?season_id=2015&amp;amp;amp;col=R&amp;amp;amp;ord=DESC&amp;quot; class=&amp;quot;ico_comm3 btn_align&amp;quot;&amp;gt;실점&amp;lt;/a&amp;gt;
## &amp;lt;/th&amp;gt; 
## 
## [[15]]
## &amp;lt;th scope=&amp;quot;col&amp;quot;&amp;gt;
##   &amp;lt;a href=&amp;quot;?season_id=2015&amp;amp;amp;col=ER&amp;amp;amp;ord=DESC&amp;quot; class=&amp;quot;ico_comm3 btn_align&amp;quot;&amp;gt;자책&amp;lt;/a&amp;gt;
## &amp;lt;/th&amp;gt; 
## 
## [[16]]
## &amp;lt;th scope=&amp;quot;col&amp;quot; class=&amp;quot;on&amp;quot;&amp;gt;
##   &amp;lt;a href=&amp;quot;?season_id=2015&amp;amp;amp;col=ERA&amp;amp;amp;ord=ASC&amp;quot; data-type=&amp;quot;reverse&amp;quot; class=&amp;quot;ico_comm3 btn_align&amp;quot;&amp;gt;평균자책&amp;lt;/a&amp;gt;
## &amp;lt;/th&amp;gt; 
## 
## [[17]]
## &amp;lt;th scope=&amp;quot;col&amp;quot;&amp;gt;
##   &amp;lt;a href=&amp;quot;?season_id=2015&amp;amp;amp;col=WHIP&amp;amp;amp;ord=ASC&amp;quot; class=&amp;quot;ico_comm3 btn_align&amp;quot;&amp;gt;WHIP&amp;lt;/a&amp;gt;
## &amp;lt;/th&amp;gt; 
## 
## [[18]]
## &amp;lt;th scope=&amp;quot;col&amp;quot;&amp;gt;
##   &amp;lt;a href=&amp;quot;?season_id=2015&amp;amp;amp;col=QS&amp;amp;amp;ord=DESC&amp;quot; class=&amp;quot;ico_comm3 btn_align&amp;quot;&amp;gt;QS&amp;lt;/a&amp;gt;
## &amp;lt;/th&amp;gt; 
## 
## attr(,&amp;quot;class&amp;quot;)
## [1] &amp;quot;XMLNodeSet&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# pipe&lt;/span&gt;
daum_bball_html &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  html_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;thead&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  html_nodes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;th&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;요소를 반환 받았을 때 html_text() 함수를 이용해 내용만 추출할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;html_text&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;html_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bball_thead&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;th&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;순위&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# pipe&lt;/span&gt;
daum_bball_html &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  html_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;thead&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  html_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;th&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  html_text&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;html_text&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;html_nodes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bball_thead&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;th&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##  [1] &amp;quot;순위&amp;quot;      &amp;quot;선수 (팀)&amp;quot; &amp;quot;경기&amp;quot;      &amp;quot;승&amp;quot;        &amp;quot;패&amp;quot;       
##  [6] &amp;quot;세이브&amp;quot;    &amp;quot;홀드&amp;quot;      &amp;quot;이닝&amp;quot;      &amp;quot;투구수&amp;quot;    &amp;quot;피안타&amp;quot;   
## [11] &amp;quot;피홈런&amp;quot;    &amp;quot;탈삼진&amp;quot;    &amp;quot;사사구&amp;quot;    &amp;quot;실점&amp;quot;      &amp;quot;자책&amp;quot;     
## [16] &amp;quot;평균자책&amp;quot;  &amp;quot;WHIP&amp;quot;      &amp;quot;QS&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# pipe&lt;/span&gt;
daum_bball_html &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  html_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;thead&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  html_nodes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;th&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  html_text&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;xml&quot;&gt;XML&lt;/h1&gt;

&lt;p&gt;xml자료를 가져올때는 &lt;code&gt;xml()&lt;/code&gt;을 사용하고&lt;/p&gt;

&lt;p&gt;&lt;code&gt;xml_node()&lt;/code&gt;, &lt;code&gt;xml_nodes()&lt;/code&gt;, &lt;code&gt;xml_text()&lt;/code&gt;등의 함수를 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;html 함수들과 사용방법은 동일하다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;boxoffice_xml &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; xml&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;boxoffice0831.xml&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; encoding &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;UTF-8&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;xml_structure&lt;/code&gt; 함수를 사용하면 xml 문서의 구조를 볼 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;xml_structure&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;boxoffice_xml&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## {DTD}
## &amp;lt;html&amp;gt;
##   &amp;lt;body&amp;gt;
##     &amp;lt;boxofficeresult&amp;gt;
##       &amp;lt;boxofficetype&amp;gt; {text}
##       &amp;lt;showrange&amp;gt; {text}
##       &amp;lt;dailyboxofficelist&amp;gt;
##         &amp;lt;dailyboxoffice&amp;gt;
##           &amp;lt;rank&amp;gt; {text}
##           &amp;lt;movienm&amp;gt; {text}
##           &amp;lt;audicnt&amp;gt; {text}
##         &amp;lt;dailyboxoffice&amp;gt;
##           &amp;lt;rank&amp;gt; {text}
##           &amp;lt;movienm&amp;gt; {text}
##           &amp;lt;audicnt&amp;gt; {text}
##         &amp;lt;dailyboxoffice&amp;gt;
##           &amp;lt;rank&amp;gt; {text}
##           &amp;lt;movienm&amp;gt; {text}
##           &amp;lt;audicnt&amp;gt; {text}
##         &amp;lt;dailyboxoffice&amp;gt;
##           &amp;lt;rank&amp;gt; {text}
##           &amp;lt;movienm&amp;gt; {text}
##           &amp;lt;audicnt&amp;gt; {text}
##         &amp;lt;dailyboxoffice&amp;gt;
##           &amp;lt;rank&amp;gt; {text}
##           &amp;lt;movienm&amp;gt; {text}
##           &amp;lt;audicnt&amp;gt; {text}
##         &amp;lt;dailyboxoffice&amp;gt;
##           &amp;lt;rank&amp;gt; {text}
##           &amp;lt;movienm&amp;gt; {text}
##           &amp;lt;audicnt&amp;gt; {text}
##         &amp;lt;dailyboxoffice&amp;gt;
##           &amp;lt;rank&amp;gt; {text}
##           &amp;lt;movienm&amp;gt; {text}
##           &amp;lt;audicnt&amp;gt; {text}
##         &amp;lt;dailyboxoffice&amp;gt;
##           &amp;lt;rank&amp;gt; {text}
##           &amp;lt;movienm&amp;gt; {text}
##           &amp;lt;audicnt&amp;gt; {text}
##         &amp;lt;dailyboxoffice&amp;gt;
##           &amp;lt;rank&amp;gt; {text}
##           &amp;lt;movienm&amp;gt; {text}
##           &amp;lt;audicnt&amp;gt; {text}
##         &amp;lt;dailyboxoffice&amp;gt;
##           &amp;lt;rank&amp;gt; {text}
##           &amp;lt;movienm&amp;gt; {text}
##           &amp;lt;audicnt&amp;gt; {text}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;html과 마찬가지로 xml_node, xml_nodes, xml_text를 통해 데이터를 추출할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;xml_text&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;xml_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;boxoffice_xml&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;showrange&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;20150831~20150831&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# pipe&lt;/span&gt;
boxoffice_xml &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  xml_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;showrange&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  xml_text&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;dailyboxoffice 태그들 안에 동일한 태그로 데이터가 담겨있기 때문에&lt;/p&gt;

&lt;p&gt;일단 dailyboxoffice을 선택하고(&lt;code&gt;xml_node&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;바로 원하는 자료들이 담긴 태그들에 직접 접근해서(&lt;code&gt;xml_nodes&lt;/code&gt;) 자료를 받아오려고 한다(&lt;code&gt;xml_text&lt;/code&gt;)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;daily &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; xml_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;boxoffice_xml&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;dailyboxofficelist&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 순위와, 영화이름, 관객 수를 각각 벡터에 저장한다&lt;/span&gt;
rank    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; xml_text&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;xml_nodes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;daily&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;rank&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
movieNm &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; xml_text&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;xml_nodes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;daily&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;movienm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
audiCnt &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; xml_text&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;xml_nodes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;daily&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;audicnt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 세 개의 벡터를 묶어서 data.frame으로 구성한다&lt;/span&gt;
daily_boxoffice &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;rank&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; movieNm&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; audiCnt&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
daily_boxoffice
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    rank                   movieNm audiCnt
## 1     1                    베테랑  144263
## 2     2             뷰티 인사이드   59994
## 3     3                      암살   47798
## 4     4                  치외법권   26420
## 5     5               미쓰 와이프   18834
## 6     6           아메리칸 울트라   13839
## 7     7 미션 임파서블: 로그네이션   10337
## 8     8             미라클 벨리에    7203
## 9     9                  미니언즈    2756
## 10   10                판타스틱 4    2500
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;xml과-rcurl을-이용해서-table-가져오기&quot;&gt;XML과 RCurl을 이용해서 table 가져오기&lt;/h2&gt;

&lt;p&gt;윈도우에서 rvest의 &lt;code&gt;html_table&lt;/code&gt;함수가 인코딩 문제가 생긴다면 &lt;code&gt;XML&lt;/code&gt;과 &lt;code&gt;RCurl&lt;/code&gt; 패키지를 사용해서 테이블을 처리할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;XML&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;RCurl&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;daum_bball &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;http://score.sports.media.daum.net/record/baseball/kbo/prnk.daum&amp;#39;&lt;/span&gt;
xml_daum &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; getURL&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;daum_bball&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

bball_table &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; readHTMLTable&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;xml_daum&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;table1
&lt;span class=&quot;c1&quot;&gt;# 헤더 부분 인코딩이 깨지는 문제는 rvest 패키지의 repair_encoding()함수로 처리한다&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bball_table&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; repair_encoding&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bball_table&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bball_table&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   순위       선수 (팀) 경기 승 패 세이브 홀드    이닝 투구수 피안타 피홈런
## 1    1    양현종 (KIA)   26 12  5      0    1 152 2/3   2488    123     15
## 2    2       해커 (NC)   25 16  4      0    0 166 1/3   2511    135      9
## 3    3   유희관 (두산)   24 16  4      0    0 163 1/3   2503    155     17
## 4    4 린드블럼 (롯데)   26 11  7      0    0     174   2731    158     21
## 5    5   장원준 (두산)   24 11  9      0    0 142 1/3   2402    146      7
## 6    6   윤성환 (삼성)   24 13  7      0    0     160   2483    156     22
##   탈삼진 사사구 실점 자책 평균자책 WHIP QS
## 1    125     62   41   39     2.30 1.21 16
## 2    143     30   58   48     2.60 0.99 21
## 3    113     37   58   57     3.14 1.18 15
## 4    141     41   66   65     3.36 1.14 19
## 5    110     53   61   56     3.54 1.40 15
## 6    140     25   66   63     3.54 1.13 14
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/web/web-scraping-with-rvest&quot;&gt;Web Scraping with rvest&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on September 02, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Jupyter with R]]></title>
  <link>http://lumiamitie.github.io/r/python/jupyter-r-kernel</link>
  <id>http://lumiamitie.github.io/r/python/jupyter-r-kernel</id>
  <published>2015-08-29T00:00:00+09:00</published>
  <updated>2015-08-29T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/rocks-waves.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;jupyter&quot;&gt;jupyter&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;jupyter&lt;/strong&gt;(또는 ipython notebook)는 ipython을 기반으로 해서 코딩과 마크다운 문서작성을 함께 할 수 있게 해주는 웹기반 어플리케이션이다. 기존의 ipython 에서는 ipython만을 사용할 수 있었지만 jupyter로 업그레이드 되면서 다른 언어들도 사용할 수 있게 되었다. &lt;/p&gt;

&lt;p&gt;보통 R 관련해서 강의나 스터디와 관련된 자료를 만들 때 knit과 rmarkdown을 이용했었다. 웹페이지나 웹기반 슬라이드, pdf 등 다양한 형태로 만들 수 있다는 것이 장점이지만 그림자료가 많아질 수록 매번 knit 시키기는 시간이 너무 길어지기도 했고 코드와 주석으로만 작성되어있던 R 소스코드를 markdown형식과 code chunk의 형태로 변환하는게 번거로웠다. 마침 최근 github에서 jupyter의 ipynb파일을 직접 렌더링해주도록 업데이트 되었다는 사실을 알게 되었다. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/blog/1995-github-jupyter-notebooks-3&quot;&gt;https://github.com/blog/1995-github-jupyter-notebooks-3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;파이썬은 jupyter로 코드를 작성하고 있었지만 R도 jupyter에서 코드를 작성해서 github에 자료를 모으면 비교적 편리하게 문서를 작성할 수 있을 것 같다는 생각이 들어서 R커널을 윈도우에 설치하는 방법을 찾아보게 되었다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;jupyter-with-r-(windows)&quot;&gt;jupyter with R (windows)&lt;/h2&gt;

&lt;p&gt;우선 여기서는 python, ipython, jupyter, 그리고 R까지 모두 설치되어 있다는 것을 전제로 진행하려고 한다. python과 R의 설치는 비교적 쉽게 할 수 있지만, ipython과 jupyter의 경우에는 구글에서 관련된 내용으로 검색해가면서 진행해야 할 것 같다. &lt;/p&gt;

&lt;p&gt;설치하는 과정은 &lt;a href=&quot;https://github.com/IRkernel/IRkernel&quot;&gt;https://github.com/IRkernel/IRkernel&lt;/a&gt; 의 readme 문서를 참고했다. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;install.packages&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;rzmq&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;repr&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;IRkernel&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;IRdisplay&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                 repos &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;http://irkernel.github.io/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;getOption&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;repos&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위와 같이 커널 설치를 위해 필요한 패키지를 한꺼번에 설치할 수 있다. 패키지를 모두 설치하고 나면&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;IRkernel&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;installspec&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위 명령어를 통해 커널을 설치할 수 있다. 옵션없이 설치를 하게 되면 해당 사용자에 대해서 설치를 하게 되는데, 시스템 전체에 대해서 설치하고 싶다면 &lt;code&gt;user = FALSE&lt;/code&gt; 옵션을 추가하면 된다. 64bit 윈도우7이 설치된 i5 LG그램에서 설치를 하고 있었는데 &lt;code&gt;installspec()&lt;/code&gt; 만으로는 제대로 설치가 되지 않아서 &lt;code&gt;user = FALSE&lt;/code&gt; 옵션을 켜고 설치를 진행했다. &lt;/p&gt;

&lt;p&gt;설치가 완료되었다면 &lt;code&gt;C:\Users\[username]\Documents\.ipython\kernels\ir\kernel.json&lt;/code&gt; 등 ipython이 설치된 내부 폴더에서 R커널이 설치된 폴더로 찾아들어가야 한다. &lt;code&gt;kernel.json&lt;/code&gt; 파일을 열어보면&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{&amp;quot;argv&amp;quot;: [&amp;quot;R&amp;quot;, &amp;quot;--quiet&amp;quot;, &amp;quot;-e&amp;quot;,&amp;quot;IRkernel::main()&amp;quot;,&amp;quot;--args&amp;quot;,&amp;quot;{connection_file}&amp;quot;],
 &amp;quot;display_name&amp;quot;:&amp;quot;R&amp;quot;,
 &amp;quot;language&amp;quot;:&amp;quot;R&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;와 같이 작성되어 있는 것을 볼 수 있다. 만약에 R 실행파일의 위치가 path로 잡혀있다면 저 상태로 실행시켜도 된다. path가 설정되어 있지 않다면 R 실행파일을 path로 잡아주거나, &lt;code&gt;&amp;quot;C:/Program Files/R/R-3.2.1/bin/R.exe&amp;quot;&lt;/code&gt; 처럼 실행파일을 직접 지정해줄 수 있다. 실행파일을 직접 지정해줄 경우 아래와 같은 형태가 된다. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{&amp;quot;argv&amp;quot;: [&amp;quot;C:/Program Files/R/R-3.2.1/bin/R.exe&amp;quot;, &amp;quot;--quiet&amp;quot;, &amp;quot;-e&amp;quot;,&amp;quot;IRkernel::main()&amp;quot;,&amp;quot;--args&amp;quot;,&amp;quot;{connection_file}&amp;quot;],
 &amp;quot;display_name&amp;quot;:&amp;quot;R&amp;quot;,
 &amp;quot;language&amp;quot;:&amp;quot;R&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이제 jupyter를 실행시키면 새 파일을 생성하는 New 항목에 Python 뿐만 아니라 R이 선택 가능해진다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_image/jupyter_with_r/jupyterwithr00.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;R을 선택해서 새 파일을 만들고 &lt;code&gt;plot(iris)&lt;/code&gt; 를 작성한 후에 crtl + enter를 눌러서 코드를 실행시키면 아래처럼 제대로 실행되는 모습을 볼 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_image/jupyter_with_r/jupyterwithr01.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/python/jupyter-r-kernel&quot;&gt;Jupyter with R&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on August 29, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[ggplot2 - 03]]></title>
  <link>http://lumiamitie.github.io/r/visualization/ggplot2-03</link>
  <id>http://lumiamitie.github.io/r/visualization/ggplot2-03</id>
  <published>2015-08-26T00:00:00+09:00</published>
  <updated>2015-08-26T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/desk-pen-ruler.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;ggplot2&quot;&gt;ggplot2&lt;/h2&gt;

&lt;p&gt;지난번 포스팅까지 해서 ggplot2의 그래프를 그리는 방법에 대해서는 전반적으로 살펴보았습니다.&lt;/p&gt;

&lt;p&gt;이번 글에서는 필수적이지는 않지만 도움이 될 만한 내용들을 몇 가지 설명하려고 합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stat이-생성하는-값들&quot;&gt;stat이 생성하는 값들&lt;/h2&gt;

&lt;p&gt;stat은 주어진 데이터프레임 이외에, 그래프를 그리는데 필요한 값을 추가로 생성해서 데이터프레임에 추가합니다.&lt;/p&gt;

&lt;p&gt;주어진 값을 그대로 사용한다는 &lt;code&gt;stat_identity()&lt;/code&gt;를 제외하면 나머지 stat 함수들은 제각기 다른 값을 생성하는데 필요하다면 여기서 생성된 값을 가져다가 에스테틱에 적용할 수 있습니다. &lt;/p&gt;

&lt;p&gt;이 때, 기존 데이터의 변수들과 구별하기 위해 변수 이름 앞뒤로 ..을 붙입니다. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;..count..&lt;/code&gt;, &lt;code&gt;..density..&lt;/code&gt;와 같은 형태로 에스테틱에 적용할 수 있습니다. &lt;/p&gt;

&lt;p&gt;각 stat 함수가 어떤 값을 생성하는지는 &lt;a href=&quot;http://docs.ggplot2.org/current/&quot;&gt;http://docs.ggplot2.org/current/&lt;/a&gt;의 문서에서 확인할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;예를 들면, stat_bin의 경우 다음과 같은 값을 추가로 생성합니다&lt;/p&gt;

&lt;p&gt;문서는 &lt;a href=&quot;http://docs.ggplot2.org/current/stat_bin.html&quot;&gt;이 곳&lt;/a&gt;에서 확인할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;count&lt;/strong&gt; : 각 구간(bin)에 속한 항목의 개수&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;density&lt;/strong&gt; : 각 구간(bin)의 밀도(전체의 합이 1)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ncount&lt;/strong&gt; : count와 비슷합니다, 가장 큰 count 값을 1로 두고 다른 값들을 조정합니다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ndensity&lt;/strong&gt; : density, 가장 높은 density 값이 1이 됩니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggplot2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
iris_sl &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; iris&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Sepal.Length&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_sl &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; geom_bar&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## stat_bin: binwidth defaulted to range/30. Use &amp;#39;binwidth = x&amp;#39; to adjust this.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_03/unnamed-chunk-2-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_sl &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; geom_bar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;..&lt;/span&gt;count..&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## stat_bin: binwidth defaulted to range/30. Use &amp;#39;binwidth = x&amp;#39; to adjust this.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_03/unnamed-chunk-2-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_sl &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; geom_bar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;..&lt;/span&gt;density..&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## stat_bin: binwidth defaulted to range/30. Use &amp;#39;binwidth = x&amp;#39; to adjust this.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_03/unnamed-chunk-2-3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_sl &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; geom_bar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;..&lt;/span&gt;ncount..&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## stat_bin: binwidth defaulted to range/30. Use &amp;#39;binwidth = x&amp;#39; to adjust this.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_03/unnamed-chunk-2-4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_sl &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; geom_bar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;..&lt;/span&gt;ndensity..&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## stat_bin: binwidth defaulted to range/30. Use &amp;#39;binwidth = x&amp;#39; to adjust this.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_03/unnamed-chunk-2-5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;R에서 기본적으로 제공하는 volcano 데이터를 그래프로 그려보려고 합니다.&lt;/p&gt;

&lt;p&gt;reshape2 패키지의 &lt;code&gt;melt&lt;/code&gt;함수를 이용해서 데이터프레임으로 변형시키고 ggplot2로 그래프를 그립니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;volcano_df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; reshape2&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;melt&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;volcano&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
volcano_gg &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;volcano_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Var1&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Var2&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; z &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; value&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;stat_contour&lt;/code&gt;가 생성하는 level 변수를 사용해서 그래프의 에스테틱에 반영시킬 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;volcano_gg &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; stat_contour&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_03/unnamed-chunk-4-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;volcano_gg &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; stat_contour&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;colour &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;..&lt;/span&gt;level..&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_03/unnamed-chunk-4-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;volcano_gg &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; stat_contour&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;geom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;polygon&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;..&lt;/span&gt;level..&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_03/unnamed-chunk-4-3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;테마&quot;&gt;테마&lt;/h2&gt;

&lt;p&gt;축의 모양이나 배경색 등 그래프의 세부적인 요소들을 조절해서 테마로 저장할 수 있습니다.&lt;/p&gt;

&lt;p&gt;기본적으로 ggplot2에서 제공하는 테마들도 있고 패키지로 배포되는 테마들도 있습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;dia_bar &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;diamonds&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;cut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;cut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; geom_bar&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

dia_bar &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; theme_gray&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_03/unnamed-chunk-5-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;dia_bar &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; theme_bw&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_03/unnamed-chunk-5-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;dia_bar &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; theme_classic&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_03/unnamed-chunk-5-3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ggthemes&lt;/code&gt;패키지를 설치하면 추가적인 ggplot2 테마를 적용할 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#install.packages(&amp;#39;ggthemes&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggthemes&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

dia_bar &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; theme_economist&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; scale_colour_economist&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_03/unnamed-chunk-6-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;dia_bar &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; theme_excel&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_03/unnamed-chunk-6-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;dia_bar &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; theme_solarized&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_03/unnamed-chunk-6-3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;세 번에 걸쳐 ggplot2를 사용하는 방법을 설명하면서 ggplot2의 다양한 기능과 적용 방법에 대해 알아보았습니다.
기본적인 사용 방법을 익힌 후에 실제 데이터를 가지고 직접 데이터를 그려보면 생각했던 것 보다 원하는 그래프를 얻는 것이 힘들다는 것을 알게 됩니다.
하지만 ggplot2에 어느 정도의 데이터 정제 능력이 뒷받침된다면 많은 문제들을 해결해 가면서 원하는 시각화를 구현할 수 있을 거라고 생각합니다.
이후의 ggplot2 관련 글들은 ggplot2와 기타 다른 패키지들을 이용해서 시각화를 시도하고, 발생하는 문제의 원인을 파악해서 해결하는 과정을 보여드리게 될 것 같습니다.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/visualization/ggplot2-03&quot;&gt;ggplot2 - 03&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on August 26, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[ggplot2 - 02 Drawing Graphs]]></title>
  <link>http://lumiamitie.github.io/r/visualization/ggplot2-02</link>
  <id>http://lumiamitie.github.io/r/visualization/ggplot2-02</id>
  <published>2015-08-17T00:00:00+09:00</published>
  <updated>2015-08-17T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/taking-notes.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;ggplot2&quot;&gt;ggplot2&lt;/h2&gt;

&lt;p&gt;저번 글에서는 ggplot2가 어떻게 동작하는지를 위주로 살펴보았습니다. 이번에는 그래프가 에러없이 뜨는데 만족하지 않고 원하는 형태로 그래프를 만들 수 있도록 다른 옵션들을 조작하는 방법을 살펴보겠습니다. &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggplot2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
iris_plot &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Sepal.Width&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;parameter&quot;&gt;Parameter&lt;/h4&gt;

&lt;p&gt;parameter를 추가하면 geom의 형태를 변경하거나 stat이 적용되는 방법을 바꿀 수 있습니다. 에스테틱을 직접 적용하거나 각 함수마다 주어지는 옵션을 변경하게 됩니다. 에스테틱은 &lt;strong&gt;aes&lt;/strong&gt;함수 안에서 쓰이면 데이터의 값에 매핑되지만, 밖에서 쓰일 경우에는 해당 요소를 전부 변경합니다. 예를 들어 &lt;code&gt;geom_point(aes(size = var))&lt;/code&gt;은 &lt;strong&gt;var&lt;/strong&gt; 데이터의 값에 따라 점의 크기가 변하게 됩니다. 하지만 &lt;code&gt;geom_point(size = 3)&lt;/code&gt; 의 경우에는 모든 점의 크기가 3으로 고정됩니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_plot &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;size &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; colour &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_smooth&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-2-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;에스테틱 중에서 좌표를 나타내는 &lt;strong&gt;x&lt;/strong&gt;와 &lt;strong&gt;y&lt;/strong&gt;를 제외하면&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;colour&lt;/strong&gt;(또는 color)는 점이나 선 색상이나 면의 테두리 색을 결정합니다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;fill&lt;/strong&gt;은 면의 색상을 결정합니다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;alpha&lt;/strong&gt;는 색의 투명도를 나타냅니다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;에스테틱은 아니지만 각 함수의 세부적인 내용을 조정하는 parameter들도 존재합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;geom_smooth&lt;/strong&gt;의 경우에는 &lt;code&gt;method = &amp;#39;lm&amp;#39;&lt;/code&gt;으로 지정하면 추세선을 직선으로 그려줍니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_plot &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;size &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; colour &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_smooth&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;method &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;lm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-3-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;linetype&lt;/strong&gt; 옵션은 선의 모양을 변경할 수 있게 합니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_plot &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;size &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; colour &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_smooth&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;linetype &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-4-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;se&lt;/strong&gt; 옵션을 끄면 standard error의 범위를 표현하지 않습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_plot &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;size &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; colour &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_smooth&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;se &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-5-1.png?dl=0&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;각각의 함수들에는 적용할 수 있는 다양한 parameter들이 있습니다. 각 parameter들에 대한 자세한 설명은 역시 &lt;a href=&quot;http://docs.ggplot2.org/current/&quot;&gt;이 곳&lt;/a&gt;의 링크로 남겨놓는 편이 좋겠네요. 아직 이번 1월에 업데이트된 공식 1.0.0 버전에 추가된 내용은 반영되지 않은 것 같습니다만, 그래도 상당히 많은 예제를 볼 수 있습니다. &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3 id=&quot;position-adjustment&quot;&gt;Position Adjustment&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;position&lt;/strong&gt;은 &lt;strong&gt;geom&lt;/strong&gt;이 보여지는 형태를 바꿉니다. 막대그래프라면 막대가 누적으로 쌓일지, 옆에 나란히 놓일지 결정할 수 있습니다. 산점도라면 여러 점들이 겹쳐있을때 각 좌표에 일정 난수를 더해서 흩어져보이게 만들 수도 있습니다. &lt;/p&gt;

&lt;hr&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mpg&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;displ&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; hwy&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;position &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;jitter&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_smooth&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-6-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;position = &amp;lsquo;jitter&amp;rsquo;&lt;/strong&gt;를 적용하면 각 x,y값에 난수를 더해서 점이 겹치지 않도록 합니다. &lt;code&gt;geom_point(position=&amp;#39;jitter&amp;#39;)&lt;/code&gt;는 &lt;code&gt;geom_jitter()&lt;/code&gt; 로 줄여서 쓸 수 있습니다&lt;/p&gt;

&lt;hr&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;factor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;cyl&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;factor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;vs&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_bar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;position&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stack&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-7-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;막대그래프에서 &lt;strong&gt;position = &amp;#39;stack&amp;rsquo;&lt;/strong&gt;은 각 막대를 쌓아서 누적된 형태로 보여줍니다. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;factor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;cyl&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;factor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;vs&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_bar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;position&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fill&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-8-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;position = &amp;#39;fill&amp;rsquo;&lt;/strong&gt;은 비율을 나타내는 누적 막대를 보여줍니다. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;factor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;cyl&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;factor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;vs&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_bar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;position&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dodge&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-9-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;position = &amp;#39;dodge&amp;rsquo;&lt;/strong&gt;는 각 막대를 옆으로 나열합니다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;postion을 적용하지 않을 때에는 &lt;strong&gt;position = &amp;#39;identity&amp;rsquo;&lt;/strong&gt; 옵션이 사용됩니다. 기본값이 postion = &amp;#39;identity&amp;#39;인 함수를 사용하고 있다면 position옵션을 생략할 수 있습니다. &lt;/p&gt;

&lt;p&gt;그리고, position을 더 상세하게 지정하고 싶다면 &lt;em&gt;position_옵션이름&lt;/em&gt; 으로 지정된 함수에 parameter를 적용하면 됩니다. &lt;strong&gt;position_dodge&lt;/strong&gt;의 경우에는 어느 정도 간격으로 떨어뜨려 놓을지 정할 수 있고, &lt;strong&gt;position_jitter&lt;/strong&gt;에서는 난수를 어느 정도로 적용할 지 결정할 수 있습니다. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;dodge &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; position_dodge&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sleep&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ID&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;extra&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; group&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;group&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
  geom_line&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;position &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; dodge&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
  geom_point&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;position &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; dodge&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; size&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; fill&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; shape&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## ymax not defined: adjusting position using y instead
## ymax not defined: adjusting position using y instead
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-10-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;위에서는 &lt;strong&gt;position_dodge&lt;/strong&gt;를 사용하지 않으면 ID=5일 때 점이 겹쳐보입니다. 일부러 점을 떨어져있게 만들고 싶다면 위와 같이 position_dodge 함수를 적용시킬 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;scales&quot;&gt;Scales&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Scale&lt;/strong&gt;은 데이터의 값이 그래프의 에스테틱에 대입되는 과정을 조절하고 &lt;strong&gt;guide&lt;/strong&gt;(축과 범례 등)가 어떻게 표시되는지 결정한다고 저번 글에서 말씀드렸습니다. 스케일과 관련된 함수는 기본적으로는 &lt;strong&gt;scale_에스테틱_적용방법&lt;/strong&gt;으로 이름이 정해집니다. 스케일을 조절하는 함수는 에스테틱의 종류만큼이나 다양하게 존재하지만, 어느 정도 규칙적인 함수명 덕분에 비교적 쉽게 검색해서 적용이 가능합니다. &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;우선 본격적으로 관련 함수들에 대해서 알아보기 전에 &lt;code&gt;xlim&lt;/code&gt;, &lt;code&gt;ylim&lt;/code&gt; 함수를 살펴보겠습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mpg&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;displ&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; hwy&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_smooth&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  xlim&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Warning: Removed 153 rows containing missing values (stat_smooth).
## Warning: Removed 153 rows containing missing values (geom_point).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-11-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;xlim()&lt;/strong&gt;, 또는 &lt;strong&gt;ylim()&lt;/strong&gt;함수를 이용하면 화면에 보이는 그래프의 범위를 보여줄 수 있습니다. 화면에 나오지 못하는 데이터가 생긴다면 경고메세지가 발생하지만 그래프는 문제없이 그려집니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;다음으로는 색상과 관련된 scale에 대해서 살펴보려고 합니다. 아래 예제에서는 fill을 기준으로 설명하겠지만, fill을 colour로 바꾸기만 하면 많은 경우에 동일한 방식으로 적용할 수 있습니다. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;dia_bar &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;diamonds&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;cut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;cut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; geom_bar&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

dia_bar &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  scale_fill_brewer&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-12-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;xxx_brewer&lt;/strong&gt;로 끝나는 색상관련 scale 함수들은 &lt;strong&gt;RColorBrewer&lt;/strong&gt;패키지를 이용해서 색상을 지정합니다. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;RColorBrewer&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;display.brewer.all&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/colorbrewer_palette.jpg&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;code&gt;display.brewer.all()&lt;/code&gt; 함수를 통해 사용가능한 색 조합의 이름과 색상들을 살펴볼 수 있습니다. 값의 높고 낮음을 보여줄 수 있는 Sequential, 서로 다른 범주나 그룹들을 구분지어 보여줄 수 있는 Qualitative, 어느 중심 값을 기준으로 얼마나 떨어져 있는지를 보여주는 Diverging 의 순서로 정리가 되어 있습니다. 현재 표현하고자 하는 데이터의 형태를 잘 살펴보고, 적절한 색조합을 적용시키면 됩니다. &lt;/p&gt;

&lt;p&gt;원하는 색조합을 찾았다면, &lt;strong&gt;palette&lt;/strong&gt; 옵션에 조합의 이름을 넣어서 색상을 적용할 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;dia_bar &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  scale_fill_brewer&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;palette &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Paired&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-14-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;dia_bar &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  scale_fill_brewer&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;palette &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Accent&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-14-2.png?dl=0&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;다음은 축에 대한 scale함수를 사용해보겠습니다. 연속적인 수치 자료가 y축에 있을 때 스케일은 &lt;strong&gt;scale_y_continuous&lt;/strong&gt;함수를 적용할 수 있습니다. x축이라면 y를 x로 바꾸면 되고, 이산형자료라면 continuous가 discrete로 바뀝니다.&lt;/p&gt;

&lt;p&gt;위에서 &lt;strong&gt;xlim&lt;/strong&gt; 함수를 살펴보았는데요. &lt;strong&gt;scale_x_continuous&lt;/strong&gt; 안에 &lt;strong&gt;limits&lt;/strong&gt; 옵션을 지정하면 동일한 효과를 얻을 수 있습니다. &lt;strong&gt;xlim&lt;/strong&gt;이 적용되었던 예제를 &lt;strong&gt;scale_x_continuous&lt;/strong&gt;로 표현하면 다음과 같습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mpg&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;displ&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; hwy&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    geom_point&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    geom_smooth&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    scale_x_continuous&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;limits&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Warning: Removed 153 rows containing missing values (stat_smooth).
## Warning: Removed 153 rows containing missing values (geom_point).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-15-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;산점도 같은 경우에는 그래프로 표현하는 범위를 강제하더라도 문제가 없겠지만, 막대 그래프 같은 경우에는 위와 같은 방식을 사용하면 막대 자체가 표현이 되지 않을 수 있으니 유의하시기 바랍니다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;trans&lt;/strong&gt;옵션은 변수변환을 스케일 차원에서 조절할 수 있게 해줍니다. &lt;strong&gt;trans = log10&lt;/strong&gt;옵션을 적용하면 y축에 log10 함수를 적용합니다. &lt;strong&gt;scale_y_log10&lt;/strong&gt; 처럼 자주 쓰이는 함수들은 미리 함수들이 지정되어 있기도 하지만 옵션에서 사용하면 사용가능한 함수의 이름을 입력하는 방식으로 사용할 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;dia_bar &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  scale_fill_brewer&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;palette &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Accent&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  scale_y_continuous&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;trans &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;log10&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-16-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;breaks&lt;/strong&gt;옵션은 눈금에 표시되는 항목을 지정할 수 있게 해줍니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;dia_bar &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
scale_y_continuous&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;breaks &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-17-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;coordinate-system&quot;&gt;Coordinate System&lt;/h2&gt;

&lt;p&gt;좌표계의 경우 아무런 값이 지정되지 않으면 기본값으로 Cartesian을 적용합니다(&lt;strong&gt;coord_cartesian()&lt;/strong&gt;). &lt;strong&gt;coord_flip()&lt;/strong&gt;을 이용해 x축과 y축을 뒤바꿀 수 있고, &lt;strong&gt;coord_polar()&lt;/strong&gt;를 사용하면 극좌표계로 변환시킬 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;dia_bar &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  coord_flip&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-18-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;dia_bar &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  coord_polar&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-19-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;그래프에서 보이는 축의 범위를 조절하려고 할 때 위에서 했던 대로 scale을 변경할 수도 있지만, 좌표계를 직접 변형시키는 방법이 있습니다. 하지만 두 개의 방식에는 큰 차이가 있는데, scale을 변경하면 해당 스케일을 벗어나는 데이터는 제거하고 그래프를 그립니다. 따라서 boxplot의 경우에는 남아있는 데이터로 box가 새로 그려질 것이고 막대그래프의 경우에는 데이터의 범위를 벗어나는 막대는 막대 자체가 그려지지 않습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# &amp;#39;Ideal&amp;#39;의 막대가 그려지지 않는다&lt;/span&gt;
dia_bar &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; scale_y_continuous&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;limits&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;15000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-20-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;InsectSprays&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;spray&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;count&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
  geom_boxplot&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  scale_y_continuous&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;limits&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Warning: Removed 16 rows containing non-finite values (stat_boxplot).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-21-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;반면에 좌표를 직접 수정하는 경우에는 그래프를 일단 그린 다음에 입력한 범위만 확대하거나 축소하는 등 변형을 시킵니다. 그래서 그래프의 모양이 변하거나 하지 않습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# &amp;#39;Ideal&amp;#39;의 막대가 그려진다. 대신 15000 이후로는 보이지 않는다&lt;/span&gt;
dia_bar &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  coord_cartesian&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ylim&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;15000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-22-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;InsectSprays&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;spray&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;count&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
  geom_boxplot&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  coord_cartesian&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ylim&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-23-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;coord&lt;/strong&gt; 항목을 신경써서 적용해야 할 때가 또 있습니다. 바로 지도를 그릴 때인데요. 지도를 그릴 때는 기본적으로 위도와 경도가 직교좌표계에 그려지는데, &lt;strong&gt;coord_map()&lt;/strong&gt;을 사용하면 지도의 투영 방식을 적용하여 ggplot 그래프를 그릴 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;maps&lt;/strong&gt; 패키지에서 지도를 받아온 후에 좌표계를 지정하지 않고 그려보겠습니다. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;maps&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
asia &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; map_data&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;world&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; region &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Japan&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;China&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;North Korea&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;South Korea&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;asia&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; long&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; lat&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; group&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; colour &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-24-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;다음은 &lt;strong&gt;coord_map&lt;/strong&gt; 함수를 사용합니다. 기본 투영법은 &lt;strong&gt;mercator&lt;/strong&gt;입니다. 위도선이 나타나는 간격이 달라지는 것을 볼 수 있습니다. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;asia&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; long&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; lat&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; group&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; colour &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  coord_map&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-25-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;?mapproject&lt;/strong&gt;을 통해서 적용할 수 있는 다양한 투영법과 적용할 수 있는 옵션을 찾아볼 수 있습니다. 아래에서는 그 중 몇 가지만 함께 살펴보도록 하겠습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;asia&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;long&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; group&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; colour &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  coord_map&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;orthographic&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-26-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;asia&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;long&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; group&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_polygon&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; colour &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  coord_map&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;polyconic&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-27-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;facetting&quot;&gt;Facetting&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;facet&lt;/strong&gt;을 적용하면 데이터의 부분집합들을 하위 그래프로 분리해서 그릴 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;facet_wrap()&lt;/strong&gt;을 사용하면 하위 그래프들이 수평으로 나열되고, &lt;strong&gt;facet_grid()&lt;/strong&gt;은 수직과 수평으로 각각 다른 변수를 지정할 수 있습니다. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtc_point &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mpg&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; wt&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

mtc_point &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  facet_wrap&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;cyl&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-28-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;두 개 이상의 변수를 동시에 지정하면 각 변수들의 경우의 수에 맞게 그래프를 그려줍니다.&lt;/p&gt;

&lt;p&gt;이렇게 많은 숫자의 그래프가 그려질 때 &lt;strong&gt;ncol&lt;/strong&gt; 옵션을 이용하면 한 화면에 보여질 그래프 열의 개수를 조정할 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtc_point &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  facet_wrap&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;cyl&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;gear&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; ncol &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-29-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtc_point &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  facet_grid&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;gear&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;cyl&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-29-2.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;facet_wrap&lt;/strong&gt;의 경우에는 scales 옵션을 이용하면 각 그래프의 축을 고정시킬지 그래프별로 다르게 할지 결정할 수 있습니다. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;scales = &amp;#39;fixed&amp;rsquo;&lt;/strong&gt;는 각 그래프 모두 축이 일정하게 그려집니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;scales = &amp;#39;free&amp;rsquo;&lt;/strong&gt;는 각 그래프의 데이터 범위에 맞게 조정해서 그립니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;scales = &amp;#39;free_x&amp;rsquo;&lt;/strong&gt;는 x축은 데이터 범위에 맞게 조절하고, y축은 고정시킵니다. &lt;strong&gt;&amp;#39;free_y&amp;rsquo;&lt;/strong&gt; 옵션도 마찬가지로 사용할 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtc_point &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  facet_wrap&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;cyl&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; scales &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;fixed&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-30-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtc_point &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  facet_wrap&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;cyl&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; scales &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;free&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-30-2.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtc_point &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  facet_wrap&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;cyl&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; scales &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;free_x&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-30-3.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;facet_grid&lt;/strong&gt;에서도 마찬가지로 &lt;strong&gt;scales&lt;/strong&gt; 옵션에  &lt;strong&gt;&amp;#39;free&amp;rsquo;&lt;/strong&gt; 나 &lt;strong&gt;&amp;#39;free_x&amp;rsquo;, &amp;#39;free_y&amp;rsquo;&lt;/strong&gt; 등을 적용할 수 있습니다. &lt;strong&gt;facet_grid&lt;/strong&gt;에서는 추가적으로 &lt;strong&gt;space&lt;/strong&gt; 옵션을 추가할 수 있는데, 기본적으는 각 그래프의 크기가 동일하게 그려지지만, &lt;strong&gt;space = &amp;#39;free&amp;rsquo;&lt;/strong&gt; 옵션이 지정되면 데이터의 범위에 따라 그래프의 크기도 변경됩니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtc_point &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  facet_grid&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;gear&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;cyl&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; scales &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;free_x&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-31-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtc_point &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  facet_grid&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;gear&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;cyl&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; scales &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;free&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-31-2.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtc_point &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  facet_grid&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;gear&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;cyl&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; scales &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;free&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; space &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;free&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_02/unnamed-chunk-31-3.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;여기까지 해서 ggplot 객체를 구성하는 layer, scale, coord, facet까지 훑어보았습니다. 이제 어느 정도 원하는 대로 ggplot 그래프를 그릴 수 있게 되었습니다. 다음 글에서는 ggplot 그래프에 저장된 테마를 적용하는 방법과 &lt;strong&gt;stat&lt;/strong&gt;이 생성하는 변수 등 앞에서 제대로 다루지 않았던 항목들을 살펴보려고 합니다.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/visualization/ggplot2-02&quot;&gt;ggplot2 - 02 Drawing Graphs&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on August 17, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[ggplot2 - 01 Grammar of Graphics]]></title>
  <link>http://lumiamitie.github.io/r/visualization/ggplot2-01</link>
  <id>http://lumiamitie.github.io/r/visualization/ggplot2-01</id>
  <published>2015-08-14T00:00:00+09:00</published>
  <updated>2015-08-14T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;../../../images/desk-pen-ruler.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;ggplot2&quot;&gt;ggplot2&lt;/h2&gt;

&lt;p&gt;몇 번의 포스팅을 거쳐서 &lt;strong&gt;ggplot2&lt;/strong&gt;의 원리와 사용법에 대해서 이야기해보려고 합니다. &lt;strong&gt;ggplot2&lt;/strong&gt;는 분명 아무것도 모르고 접근하기에는 어느 정도 진입장벽이 있는 패키지라고 생각합니다. 받아들이는 데이터의 형식이 정해져 있고, 단순한 산점도나 막대그래프를 그릴 때에도 요소들을 맵핑하고 레이어를 얹어주는 작업을 해주어야 합니다. 그리고 함수나 옵션들이 굉장히 많기 때문에 무작정 패키지를 배워보겠다고 tutorial을 찾아보다가는 길을 잃어버릴 수도 있습니다. 하지만 &lt;strong&gt;ggplot2&lt;/strong&gt;는 그 일관적인 체계 덕분에 더 강력한 힘을 발휘합니다. 일단 그 구조를 이해하게 되면 처음 시도해보는 시각화 방식도 무리없이 적용해 볼 수 있습니다. 또, input 데이터의 형식이 일정하기 때문에 다양한 형태의 차트를 일정한 형태의 문법으로 데이터의 변경을 최소화시키면서 만들어 볼 수 있습니다. &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;data-to-graph&quot;&gt;Data to Graph&lt;/h2&gt;

&lt;p&gt;데이터를 통해 그래프를 그리는 과정은 다시 말하면 &lt;strong&gt;데이터의 속성을 그래프의 시각적인 속성에 대입(대응)시키는 것&lt;/strong&gt;입니다.&lt;/p&gt;

&lt;p&gt;예를 들어, 시계열 자료인 종합주가지수를 그래프로 그린다고 해보겠습니다. 시간에 따른 시계열 변화를 선그래프로 표현해보려고 합니다. 이 때 &lt;em&gt;시간&lt;/em&gt;이라고 하는 변수는 그래프에서 &lt;em&gt;X축&lt;/em&gt;에 대입된다면,  &lt;em&gt;수치(연속형)형 자료&lt;/em&gt;인 종합주가지수는 Y축에 대응됩니다. 한국과 일본의 주가지수를 비교해 볼 수도 있을 텐데요. 이 경우에 &lt;em&gt;국가&lt;/em&gt;라는 변수는 서로 다른 직선으로 표현되어야 하는데, &lt;em&gt;색상&lt;/em&gt;을 다르게 주거나 &lt;em&gt;선의 형태&lt;/em&gt;를 실선/점선으로 구분하여 국가를 구분해서 보여줄 수 있습니다.&lt;/p&gt;

&lt;p&gt;R에서 기본적으로 제공하는 그래픽 함수들은 &lt;strong&gt;사용하기가 편리합니다&lt;/strong&gt;. 물론 이것은 상황에 따라서 달라지긴 하겠지만 iris 데이터의 Scatter plot matrix는 &lt;code&gt;plot(iris)&lt;/code&gt; 라는 짧은 한 줄짜리 코드로 실행시킬 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_01/unnamed-chunk-1-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;그리고 &lt;strong&gt;plot&lt;/strong&gt; 함수는 어느 정도 데이터의 형태를 확인해서 그에 적합한 시각화 방식을 제공합니다. &lt;code&gt;plot(Nile)&lt;/code&gt;의 경우에는 시계열 자료라는 특성에 맞게 시간에 따른 선그래프를 그려줍니다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_01/unnamed-chunk-2-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;이처럼 R이 기본적으로 제공하는 그래픽 함수들은 간편하게 그래프를 그릴 수 있게 해줍니다. 그렇다면 이 함수들은 무엇이 문제일까요. 실제로 데이터를 가지고 그래프를 그려보겠습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;R에서 기본으로 제공하는 데이터는 &lt;code&gt;data()&lt;/code&gt;로 확인할 수 있습니다. 기본 데이터 중에서 &lt;code&gt;BOD&lt;/code&gt; 데이터를 가지고 막대그래프와 선그래프를 그려보려고 합니다. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;plot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;BOD&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_01/unnamed-chunk-3-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;plot&lt;/strong&gt;함수로 그려놓고 보니 우리가 원하던 선의 형태가 아닙니다. 선 모양으로 강제하기 위해서는 &lt;code&gt;type = &amp;#39;l&amp;#39;&lt;/code&gt;옵션을 추가해 주어야 합니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;plot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;BOD&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; type &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;l&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_01/unnamed-chunk-4-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;선 그래프를 완성했습니다. 그러면 이번에는 막대그래프를 그려보려고 합니다. 막대그래프를 그리려면 &lt;strong&gt;barplot&lt;/strong&gt; 함수를 사용해야 합니다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;barplot(BOD)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;실행시켜보면 에러 메세지가 뜹니다. &lt;em&gt;&amp;lsquo;height&amp;#39;는 반드시 벡터 또는 행렬이어야 합니다&lt;/em&gt; 라는 메세지가 나옵니다.&lt;/p&gt;

&lt;p&gt;그러면 행렬로 데이터를 변환시킨 후에 사용해 보겠습니다. &lt;strong&gt;as.matrix()&lt;/strong&gt;를 사용합니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;barplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;as.matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;BOD&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_01/unnamed-chunk-5-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;이번에도 원하는 모양의 그래프가 나오지 않았습니다. 행렬로 변환은 시켰는데 행과 열이 뒤바뀐 것 같습니다. 행과 열을 뒤바꾸려면 함수 &lt;strong&gt;t&lt;/strong&gt; (transpose) 를 사용하면 됩니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;barplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;as.matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;BOD&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_01/unnamed-chunk-6-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;그려놓고 보니 생각지도 않던 누적 막대 그래프입니다. &lt;strong&gt;plot&lt;/strong&gt; 함수는 알아서 &lt;em&gt;Time&lt;/em&gt; 변수를 X축으로 인식했는데 &lt;strong&gt;barplot&lt;/strong&gt;은 그렇지 않은 것 같습니다. 우리는 &lt;strong&gt;demand&lt;/strong&gt; 변수만을 높이로 해서 막대를 그리면 되기 때문에 아래와 같이 그래프를 완성하겠습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;barplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;BOD&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;demand&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_01/unnamed-chunk-7-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;여기까지의 과정을 살펴보겠습니다. 분명 각각의 그래프를 그릴 때에는 정말 단순한 코드로 괜찮은 그래프를 쉽게 얻을 수 있었습니다. 하지만 문제는 선그래프를 그리고나서 동일한 데이터의 막대그래프를 그릴 때인데요. 완전히 다른 함수에, 받아들이는 데이터의 형태도 다르면서, 내부의 옵션들 또한 내용이 많이 다릅니다. 각각의 함수는 쉽게 사용할 수 있다고 하지만, 새로운 그래프를 그리려면 매번 처음부터 공부를 해야할 것 같습니다. &lt;/p&gt;

&lt;p&gt;또, 위에서 보이지는 않았지만 &lt;strong&gt;lines&lt;/strong&gt;, &lt;strong&gt;points&lt;/strong&gt;, &lt;strong&gt;abline&lt;/strong&gt; 등의 함수를 이용해 그래프를 겹쳐서 그리다가 실수라도 할 경우에는 low level 함수인 &lt;strong&gt;plot&lt;/strong&gt;부터 다시 그려야 합니다. 차트가 복잡해지고 다양한 시각화를 원할 수록 기본 그래픽 함수는 답답해 질 수 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;그렇다면 동일한 데이터를 &lt;strong&gt;ggplot2&lt;/strong&gt;를 이용해 막대와 선 그래프를 그려보겠습니다. 각 문법에 대한 자세한 설명은 뒤에서 다룰 것이기 때문에, 여기서는 선과 막대를 그릴 때 코드가 어떻게 달라지는지를 중점적으로 살펴보면 됩니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggplot2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; BOD&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Time&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;demand&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_line&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_01/unnamed-chunk-8-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; BOD&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Time&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;demand&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    geom_bar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;stat&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;identity&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_01/unnamed-chunk-8-2.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;ggplot2를 이용해서 그래프를 그릴 경우에는 데이터를 변형시키지 않고도 다양한 방식으로 그래프를 그릴 수 있습니다. 그리고 일정한 문법구조와 비슷한 옵션들을 가지고 있기 때문에 새로운 시각화를 할 때의 비용이 적습니다. &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;ggplot2가-그래프를-그리는-방식&quot;&gt;ggplot2가 그래프를 그리는 방식&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_01/unnamed-chunk-9-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;iris&lt;/strong&gt; 데이터에서 &lt;em&gt;Sepal.Length&lt;/em&gt;와 &lt;em&gt;Sepal.Width&lt;/em&gt; 데이터로 산점도를 그린 후에 &lt;em&gt;Species&lt;/em&gt;변수에 따라 색상을 달리하여 ggplot2 그래프를 그려보았습니다. 여기서 ggplot2 그래프의 구성을 그림으로 살펴보면 다음과 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_01/ggplot2_structure.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h4 id=&quot;1.-data&quot;&gt;1. Data&lt;/h4&gt;

&lt;p&gt;그래프를 그리려는 데이터는 &lt;strong&gt;iris&lt;/strong&gt;로 결정했습니다. 데이터 내의 변수는 데이터 프레임의 열로 저장되어 있어야 합니다.&lt;/p&gt;

&lt;p&gt;ggplot2가 요구하는 형태(Tidy data)에 대한 자세한 내용은 다음 &lt;a href=&quot;http://vita.had.co.nz/papers/tidy-data.pdf&quot;&gt;문서&lt;/a&gt;에서 확인할 수 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h4 id=&quot;2.-mapping&quot;&gt;2. Mapping&lt;/h4&gt;

&lt;p&gt;그러면, 데이터의 요소와 그래프의 요소를 대응시키는 과정이 발생합니다. 여기서 &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sepal.Length&lt;/strong&gt; - &lt;strong&gt;X축&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sepal.Width&lt;/strong&gt; - &lt;strong&gt;Y축&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Species&lt;/strong&gt; - &lt;strong&gt;점의 색상&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;이 대응됩니다. 여기서 대응은 무조건 1:1로 대응될 필요는 없고, 그리려고 하는 그래프가 필수적으로 요구하는 대응요소만 만족시키면 됩니다. 하나의 변수가 여러 가지 시각적 요소(ggplot2에서는 이것을 에스테틱 &lt;em&gt;Aesthetic&lt;/em&gt; 이라고 합니다)에 대응될 수도 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h4 id=&quot;3.-geometric-object&quot;&gt;3. Geometric Object&lt;/h4&gt;

&lt;p&gt;그리고 나면 어떤 형태의 그래프를 그릴지 지정해야 합니다. ggplot2에서는 이것을 Geometric Object, 줄여서 &lt;strong&gt;geom&lt;/strong&gt;이라고 합니다. 여기서는 산점도(Scaterplot)를 그렸는데, ggplot2에서는 &lt;strong&gt;geom_point&lt;/strong&gt; 함수를 사용합니다. &lt;/p&gt;

&lt;hr&gt;

&lt;h4 id=&quot;4.-position&quot;&gt;4. Position&lt;/h4&gt;

&lt;p&gt;그래프의 형태를 지정했으면 그래프에서 각 도형이 어떤 식으로 배치될 지를 결정할 수 있습니다. 이 옵션이 바로 &lt;strong&gt;position&lt;/strong&gt;입니다. 막대그래프나 선 그래프라면 누적 그래프를 그리거나 할 때 &lt;strong&gt;position&lt;/strong&gt; 옵션을 조정해서 형태를 바꿀 수 있습니다. 여기서는 특별한 배치가 필요없기 때문에 그대로(&amp;#39;identity&amp;rsquo;) 배치합니다. &lt;/p&gt;

&lt;hr&gt;

&lt;h4 id=&quot;5.-statistical-transformation&quot;&gt;5. Statistical Transformation&lt;/h4&gt;

&lt;p&gt;마지막으로 값이 어떻게 그래프에 반영되는지 결정하는 옵션이 있습니다. &lt;em&gt;Statistical Transformation&lt;/em&gt;, 줄여서 &lt;strong&gt;stat&lt;/strong&gt; 옵션입니다. 히스토그램과 같이 구간내에 존재하는 값의 개수를 세거나 밀도를 계산하는 등, 주어진 값을 변형시켜서 그래프에 반영시킬 때 사용합니다. 여기서는 특별한 변환 없이 값을 그대로(&amp;#39;identity&amp;rsquo;) 사용합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;ggplot2의-구성&quot;&gt;ggplot2의 구성&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_01/ggplot2_structure2.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;위에서 살펴본 다섯 가지 구성 요소들은 하나의 레이어를 구성합니다. 그리고 하나 이상의 레이어만 구성되면 &lt;strong&gt;ggplot2&lt;/strong&gt;는 우리에게 그래프를 출력합니다. 레이어 이외에 ggplot2의 그래프를 구성하는 요소는 &lt;strong&gt;Scale&lt;/strong&gt;, &lt;strong&gt;Coordinate System&lt;/strong&gt;, &lt;strong&gt;Facet&lt;/strong&gt;, &lt;strong&gt;Guide&lt;/strong&gt;가 있습니다. &lt;/p&gt;

&lt;hr&gt;

&lt;h4 id=&quot;scale&quot;&gt;Scale&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Scale&lt;/strong&gt;은 데이터의 값이 그래프의 에스테틱에 대입되는 과정을 조절하고 &lt;strong&gt;guide&lt;/strong&gt;(축과 범례 등)가 어떻게 표시되는지 결정합니다. 보통은 &lt;strong&gt;ggplot2&lt;/strong&gt;가 알아서 scale을 추가하지만 원하는 사항에 대해서는 명시해 주면 그래프에 반영시킬 수 있습니다. &lt;strong&gt;scale&lt;/strong&gt;을 조절하면 &lt;strong&gt;log&lt;/strong&gt;나 &lt;strong&gt;sqrt&lt;/strong&gt; 등의 변수 변환을 &lt;strong&gt;ggplot2&lt;/strong&gt; 상에서 할 수 있고, &lt;em&gt;fill&lt;/em&gt;이나 &lt;em&gt;colour&lt;/em&gt; 등의 에스테틱에서 색상을 사용자가 지정할 수 있게 됩니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h4 id=&quot;coordinate-system&quot;&gt;Coordinate System&lt;/h4&gt;

&lt;p&gt;여기서는 좌표를 결정하는 에스테틱들이 어떻게 연결되는지를 결정합니다. 기본값은 직교좌표계(Cartesian)로 지정되어 있습니다. &lt;strong&gt;stat&lt;/strong&gt;과 &lt;strong&gt;geom&lt;/strong&gt;이 결정되면 좌표계를 변경할 수 있습니다. 또, Cartesian에서 x축과 y축을 바꾸는 것도 이 부분에서 변경할 수 있습니다. &lt;/p&gt;

&lt;hr&gt;

&lt;h4 id=&quot;facet-specification&quot;&gt;Facet Specification&lt;/h4&gt;

&lt;p&gt;데이터를 특정 변수를 기준으로 하는 부분집합들로 쪼개서 &lt;strong&gt;small multiple&lt;/strong&gt;의 형태로 그릴 수 있게 합니다. &lt;strong&gt;iris&lt;/strong&gt; 데이터를 기준으로 말하자면, 위에서 했던 것처럼 색상으로 구분하지 않고 Species별로 각각의 그래프를 따로 그리게 됩니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h4 id=&quot;guides&quot;&gt;Guides&lt;/h4&gt;

&lt;p&gt;가이드는 그래프를 보는 사람이 그래프의 시각적인 속성들을 어떻게 데이터와 연관지어서 볼 수 있는지 안내하는 역할을 합니다. 눈금을 표시하고 축에 이름표를 달거나 범례를 작성하는 등 그래프를 보고 데이터를 떠올리는 데 도움을 주는 항목들입니다. &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;결국 ggplot2의 그래프는&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Layer + Scale + Coordinate System + (Facet) + (Guide)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;의 형태로 결정이 됩니다. Scale과 Coord 도 사실은 기본값이 주어져 있기 때문에, Layer에만 신경써도 어느 정도 원하는 그래프를 얻을 수 있습니다. &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;ggplot2-그래프-그리기&quot;&gt;ggplot2 그래프 그리기&lt;/h2&gt;

&lt;h4 id=&quot;ggplot2::layer&quot;&gt;ggplot2::layer&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  layer&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        mapping &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Sepal.Length&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Sepal.Width&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; colour &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Species&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        geom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;point&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        stat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;identity&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        position &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;identity&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_01/unnamed-chunk-10-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;h4 id=&quot;shortcut&quot;&gt;Shortcut&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;layer&lt;/strong&gt; 함수를 이용하면 그래프를 그리는데 필요한 요소들을 레이어에 대입시켜서 원하는 그래프를 얻을 수 있습니다. 하지만 실제로 사용할 때는 자주 사용하는 요소들을 묶어서 미리 만들어놓은 함수들을 사용하게 됩니다.
아래 코드는 위에서 &lt;strong&gt;layer&lt;/strong&gt;함수를 사용했을 때와 같은 결과물을 나타냅니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Sepal.Width&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; colour&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Species&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_01/unnamed-chunk-11-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;geom_point&lt;/strong&gt;는 &lt;code&gt;geom=&amp;#39;point&amp;#39;&lt;/code&gt;, &lt;code&gt;stat=&amp;#39;identity&amp;#39;&lt;/code&gt;, &lt;code&gt;position=&amp;#39;identity&amp;#39;&lt;/code&gt;가 기본값으로 정해져 있는 함수입니다. 이러한 shortcut 들을 사용하여 더 편리하게 그래프를 그릴 수 있습니다. &lt;/p&gt;

&lt;hr&gt;

&lt;h4 id=&quot;multiple-layers&quot;&gt;Multiple Layers&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Sepal.Width&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_smooth&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Sepal.Width&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_01/unnamed-chunk-12-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;이와 같이 여러개의 레이어를 중복시켜서 그릴 수도 있습니다. 이 때, 공통적으로 반영되는 요소들은 미리 &lt;strong&gt;ggplot()&lt;/strong&gt; 안에 정의해두면 geom이나 stat을 추가할 때 자동적으로 상속받게 됩니다. 또, ggplot을 이용해 만든 결과물은 객체로 저장할 수 있습니다. Mapping되는 부분까지만 객체로 저장해두고 다양한 차트를 그려보는 것도 가능합니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_plot &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Sepal.Width&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

iris_plot &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_smooth&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_01/unnamed-chunk-13-1.png?dl=0&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;ggplot2를 소개하는 첫 번째 글에서는 Grammar of Graphic을 기반으로 어떻게 ggplot2가 그래프를 그리는지를 위주로 살펴보았습니다. 다음 글에서는 parameter와 position을 수정하여 그래프의 형태를 변경하고, scale, coord 등을 변경하는 등 그래프에 대해 세밀한 조작을 하는 과정에 대해서 살펴보겠습니다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920023135.do&quot;&gt;R Graphics Cookbook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.ggplot2.org/current/&quot;&gt;http://docs.ggplot2.org/current/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ggplot2.org/resources/2007-past-present-future.pdf&quot;&gt;http://ggplot2.org/resources/2007-past-present-future.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ggplot2.org/resources/2007-vanderbilt.pdf&quot;&gt;http://ggplot2.org/resources/2007-vanderbilt.pdf&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/visualization/ggplot2-01&quot;&gt;ggplot2 - 01 Grammar of Graphics&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on August 14, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Geocoding with R]]></title>
  <link>http://lumiamitie.github.io/r/geocoding-with-r</link>
  <id>http://lumiamitie.github.io/r/geocoding-with-r</id>
  <published>2015-08-14T00:00:00+09:00</published>
  <updated>2015-08-14T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;../../images/rocks-waves.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;ggmap::geocode-함수를-이용한-지오코딩&quot;&gt;ggmap::geocode 함수를 이용한 지오코딩&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;ggmap&lt;/strong&gt; 패키지에는 &lt;strong&gt;geocode&lt;/strong&gt;라는 함수가 있다&lt;/p&gt;

&lt;p&gt;지명을 인자로 넣어주면 위도와 경도값을 반환해주고, 옵션에 따라 더 많은 정보를 불러오기도 한다&lt;/p&gt;

&lt;p&gt;그런데 언어가 영문으로 고정되어 있기 때문인지 영문지명으로 입력해야 하고 반환되는 값 또한 영문주소가 반환된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggmap&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Loading required package: ggplot2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;geocode&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Seoul&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Information from URL : http://maps.googleapis.com/maps/api/geocode/json?address=Seoul&amp;amp;sensor=false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##       lon      lat
## 1 126.978 37.56654
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;geocode&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Seoul&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; output&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;latlona&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##       lon      lat            address
## 1 126.978 37.56654 seoul, south korea
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;geocode&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Seoul&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; output&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;more&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##       lon      lat     type     loctype            address   north   south
## 1 126.978 37.56654 locality approximate seoul, south korea 37.6956 37.4346
##       east     west postal_code     country administrative_area_level_2
## 1 127.1823 126.7968        &amp;lt;NA&amp;gt; south korea                        &amp;lt;NA&amp;gt;
##   administrative_area_level_1 locality street streetNo point_of_interest
## 1                        &amp;lt;NA&amp;gt;    seoul   &amp;lt;NA&amp;gt;       NA              &amp;lt;NA&amp;gt;
##   query
## 1 Seoul
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;아래와 같이 한글로 지명을 입력하면 오류가 난다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;geocode(&amp;#39;서울&amp;#39;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;옵션을 일부 변경하면 한글도 사용할 수 있지 않을까 하고 생각했지만 아직까지는 방법을 찾지 못했다&lt;/p&gt;

&lt;p&gt;한글지명으로 입력하서 한글주소를 반환받으려면 어떻게 해야할까?&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;geocoding-with-google-api-(+rvest)&quot;&gt;Geocoding with Google API (+rvest)&lt;/h2&gt;

&lt;p&gt;일단 여기서는 위도와 경도 자료만 가지고 오려고 한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;http://maps.googleapis.com/maps/api/geocode/xml?sensor=false&amp;amp;language=ko&amp;amp;address=&amp;#39;서울&amp;#39;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;웹브라우저에서 위 url로 들어가보면 xml 데이터를 볼 수 있다&lt;/p&gt;

&lt;p&gt;url 중간에 있는 xml을 json으로 바꿔주면 json 형태의 자료도 받을 수 있다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;그러면 아래에서는 &lt;code&gt;rvest&lt;/code&gt;패키지를 이용해 위 주소의 xml자료를 가져오고 원하는 항목만 정리해보려고 한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;rvest&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
url &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;http://maps.googleapis.com/maps/api/geocode/xml?sensor=false&amp;amp;language=ko&amp;amp;address=&amp;#39;서울&amp;#39;&amp;quot;&lt;/span&gt;
seoul_xml &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; xml&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; encoding&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;UTF-8&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;location 태그를 검색하면 하위 항목에 위도, 경도 자료가 있는 것을 볼 수 있다 &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;seoul_xml &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  xml_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;location&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## &amp;lt;location&amp;gt;
##   &amp;lt;lat&amp;gt;37.5665350&amp;lt;/lat&amp;gt;
##   &amp;lt;lng&amp;gt;126.9779692&amp;lt;/lng&amp;gt;
## &amp;lt;/location&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;아래 처럼 자식항목의 텍스트를 한꺼번에 받아와도 되고&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;seoul_xml &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  xml_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;location&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  xml_children&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  xml_text&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##           lat           lng 
##  &amp;quot;37.5665350&amp;quot; &amp;quot;126.9779692&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;아래처럼 필요한 항목에 직접 접근해서 받아와도 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;seoul_xml &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  xml_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  xml_text&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;37.5665350&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;기본적인 방법을 알았으니 복수의 지명에 대해서 위도/경도 자료를 가지고 오자&lt;/p&gt;

&lt;p&gt;여기서는 우선 지명에 대한 목록을 작성한 후에&lt;/p&gt;

&lt;p&gt;각 지명에 대해 api로 접근해서 위도, 경도값을 받아오고&lt;/p&gt;

&lt;p&gt;이 작업을 for 문을 이용해 반복해서 원하는 결과를 얻으려고 한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# 위도,경도값을 얻으려고 하는 지명의 목록이다&lt;/span&gt;
loc_list &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;서울&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;대전&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;부산&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 결과물을 취합하기 위한 빈 벡터&lt;/span&gt;
geocode_result &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;loc &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt; loc_list&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# 검색어를 제외한 url&lt;/span&gt;
  url &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;http://maps.googleapis.com/maps/api/geocode/xml?sensor=false&amp;amp;language=ko&amp;amp;address=&amp;#39;&amp;quot;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# 검색어를 포함시켜서 만든 완전한 url&lt;/span&gt;
  geocode_url &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;paste0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; loc&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# url에서 utf-8 인코딩으로 xml자료를 가져온다&lt;/span&gt;
  geocode_xml &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; xml&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;geocode_url&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; encoding&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;UTF-8&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# 위도값을 가져온다&lt;/span&gt;
  geocode_lat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; geocode_xml &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
    xml_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
    xml_text&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# 경도값을 가져온다&lt;/span&gt;
  geocode_lon &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; geocode_xml &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
    xml_node&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;lng&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
    xml_text&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# 지명, 위도, 경도를 1행짜리 데이터 프레임으로 구성한다&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# 이 때 위도,경도값을 숫자로 변환한다&lt;/span&gt;
  geocode_data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;location &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; loc&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                            lat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;as.numeric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;geocode_lat&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                            lon &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;as.numeric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;geocode_lon&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                            &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# 최종 결과물이 저장될 오브젝트에 누적시켜서 값을 저장한다&lt;/span&gt;
  geocode_result &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rbind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;geocode_result&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; geocode_data&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
geocode_result
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   location      lat      lon
## 1     서울 37.56654 126.9780
## 2     대전 36.35041 127.3845
## 3     부산 35.17955 129.0756
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/geocoding-with-r&quot;&gt;Geocoding with R&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on August 14, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[magrittr - Ceci n'est pas une pipe]]></title>
  <link>http://lumiamitie.github.io/r/magrittr</link>
  <id>http://lumiamitie.github.io/r/magrittr</id>
  <published>2015-08-09T00:00:00+09:00</published>
  <updated>2015-08-09T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/note-and-pen.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;magrittr&quot;&gt;magrittr&lt;/h2&gt;

&lt;p&gt;dplyr 이후로 Hadley Wickham의 패키지들은 &lt;code&gt;%&amp;gt;%&lt;/code&gt;라는 연산자를 굉장히 많이 사용한다. 파이프 연산자를 사용하면 코드의 가독성을 향상시키면서 생산성도 높이고, 유지 보수에도 굉장히 도움이 많이 된다. 그런데 pipe operator를 모르는 사람에게 코드를 보여주면 코드자체가 암호문으로 변해버리는 단점?이 있었다. 그래서 파이프 연산자의 사용법을 간단하게 설명하면서 &lt;code&gt;magrittr&lt;/code&gt; 패키지의 기능들을 일부 설명해보려고 한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;기본적인-pipe의-이용&quot;&gt;기본적인 pipe의 이용&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;fun(x,y,z)&lt;/code&gt;는 &lt;code&gt;x %&amp;gt;% fun(y,z)&lt;/code&gt;와 같다&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;파이프를 기준으로 왼쪽에 있는 오브젝트(또는 연산의 결과물)는 파이프 오른쪽의 연산에 가장 첫 번째 인자로 들어간다. 만약 첫 번째가 아닌 다른 위치로 보내려고 한다면 . 으로 위치를 표시한다. 따라서
&lt;code&gt;y %&amp;gt;% fun(x, ., z)&lt;/code&gt; 도 &lt;code&gt;fun(x, y, z)&lt;/code&gt;와 같다&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;파이프는 연속적으로 적용할 수 있기 때문에 중첩된 함수를 쉽게 표현할 수 있다.
&lt;code&gt;fun3(fun2(fun1(x)))&lt;/code&gt; 은 &lt;code&gt;x %&amp;gt;% fun1 %&amp;gt;% fun2 %&amp;gt;% fun3&lt;/code&gt;과 같다&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;실제로 pipe연산이 어떻게 이용되는지 보기 위해서 다음과 같은 연산 과정을 생각해보자&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;iris 데이터에서 Sepal.Length와 Species 열만 선택한다&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Species에 대해 group_by 지정한다&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sepal.Length의 평균과 표준편차를 계산하여 정규화시킨다&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;계산과정을 위해 생성한 열을 제거한다&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;magrittr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;select&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    group_by&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      select&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Sepal.Length&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Species&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
      Species&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    sp_mean &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    sp_sd &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; sd&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    norm &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; sp_mean&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; sp_sd
    &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;sp_mean&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;sp_sd&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [150 x 3]
## Groups: Species
## 
##    Sepal.Length Species        norm
## 1           5.1  setosa  0.26667447
## 2           4.9  setosa -0.30071802
## 3           4.7  setosa -0.86811050
## 4           4.6  setosa -1.15180675
## 5           5.0  setosa -0.01702177
## 6           5.4  setosa  1.11776320
## 7           4.6  setosa -1.15180675
## 8           5.0  setosa -0.01702177
## 9           4.4  setosa -1.71919923
## 10          4.9  setosa -0.30071802
## ..          ...     ...         ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;우선 문제가 되는 것은 연산과정에서 맨 먼저 적용되는, 중심 데이터의 위치를 찾기가 어렵다&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;또, 중심이 되는 iris 데이터를 기준으로 해서 함수들이 중첩되어 있다.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;그래서 코드를 읽으려면 코드 덩어리에 중심에서부터 한 단계씩 밖으로 나오게 되는데
중심을 기준으로 함수명은 앞에, 옵션은 뒤에 있기 때문에 코드를 보고 내용을 이해하기가 힘들어진다&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;위와 같은 상황에서는 가독성을 위해 코드를 중간중간 끊어서 사용하게 되는데, 
그러면 불필요한 임시변수들이 많이 생길 수 있다&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위 코드를 pipe를 이용해서 정리하면 다음과 같다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  select&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  group_by&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sp_mean &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
         sp_sd &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; sd&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
         norm &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; sp_mean&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; sp_sd&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  select&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;sp_mean&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;sp_sd&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [150 x 3]
## Groups: Species
## 
##    Sepal.Length Species        norm
## 1           5.1  setosa  0.26667447
## 2           4.9  setosa -0.30071802
## 3           4.7  setosa -0.86811050
## 4           4.6  setosa -1.15180675
## 5           5.0  setosa -0.01702177
## 6           5.4  setosa  1.11776320
## 7           4.6  setosa -1.15180675
## 8           5.0  setosa -0.01702177
## 9           4.4  setosa -1.71919923
## 10          4.9  setosa -0.30071802
## ..          ...     ...         ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;일단 코드가 훨씬 깔끔하게 정리되었다&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;또 함수와 해당 함수의 옵션 및 추가적인 인수들을 같은 줄에서 관리할 수 있다&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;시작이 되는 데이터가 iris 라는 것이 명확하게 보이고, 우리가 처음에 생각했던 연산 순서대로 함수를 볼 수 있게 되었다&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code&gt;dplyr&lt;/code&gt; 등의 패키지는 자동으로 &lt;code&gt;%&amp;gt;%&lt;/code&gt; 함수를 불러오기 때문에 &lt;code&gt;magrittr&lt;/code&gt; 패키지를 굳이 불러오지 않더라도 많이 사용하게 되는데 &lt;code&gt;magrittr&lt;/code&gt; 패키지를 불러오면 기본 pipe 이외에도 몇 가지 추가적인 기능을 제공하는 pipe operator와 pipeline을 통한 코드 작성을 도와주는 함수들을 더 제공한다&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;다양한-파이프-연산자들&quot;&gt;다양한 파이프 연산자들&lt;/h2&gt;

&lt;h3 id=&quot;&amp;#39;tee&amp;#39;-operator-%t&amp;gt;%&quot;&gt;&amp;lsquo;tee&amp;rsquo; operator %T&amp;gt;%&lt;/h3&gt;

&lt;p&gt;pipe를 기준으로 왼쪽에 있는 연산은 값을 반환하지만 오른쪽에 있는 연산은 값을 반환하지 않는다. 따라서 tee opeator 다음에는 print, plot 등의 함수를 사용해서 연산 중간에 자연스럽게 부수적인 결과물을 출력시킬 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;rnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%T&amp;gt;%&lt;/span&gt;
  print &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1]  0.4826458 -0.8295812  0.1662653  0.0854539  0.9908439
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 0.1791255
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위 코드는 표준정규분포를 따르는 난수 5개를 발생시키고&lt;/p&gt;

&lt;p&gt;해당 난수를 print함수를 이용해 출력한 다음에 5개 난수의 평균을 내보낸다.&lt;/p&gt;

&lt;p&gt;rnorm(5)에서 나온 값이 print와 mean에 반영된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%T&amp;gt;%&lt;/span&gt;
  plot &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  select&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/magrittr/unnamed-chunk-4-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length
## 1          5.1
## 2          4.9
## 3          4.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위 코드에서는 iris 데이터의 1~3행에 대해서 plot을 그리고 Sepal.Length 열만 선택한다&lt;/p&gt;

&lt;p&gt;plot 함수는 기본적으로 데이터를 반환하지 않기 때문에 pipeline의 중간에 plot을 넣기 위해 tee operator를 사용했다&lt;/p&gt;

&lt;h3 id=&quot;&amp;#39;exposition&amp;#39;-operator-%$%&quot;&gt;&amp;#39;exposition&amp;rsquo; operator %$%&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;with&lt;/code&gt; 함수의 축약버전이다. pipe 기준으로 왼쪽에 있는 오브젝트 내의 name을 pipe 오른쪽의 연산에서 오브젝트 처럼 사용할 수 있게 해준다&lt;/p&gt;

&lt;p&gt;다음 세 가지 코드는 같은 결과물을 출력한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;cor&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Petal.Length&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; iris&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Petal.Width&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 0.9628654
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     cor&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Petal.Length&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Petal.Width&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 0.9628654
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%$%&lt;/span&gt;
  cor&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Petal.Length&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Petal.Width&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 0.9628654
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;compound-assignment-operator-%&amp;lt;&amp;gt;%&quot;&gt;compound assignment operator %&amp;lt;&amp;gt;%&lt;/h3&gt;

&lt;p&gt;chain의 맨 처음에서 사용될 수 있다. pipeline의 결과물을 operator 왼쪽의 오브젝트에 저장한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;data &amp;lt;- data %&amp;gt;% func1 %&amp;gt;% func2&lt;/code&gt; 는 &lt;code&gt;data %&amp;lt;&amp;gt;% func1 %&amp;gt;% func2&lt;/code&gt; 와 같다&lt;/p&gt;

&lt;p&gt;c(1:10)의 값을 모두 로그변환을 하고 소수점 둘째 자리까지만 남도록 반올림한다면&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;x &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;
x &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##  [1] 0.00 0.69 1.10 1.39 1.61 1.79 1.95 2.08 2.20 2.30
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;x &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;
x &lt;span class=&quot;o&quot;&gt;%&amp;lt;&amp;gt;%&lt;/span&gt; log &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##  [1] 0.00 0.69 1.10 1.39 1.61 1.79 1.95 2.08 2.20 2.30
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;기본연산을-대체하는-함수들&quot;&gt;기본연산을 대체하는 함수들&lt;/h2&gt;

&lt;p&gt;magrittr 패키지에서는 다양한 기본 연산을 pipeline에 쉽게 적용할 수 있도록 다양한 기본 연산에 대한 대체 함수를 제공한다&lt;/p&gt;

&lt;p&gt;예를 들면, &lt;code&gt;iris %&amp;gt;% select(Species)&lt;/code&gt; 는 데이터프레임의 형태로 Species 를 반환하는데
&lt;code&gt;iris$Species&lt;/code&gt; 처럼 단순하게 벡터 형태로 반환해야 한다면
&lt;code&gt;&amp;#39;$&amp;#39;&lt;/code&gt; 함수를 직접 호출하여 이용할 수도 있지만
magrittr의 &lt;code&gt;use_series&lt;/code&gt; 함수를 이용할 수 있다&lt;/p&gt;

&lt;p&gt;따라서 아래 두 연산은 동일하다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtcars &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&amp;#39;$&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mpg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##  [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 15.2
## [15] 10.4 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 26.0 30.4
## [29] 15.8 19.7 15.0 21.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtcars &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  use_series&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mpg&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##  [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 15.2
## [15] 10.4 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 26.0 30.4
## [29] 15.8 19.7 15.0 21.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;또 &lt;code&gt;&amp;#39;==&amp;#39;&lt;/code&gt; 연산에 대한 함수로 &lt;code&gt;equals&lt;/code&gt; 함수를 제공한다
결과물이 TRUE, FALSE로 반환되기 때문에 &lt;code&gt;dplyr::filter&lt;/code&gt; 등의 함수에서도 적용할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kc&quot;&gt;letters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  equals&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##  [1]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
## [12] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
## [23] FALSE FALSE FALSE FALSE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtcars &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;cyl &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; equals&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##     mpg cyl  disp  hp drat    wt  qsec vs am gear carb
## 1  22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1
## 2  24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2
## 3  22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2
## 4  32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1
## 5  30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2
## 6  33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1
## 7  21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1
## 8  27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1
## 9  26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2
## 10 30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2
## 11 21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;gcookbook&lt;/code&gt; 패키지의 &lt;code&gt;aapl&lt;/code&gt;데이터에서 2012년의 자료만 필터링하려면 다음과 같이 해볼 수 있다.&lt;/p&gt;

&lt;p&gt;아래 두 가지 방법은 동일한 결과물을 출력한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;gcookbook&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
aapl &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;%Y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;2012&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##         date adj_price
## 1 2012-01-06    420.59
## 2 2012-01-13    418.02
## 3 2012-01-20    418.50
## 4 2012-01-27    445.37
## 5 2012-02-03    457.71
## 6 2012-02-10    491.31
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;aapl &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;date &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;%Y&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; equals&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2012&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##         date adj_price
## 1 2012-01-06    420.59
## 2 2012-01-13    418.02
## 3 2012-01-20    418.50
## 4 2012-01-27    445.37
## 5 2012-02-03    457.71
## 6 2012-02-10    491.31
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이처럼 다양한 연산에 대한 대체 함수를 이용하면 pipeline 위주로 코드를 작성할 때 도움이 될 수 있다&lt;/p&gt;

&lt;p&gt;함수들의 목록은 다음과 같다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_image/magrittr/magrittr_alias.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;함수를 pipe의 형태로 적용하면 중복되는 pipe 연산들에 동시에 적용할 수도 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  group_by&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  summarise&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;cnt &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; n&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [3 x 2]
## 
##      Species cnt
## 1     setosa  50
## 2 versicolor  50
## 3  virginica  50
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;count_group &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; group_by&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; summarise&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;cnt &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; n&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  count_group
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [3 x 2]
## 
##      Species cnt
## 1     setosa  50
## 2 versicolor  50
## 3  virginica  50
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;동일한 연산 과정들이 반복되거나, 구조가 같은 여러 자료에 공통적으로 적용할 수 있는 연산들의 경우에는
이러한 방법으로 함수를 작성하여 반복되는 연산을 간단하게 표현할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;magrittr&lt;/code&gt;패키지에 대해 더 알아보려면 패키지 내에 존재하는 vignette 문서를 살펴보거나 다음
&lt;a href=&quot;http://www.r-statistics.com/2014/08/simpler-r-coding-with-pipes-the-present-and-future-of-the-magrittr-package/&quot;&gt;문서&lt;/a&gt; 등을 읽어보면 보움이 될 것이다&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/magrittr&quot;&gt;magrittr - Ceci n'est pas une pipe&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on August 09, 2015.&lt;/p&gt;</content>
</entry>

</feed>
