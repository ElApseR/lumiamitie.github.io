<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">lmnsh</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://lumiamitie.github.io/feed.xml" />
<link rel="alternate" type="text/html" href="http://lumiamitie.github.io" />
<updated>2016-08-10T22:23:00+09:00</updated>
<id>http://lumiamitie.github.io/</id>
<author>
  <name>Minho Lee</name>
  <uri>http://lumiamitie.github.io/</uri>
  <email>lumiamitie@email.com</email>
</author>


<entry>
  <title type="html"><![CDATA[ggplot2 축 레이블 포맷 바꾸기]]></title>
  <link>http://lumiamitie.github.io/r/visualization/ggplot2-scale-label</link>
  <id>http://lumiamitie.github.io/r/visualization/ggplot2-scale-label</id>
  <published>2016-08-10T00:00:00+09:00</published>
  <updated>2016-08-10T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/macphoto.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;축-레이블-포맷-바꾸기&quot;&gt;축 레이블 포맷 바꾸기&lt;/h1&gt;

&lt;p&gt;그냥 혼자서 그래프를 볼 때에는 크게 중요하지 않을 수 있지만, 다른 사람에게 전달하고자 하는 그래프를 작성할 때 중요한 것 중 하나가 축의 레이블 포맷이다. x축, y축이 각각 어느 정도의 값을 나타내는 것인지 명확하게 나타내지 않는다면 보는 사람을 혼란스럽게 만들 우려가 있다. (그리고, 미래의 나를 위해 친절을 베푼다고 생각하자. 하루만 지나도 내그래프를 내가 이해하지 못하는 경우가 종종 발생한다) 따라서 명확한 의미 전달을 위해, 축의 눈금값(밑에서는 계속 레이블이라고 부를 것이다)의 포맷을 지정하는 방법을 알아보려고 한다! &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;라이브러리는 ggplot2를 사용하며, 해당 패키지 내부의 &lt;code&gt;diamonds&lt;/code&gt;, &lt;code&gt;economics&lt;/code&gt; 데이터를 실습에 사용할 것이다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# ggplot2 2.1.0&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggplot2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;comma로-구분하는-포맷-적용하기&quot;&gt;comma로 구분하는 포맷 적용하기&lt;/h2&gt;

&lt;p&gt;ggplot2에서는 수치가 커질 경우, 수치를 자동으로 부동소수점으로 변환하여 표기한다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df_largenum &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  label &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;letters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  num &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;80000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_largenum&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; label&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; num&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_bar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;stat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;identity&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_scale_label/unnamed-chunk-2-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;부동소수점 표기를 원하지 않을 경우 label 표기에 대한 함수를 지정해주면 원하는 형식으로 값을 볼 수 있다. 만약 콤마(,)로 구분된 숫자 표기를 원한다면 scales 패키지의 &lt;code&gt;comma&lt;/code&gt; 함수를 사용하면 된다.&lt;/p&gt;

&lt;p&gt;y축의 continuous한 숫자에 대한 scale 변경이므로, &lt;code&gt;scale_y_continuous&lt;/code&gt; 함수에서 적용한다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_largenum&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; label&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; num&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_bar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;stat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;identity&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  scale_y_continuous&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;labels &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; scales&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;comma&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_scale_label/unnamed-chunk-3-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;scales&lt;/code&gt; 패키지에는 여러 가지 유용한 함수들이 있다. 모든 함수를 살펴보면 좋겠지만 이 글에서는 &lt;code&gt;comma&lt;/code&gt;와 &lt;code&gt;percent&lt;/code&gt;만 간단하게 다룬다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;한글-숫자단위로-수치-나타내기-custom-label&quot;&gt;한글 숫자단위로 수치 나타내기 (Custom Label)&lt;/h2&gt;

&lt;p&gt;K, B 등의 영문자로 단위를 나타내거나 만, 억 등 자신이 원하는 단위로 눈금을 나타내고 싶은 경우가 있다. 특히나 매출같은 경우 단위가 1억원을 훌쩍 넘기는 상황도 많이 발생한다. 한글로 수치를 표현하려면 어떻게 해야할까?  &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;100,000,000&lt;/code&gt; 이 아니라 &lt;code&gt;1억&lt;/code&gt; 으로 표시하려면 어떻게 해야하는지 살펴보자!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;우선 economics 데이터로 간단한 그래프를 그린다. y축을 보면 20만부터 32만까지 값이 존재한다. &lt;code&gt;200000&lt;/code&gt;을 &lt;code&gt;20만&lt;/code&gt;으로 변경해보자!&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;economics&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; pop&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_line&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_scale_label/unnamed-chunk-4-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;사용자가 임의로 지정하는 레이블 함수를 만들 수 있다. 눈금에 해당하는 수치를 받아서 원하는 표기의 문자열을 반환하는 함수를 만들면 된다. y축의 숫자를 만단위로 표시하는 함수를 만들고, scale에 적용하자.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;label_ko_num &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;num&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  ko_num &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    new_num &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; x &lt;span class=&quot;o&quot;&gt;%/%&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10000&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;paste&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;new_num&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;만&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sep &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# vapply를 쓰고 싶지만 가끔 문자열대신 NA가 출력되는 경우도 있으니 &lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# 여기서는 간단하게 sapply를 적용&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;num&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; ko_num&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그러면 아래 그래프와 같이 한글 숫자표기가 적용된 눈금을 확인할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;economics&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; pop&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_line&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  scale_y_continuous&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;labels &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; label_ko_num&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_scale_label/unnamed-chunk-6-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;범용적인 스케일 함수를 만들고 싶다면 여러 가지 상황을 고려하여 함수를 만들어야 한다. 하지만 해당 그래프에 대해서만 적용해도 상관없다면 이렇게 상황에 맞는 간단한 함수를 만들어 쓰면 된다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;백분율-포맷-적용하기&quot;&gt;백분율(%) 포맷 적용하기&lt;/h2&gt;

&lt;p&gt;아래 그래프의 y축에서는 0부터 1 사이의 소수로 비율을 표시하고 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;diamonds&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;cut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; color&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_bar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;position &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;fill&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  scale_fill_brewer&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;palette &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Paired&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_scale_label/unnamed-chunk-7-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;직접 %를 적용하는 함수를 만들어도 좋겠지만 &lt;code&gt;scales::percent&lt;/code&gt; 함수를 바로 적용해보자&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;diamonds&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;cut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; color&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_bar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;position &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;fill&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  scale_y_continuous&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;labels &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; scales&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;percent&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  scale_fill_brewer&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;palette &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Paired&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_scale_label/unnamed-chunk-8-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;평소에는 크게 중요하게 생각하지 않았지만 막상 일을 하면서 중요하다고 느꼈던 것이 바로 이런 것들이었다. 제목, 축, 범례 등등. 결국 그래프를 처음 보는 사람도 한 눈에 보고 이해할 수 있으려면 친절한 &amp;lsquo;가이드&amp;#39;가 필요하다. 생각보다 손이 많이가고 귀찮기 때문에 건드리기 싫은 영역이긴 하지만, 좋은 그래프를 위해 한 번만 더 신경써보자.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/visualization/ggplot2-scale-label&quot;&gt;ggplot2 축 레이블 포맷 바꾸기&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on August 10, 2016.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[ggplot2 label 설정하기]]></title>
  <link>http://lumiamitie.github.io/r/visualization/ggplot2-labs</link>
  <id>http://lumiamitie.github.io/r/visualization/ggplot2-labs</id>
  <published>2016-05-23T00:00:00+09:00</published>
  <updated>2016-05-23T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/desk-pen-ruler.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;ggplot2-labs&quot;&gt;ggplot2 labs&lt;/h1&gt;

&lt;p&gt;데이터를 살펴보다보면 여러 가지 그래프를 그리게 된다. 분석 과정에서 인사이트를 얻기 위해 그리는 그래프라면 최대한 빠르고 간단하게 다양한 그래프를 그린다. 하지만 다른 사람에게 정보를 전달하기 위해서 그래프를 그리게 된다면 그래프를 보고 한눈에 이해할 수 있도록 신경써야 하는 것들이 생긴다. 이 그래프가 무엇을 설명하려고 하는 것인지 전체적인 제목이 필요할테고, x축과 y축이 각각 어떤 변수를 말하는지 제목을 붙이는 것도 필요하다. 그래프의 의미를 명확하게 전달하려면 그래프를 그린 사람이 직접 설명해주는 것이 제일 좋겠지만, 그래프만 보더라도 의미를 유추할 수 있도록 최소한의 정보는 표시해 두는 것이 제일 좋다. (그리고 이렇게 해두면 많은 경우 미래의 나에게 도움을 줍니다&amp;hellip;&amp;hellip;.ㅠㅠ)&lt;/p&gt;

&lt;p&gt;따라서 이번 글에서는 그래프의 제목을 달아보고, x/y 축과 범례에 이름을 지정하는 방법을 알아보려고 한다. 그리고 추가로 facet을 구성할 때 facet의 label을 임의로 지정하는 방법까지 살펴볼 것이다.&lt;/p&gt;

&lt;p&gt;혹시 ggplot2가 익숙하지 않은 분들을 위해, 좀 예전 버전 ggplot2를 대상으로 작성되었지만 그래도 아직 쓸만한 것 같은 예전 포스팅들 링크를 첨부한다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/visualization/ggplot2-01/&quot;&gt;ggplot2 01 : GRAMMAR OF GRAPHICS&lt;/a&gt; &lt;br /&gt;
&lt;a href=&quot;http://lumiamitie.github.io/r/visualization/ggplot2-02/&quot;&gt;ggplot2 02 : DRAWING GRAPHS&lt;/a&gt; &lt;br /&gt;
&lt;a href=&quot;http://lumiamitie.github.io/r/visualization/ggplot2-03/&quot;&gt;ggplot2 03&lt;/a&gt; &lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;library&quot;&gt;Library&lt;/h2&gt;

&lt;p&gt;그래프와 데이터를 위해 ggplot2를 불러온다. 그리고 개인적인 취향(..)으로 magrittr의 파이프 연산자(&lt;code&gt;%&amp;gt;%&lt;/code&gt;)를 자주 섞어서 사용하고 있다. 파이프 연산자를 좋아하지 않는다면 &lt;code&gt;ggplot2&lt;/code&gt;만 불러와서 진행하면 된다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;magrittr&lt;/code&gt; 패키지의 더 자세한 사용법이 궁금하시다면 &lt;a href=&quot;http://lumiamitie.github.io/r/magrittr/&quot;&gt;예전 포스팅&lt;/a&gt; 에서 확인!&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggplot2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;magrittr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;diamonds-data&quot;&gt;Diamonds data&lt;/h2&gt;

&lt;p&gt;ggplot2 패키지에서 기본적으로 제공하는 &lt;code&gt;diamonds&lt;/code&gt; 데이터를 가지고 간단한 누적 막대그래프를 그린다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;p_dia &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; diamonds &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; color&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;cut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    geom_bar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;stat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;count&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; position &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;fill&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    scale_fill_brewer&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;palette &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Paired&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;윈도우 등 그래프에서 한글 출력 이슈가 없는 경우에는 상관없지만 Mac에서는 이후에 추가할 한글 제목들이 깨져서 출력될 수 있다.&lt;/p&gt;

&lt;p&gt;따라서 Mac 사용자는 아래와 같이 진행한다.
한글을 포함하는 글꼴로 지정해 주어야 한글 출력이 가능해진다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;p_dia &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; diamonds &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; color&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;cut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    geom_bar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;stat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;count&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; position &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;fill&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    scale_fill_brewer&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;palette &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Paired&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    theme_gray&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;base_family &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;AppleGothic&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 이 부분은 Mac 사용자만!&lt;/span&gt;

p_dia
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_labs/unnamed-chunk-3-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;그래프-제목-축-이름-넣기&quot;&gt;그래프 제목, 축 이름 넣기&lt;/h2&gt;

&lt;p&gt;x축, y축에는 각각 &lt;code&gt;xlab&lt;/code&gt;, &lt;code&gt;ylab&lt;/code&gt; 함수를 통해서 축 이름을 넣을 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;p_dia &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  xlab&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;색상&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  ylab&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;비율&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_labs/unnamed-chunk-4-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그래프에 제목을 넣고 싶다면 &lt;code&gt;ggtitle&lt;/code&gt; 함수를 사용하면 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;p_dia &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  xlab&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;색상&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  ylab&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;비율&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  ggtitle&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;색상별 등급 비율&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_labs/unnamed-chunk-5-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;범례-이름넣기&quot;&gt;범례 이름넣기&lt;/h2&gt;

&lt;p&gt;범례 항목의 이름을 바꾸는 방법은 여러 가지가 있다
우선 해당하는 에스테틱의 scale 함수에서 &lt;code&gt;name&lt;/code&gt; 항목을 지정해주면 된다
&lt;code&gt;cut&lt;/code&gt; 변수가 &lt;code&gt;fill&lt;/code&gt; 에스테틱과 연결되어 있기 때문에 &lt;code&gt;scale_fill_xxxx&lt;/code&gt; 함수에 제목을 넣는다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;diamonds &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; color&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;cut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    geom_bar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;stat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;count&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; position &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;fill&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    scale_fill_brewer&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;name &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;등급&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; palette &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Paired&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    theme_gray&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;base_family &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;AppleGothic&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    xlab&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;색상&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
    ylab&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;비율&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    ggtitle&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;색상별 등급 비율&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_labs/unnamed-chunk-6-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;또는 &lt;code&gt;labs&lt;/code&gt; 함수를 통해서 &lt;code&gt;fill&lt;/code&gt; 에스테틱에 해당하는 이름을 지정할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;p_dia &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  xlab&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;색상&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  ylab&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;비율&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  ggtitle&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;색상별 등급 비율&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  labs&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;등급&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_labs/unnamed-chunk-7-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;labs&lt;/code&gt; 함수를 사용하면 &lt;code&gt;xlab&lt;/code&gt;, &lt;code&gt;ylab&lt;/code&gt;, &lt;code&gt;ggtitle&lt;/code&gt;도 한꺼번에 같이 지정할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;p_dia &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  labs&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;title &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;색상별 등급 비율&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;색상&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;비율&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;등급&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_labs/unnamed-chunk-8-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;facet-labelling-표기-방법-변경&quot;&gt;Facet Labelling - 표기 방법 변경&lt;/h2&gt;

&lt;p&gt;TRUE/FALSE로 구분되는 logical 변수를 두 개 만들고 Facet으로 구분해서 그래프를 그려보자. 1캐럿이 넘는지 여부로 한 번 구분하고, 가격이 $1000가 넘는지 여부로 한 번 더 구분한다. 그리고 각 그룹별로 등급이 어떻게 구분되어 있는지 살펴보자.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;diamonds_subset &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  carat_over1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; diamonds&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;carat &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  price_over1000 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; diamonds&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;price &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  cut &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; diamonds&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;cut&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;carat ~ price&lt;/code&gt; 의 형태로 &lt;code&gt;facet_grid&lt;/code&gt;를 적용한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;diamonds_subset &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;cut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    geom_bar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;steelblue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    facet_grid&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;carat_over1 &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; price_over1000&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_labs/unnamed-chunk-10-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;diamonds_subset &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   carat_over1 price_over1000       cut
## 1       FALSE          FALSE     Ideal
## 2       FALSE          FALSE   Premium
## 3       FALSE          FALSE      Good
## 4       FALSE          FALSE   Premium
## 5       FALSE          FALSE      Good
## 6       FALSE          FALSE Very Good
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;가로 구분도 TRUE/FALSE, 세로 구분도 TRUE/FALSE이기 때문에 어디가 어떤 변수인지 파악하기 힘들다. &lt;/p&gt;

&lt;p&gt;따라서 facet의 label에 변수값과 변수명이 동시에 표시되도록 설정해버리자&lt;/p&gt;

&lt;p&gt;&lt;code&gt;labeller&lt;/code&gt; 옵션에 &lt;code&gt;label_both&lt;/code&gt; 함수를 지정해준다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;diamonds_subset &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;cut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    geom_bar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;steelblue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    facet_grid&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;carat_over1 &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; price_over1000&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
               labeller &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; label_both&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_labs/unnamed-chunk-11-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;labeller에 사용할 수 있는 옵션은 다음과 같다&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;label_value&lt;/code&gt; : 값만 표시한다 (기본값)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;label_both&lt;/code&gt; : 변수와 값을 모두 표시한다&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;label_context&lt;/code&gt; : v1 ~ v2 + v3 처럼 한 쪽에 여러 개의 변수가 들어가는 상황에는 &lt;code&gt;label_both&lt;/code&gt;, 그렇지 않다면 &lt;code&gt;label_value&lt;/code&gt;를 사용한다&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;label_parsed&lt;/code&gt; : label에 수식을 넣고 싶을 때 사용한다&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;자세한 내용을 확인하고 싶다면 콘솔창에 &lt;code&gt;?labellers&lt;/code&gt;로 검색해보면 된다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;facet-labelling-표기-내용-변경&quot;&gt;Facet Labelling - 표기 내용 변경&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;facet_wrap&lt;/code&gt;에서 label을 이름 자체를 바꾸고 싶을 때도 있다. 가장 쉽게 접근하는 방법은 ggplot 그래프를 만들기 전에 변수명 자체를 바꿔버리는 것이다. 하지만 띄어쓰기가 포함된 제목을 넣고 싶다면?? 변수 이름으로 지정할 수 없는 형태의 문자열을 넣어야 한다면 어떻게 해야 할까?&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Sepal.Length&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Sepal.Width&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    geom_point&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    facet_wrap&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_labs/unnamed-chunk-12-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;변수명 - 표시하려는 이름 형태로 변수를 만든다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;species_label &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  setosa &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Group A&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  versicolor &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Group B&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  virginica &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Group C&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;labeller&lt;/code&gt;함수를 통해 Species 변수와 변경하려는 이름이 지정된 벡터를 연결시킨다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Sepal.Length&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Sepal.Width&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    geom_point&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    facet_wrap&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; Species&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
               labeller &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; labeller&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Species &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; species_label&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggplot2_labs/unnamed-chunk-14-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;여기서 설명했던 내용들은 혼자 분석하고 내가 볼 그래프를 그리기만 할 때는 크게 중요하지 않은 내용이지만, 의외로 필요할 때는 시간을 많이 잡아먹는 것들이다. 정말 해결이 안되는 문제라면 pdf / svg 로 내보내거나 메타데이터 형태로 빼내어서 외부 프로그램을 통해 수정하는 것들이 더 빠를 수 있다. 하지만 반복적인 작업이 필요한 경우라면 최대한 코드를 통해 해결할 수 있는 방법을 찾는 것이 좋다. &lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/visualization/ggplot2-labs&quot;&gt;ggplot2 label 설정하기&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on May 23, 2016.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[MCMC for dummies in r]]></title>
  <link>http://lumiamitie.github.io/r/mcmc-for-dummies</link>
  <id>http://lumiamitie.github.io/r/mcmc-for-dummies</id>
  <published>2016-05-10T00:00:00+09:00</published>
  <updated>2016-05-10T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/rocks-waves.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;mcmc-for-dummies&quot;&gt;MCMC for dummies&lt;/h1&gt;

&lt;p&gt;학부 확률과정론 시간에 교수님께서 MCMC를 열성적으로 강의하셨지만 학생들이 너무 멘붕에 빠져서 결국 시험범위에서는 제외되었던 기억이 난다. 그것이 mcmc에 대한 첫 인상이었는데, 졸업까지 총 세 과목에서 공부했지만 제대로 공부하지 않고 항상 피해다니려고만 했다. 그리고 결국 다시 공부를 해야하지 않을까 하는 생각이 마구마구 든다. 이럴거면 미리 잘 해둘걸&amp;hellip;.&lt;/p&gt;

&lt;p&gt;아무래도 수식보다는 절차가 잘 설명되어있는 코드를 직접 돌려보면서 공부하는 것이 좋을 것 같아서 관련 글을 검색해보기 시작했다. 그러다 찾아낸 &lt;a href=&quot;http://twiecki.github.io/blog/2015/11/10/mcmc-sampling/&quot;&gt;http://twiecki.github.io/blog/2015/11/10/mcmc-sampling/&lt;/a&gt; 을 보고 해당 글의 내용을 R로 옮겨서 작성해봐야겠다는 생각이 들었다. 포스팅 후반부의 시각화 부분은 제외하고 mcmc 샘플링 함수를 구성하는 과정까지만 옮겨보았다. R코드 위주로만 정리했기 때문에 MCMC에 대한 구체적인 내용을 살펴보고 싶다면 원본 게시물과 다른 자료들을 참고하시길!&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggplot2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-데이터-생성&quot;&gt;1. 데이터 생성&lt;/h2&gt;

&lt;p&gt;표준 정규분포를 따르는 변수 100개를 생성한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;set.seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; rnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
df_data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;생성한 데이터의 분포를 히스토그램을 통해 확인해보자&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df_data &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    geom_histogram&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bins &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; fill&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;steelblue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    xlim&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    ggtitle&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Histogram of observed data&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/mcmc_for_dummies/unnamed-chunk-3-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;이제 평균의 posterior분포를 찾아보자. 표준편차는 1이라는 것을 알고있다고 가정한다&lt;/p&gt;

&lt;p&gt;우선 이론적으로 prior가 정규분포일때의 posterior는 동일하게 정규분포를 따른다&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Conjugate_prior&quot;&gt;https://en.wikipedia.org/wiki/Conjugate_prior&lt;/a&gt; 에서 &lt;em&gt;Normal with known variance의 Posterior hyperparameters&lt;/em&gt;를 참고하여 함수를 작성한다 &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;calc_post_analytical &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu_0&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sigma_0&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  sigma &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
  n &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  mu_post_u &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mu_0 &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sigma_0&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sigma&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  mu_post_l &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sigma_0&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sigma&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# posterior mean, sigma&lt;/span&gt;
  mu_post &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mu_post_u &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; mu_post_l
  sigma_post &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mu_post_l &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# (Analytical) posterior density plot&lt;/span&gt;
  post_x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; x
  post_y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; dnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;post_x&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu_post&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sigma_post&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  post_df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; post_x&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; post_y
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  result &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# posterior parameter&lt;/span&gt;
    param &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mu_post&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sigma_post&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
    &lt;span class=&quot;c1&quot;&gt;# sample data for posterior pdf&lt;/span&gt;
    post_data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; post_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# posterior pdf by ggplot2&lt;/span&gt;
    pdf &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;post_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;y&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
      geom_line&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;colour &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;steelblue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
      ggtitle&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Analytical Posterior&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# add names to result$param&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;param&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mu_post&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;sigma_post&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이제 위에서 생성했던 데이터를 바탕으로 이론적인 posterior를 구할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;post_analytical &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; calc_post_analytical&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; length.out &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;calc_post_analytical&lt;/code&gt;함수의 결과물은 세 가지 항목을 가진다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Posterior의 평균과 표준편차&lt;/li&gt;
&lt;li&gt;posterior 분포 데이터&lt;/li&gt;
&lt;li&gt;posterior 분포의 ggplot2 그래프&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# mu_post , sigma_post&lt;/span&gt;
post_analytical&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;param
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##       mu_post    sigma_post 
## -4.012192e-16  9.950372e-02
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;post_analytical&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;post_data&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##            x            y
## 1 -1.0000000 4.690287e-22
## 2 -0.9959920 7.025119e-22
## 3 -0.9919840 1.050518e-21
## 4 -0.9879760 1.568369e-21
## 5 -0.9839679 2.337699e-21
## 6 -0.9799599 3.478759e-21
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Analytical Posterior&lt;/span&gt;
post_analytical&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/mcmc_for_dummies/unnamed-chunk-8-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-mcmc-sampling&quot;&gt;2. MCMC Sampling&lt;/h2&gt;

&lt;p&gt;MCMC를 통해 샘플링하는 과정을 단계별로 나누어서 살펴보자.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-set-starting-position&quot;&gt;1 Set starting position&lt;/h3&gt;

&lt;p&gt;MCMC sampling을 진행하려면 먼저 초기값을 설정해야 한다. 여기서 초기값은 임의의 값으로 두어도 괜찮다. 일단은 값을 1로 두고 시작해보자&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mu_current &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-make-proposal&quot;&gt;2 Make Proposal&lt;/h3&gt;

&lt;p&gt;이제 기존에 있던 위치에서 다른 곳으로 옮겨갈수도 있다. 현재 mu값(&lt;code&gt;mu_current&lt;/code&gt;)을 중심으로 하는 정규분포를 가정하고 옮겨갈 위치를 제안할 수 있다. 이 때 표준편차는 &lt;code&gt;proposal_width&lt;/code&gt;라는 변수로 정의해서 이동 범위를 정할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;proposal_width &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;set.seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
mu_proposal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; rnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu_current&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; proposal_width&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;이번에는 제안한 지점이 옮겨갈만한 곳인지 판단해야 한다. 새로 제안한 mu값을 바탕으로 한 분포가 기존 분포보다 데이터를 더 잘 설명한다면, 옮겨가도 좋을 것이다. 현재 지점과 옮겨갈 지점의 prior probability와 likelihood를 구하고 두 값을 곱해서 비교한다(Bayes정리의 분자 부분)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;likelihood_current &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; dnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu_current&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
likelihood_proposal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; dnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu_proposal&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

mu_prior_mu &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
mu_prior_sd &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
prior_current &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; dnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mu_current&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu_prior_mu&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu_prior_sd&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
prior_proposal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; dnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mu_proposal&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu_prior_mu&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu_prior_sd&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Bayes정리의 분자부분&lt;/span&gt;
p_current &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; prior_current &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;prod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;likelihood_current&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
p_proposal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; prior_proposal &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;prod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;likelihood_proposal&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-accept-reject-the-proposal&quot;&gt;3 Accept / Reject the proposal&lt;/h3&gt;

&lt;p&gt;이제 두 값을 나눈다!&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;p_accept &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; p_proposal &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; p_current
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;0부터 1사이의 값을 가지는 난수를 하나 발생시키고 &lt;code&gt;p_accept&lt;/code&gt;값과 비교한다. 따라서 &lt;code&gt;p_proposal&lt;/code&gt;이 &lt;code&gt;p_current&lt;/code&gt;보다 값이 큰 경우에는 제안이 무조건 받아들여진다. 현재 parameter의 확률이 더 높은 경우에는 일정 확률로 제안을 받아들인다. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;set.seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
accept &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; runif&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; p_accept
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;제안을 받아들이는 경우 해당 값을 현재 값으로 변경한다. 그리고 이 과정을 반복한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;accept&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  mu_current &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mu_proposal
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이러한 과정을 통해 Posterior 분포에 대한 샘플링 결과물을 얻을 수 있다. 샘플링 과정을 하나의 함수로 구성해보자&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;sampler &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; n_sample &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu_init &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; proposal_width &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   mu_prior_mu &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu_prior_sd &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; seed &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# 난수의 seed값이 필요하다면 여기서 지정한다&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;is.na&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;seed&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;set.seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;seed&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# 초기값을 설정한다&lt;/span&gt;
  mu_current &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mu_init
  posterior_result &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;posterior &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mu_current&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                mu_current &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mu_current&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                mu_proposal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                p_current &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                p_proposal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                accept &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;idx &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;n_sample&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 새로운 mu값을 제안한다&lt;/span&gt;
    mu_proposal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; rnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu_current&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; proposal_width&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 각 mu별로 likelihood를 계산한다&lt;/span&gt;
    likelihood_current &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; dnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu_current&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    likelihood_proposal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; dnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu_proposal&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# prior probability를 계산한다&lt;/span&gt;
    mu_prior_mu &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
    mu_prior_sd &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
    prior_current &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; dnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mu_current&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu_prior_mu&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu_prior_sd&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    prior_proposal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; dnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mu_proposal&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu_prior_mu&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu_prior_sd&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 두 가지 값을 곱한다 (베이즈 정리의 분자값)&lt;/span&gt;
    p_current &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; prior_current &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;prod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;likelihood_current&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    p_proposal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; prior_proposal &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;prod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;likelihood_proposal&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 새로 제안한 값의 확률이 더 크다면 바로 채택&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 기존 값의 확률이 더 크다면 난수를 하나 더 뽑아서 해당 값보다 높으면 채택&lt;/span&gt;
    p_accept &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; p_proposal &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; p_current
    accept &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; runif&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; p_accept

    &lt;span class=&quot;c1&quot;&gt;# 채택되었다면 해당 값을 mu_current로 설정하고 이 과정을 반복한다&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;accept&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
      proposal_df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;posterior &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mu_proposal&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                               mu_current &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mu_current&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                               mu_proposal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mu_proposal&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                               p_current &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; p_current&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                               p_proposal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; p_proposal&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                               accept &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; accept&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      mu_current &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mu_proposal
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      proposal_df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;posterior &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mu_current&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                               mu_current &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mu_current&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                               mu_proposal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mu_proposal&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                               p_current &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; p_current&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                               p_proposal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; p_proposal&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                               accept &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; accept&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    posterior_result &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rbind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;posterior_result&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; proposal_df&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;posterior_result&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;샘플링 결과물을 확인해보자&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mcmc_result &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; sampler&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; n_sample &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; seed &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mcmc_result&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; n&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##     posterior mu_current mu_proposal    p_current   p_proposal accept
## 1   0.5000000  0.5000000          NA           NA           NA     NA
## 2   0.2197622  0.5000000   0.2197622 1.208153e-62 2.544422e-59   TRUE
## 3   0.2197622  0.2197622   0.8148655 2.544422e-59 1.731611e-70  FALSE
## 4   0.2550164  0.2197622   0.2550164 2.544422e-59 1.502840e-59   TRUE
## 5   0.2005334  0.2550164   0.2005334 1.502840e-59 3.216178e-59   TRUE
## 6   0.2005334  0.2005334   0.4309915 3.216178e-59 1.660419e-61  FALSE
## 7   0.2005334  0.2005334   0.8408108 3.216178e-59 2.501439e-71  FALSE
## 8  -0.0222976  0.2005334  -0.0222976 3.216178e-59 3.187863e-59   TRUE
## 9  -0.0222976 -0.0222976   0.2296086 3.187863e-59 2.224370e-59  FALSE
## 10  0.1780881 -0.0222976   0.1780881 3.187863e-59 4.032705e-59   TRUE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;샘플링 결과물의 trace는 아래와 같이 확인할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mcmc_result &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;idx &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; row_number&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;idx&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;posterior&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    geom_line&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;colour &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;steelblue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    ggtitle&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Trace of posterior samples&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/mcmc_for_dummies/unnamed-chunk-17-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;초기값은 0.5였지만 점차 0 ~ 0.2 사이의 값으로 안정화되는 모습을 보인다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;posterior mu 값의 분포를 구하고 위에서 구했던 이론적인 값의 분포와 비교해보자. 그래프에서 점선으로 표시된 분포가 이론적인 계산을 통해 구한 posterior 분포이다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mcmc_result&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3001&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; posterior&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    geom_density&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;fill&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;steelblue&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    geom_line&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; post_analytical&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;post_data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
              aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;y&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
              linetype &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    xlim&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    ggtitle&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Density of Posterior Distribution&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/mcmc_for_dummies/unnamed-chunk-18-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/mcmc-for-dummies&quot;&gt;MCMC for dummies in r&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on May 10, 2016.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[VennDiagram in R - 벤 다이어그램]]></title>
  <link>http://lumiamitie.github.io/r/visualization/venndiagram_in_r</link>
  <id>http://lumiamitie.github.io/r/visualization/venndiagram_in_r</id>
  <published>2016-02-15T00:00:00+09:00</published>
  <updated>2016-02-15T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/desk-pen-ruler.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;venndiagram&quot;&gt;VennDiagram&lt;/h1&gt;

&lt;h1 id=&quot;벤-다이어그램-그리기&quot;&gt;벤 다이어그램 그리기&lt;/h1&gt;

&lt;p&gt;집합간의 대략적인 관계를 보여줄 때 벤 다이어그램을 사용하는 경우가 많다. 수학의 정석 맨 앞부분에 있는 &lt;strong&gt;집합과 명제&lt;/strong&gt; 단원에서 소개가 되기 때문에 많은 사람들이 한 번쯤은 접하게되는 시각화 방법이다. 집합의 개수가 많지 않다면 적은 요소를 가지고도 효과적으로 내용을 전달할 수 있다. &lt;/p&gt;

&lt;p&gt;사실 원 두개로 이루어진 간단한 벤 다이어그램이라면 그냥 엑셀이나 파워포인트를 가지고 그리는 것이 더 간단할 수 있다. 그리고 원이 네 개만 넘어가도 벤 다이어그램의 전달력은 급격하게 감소한다. 그래서 그냥 손으로 그리는게 더 편하다고 해도 할 말 없지만, 사람 일은 모르는 것이기 때문에.. R로 벤 다이어그램 그리는 방법에 대해서 정리해보려고 한다. R로는 간단하게 그린 다음에 SVG 형태로 출력해서 일러스트레이터 등 전문 도구를 활용해 글꼴 정도만 가볍게 손보는 형태로 활용할 수도 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;이 글은 R Studio Pubs의 관련 자료를 바탕으로 작성되었습니다. 
&lt;a href=&quot;http://rstudio-pubs-static.s3.amazonaws.com/13301_6641d73cfac741a59c0a851feb99e98b.html&quot;&gt;http://rstudio-pubs-static.s3.amazonaws.com/13301_6641d73cfac741a59c0a851feb99e98b.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h1 id=&quot;벤-다이어그램-그리기&quot;&gt;벤 다이어그램 그리기&lt;/h1&gt;

&lt;h2 id=&quot;1-기본적인-벤-다이어그램&quot;&gt;1. 기본적인 벤 다이어그램&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;VennDiagram&lt;/code&gt; 패키지를 설치한 후에 진행한다. &lt;code&gt;draw.single.venn&lt;/code&gt;은 가장 기본적인 형태의 벤 다이어그램이다. 그냥 원 하나를 그리고 카테고리와 데이터 값을 보여준다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# install.packages(&amp;#39;VennDiagram&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;VennDiagram&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;draw.single.venn&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;area &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;single&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/venndiagram/unnamed-chunk-1-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3 id=&quot;1-2-면-색상-선-종류-변경하기&quot;&gt;1.2 면 색상, 선 종류 변경하기&lt;/h3&gt;

&lt;p&gt;새로운 다이어그램을 그리기 위해서는 &lt;code&gt;grid.newpage()&lt;/code&gt;를 한 번 적용시킨다(안하면 겹쳐서 그려짐)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;lty&lt;/strong&gt;는 선의 종류(line type)를 변경&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;fill&lt;/strong&gt;은 면의 색상을 변경&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;grid.newpage&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
draw.single.venn&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;area &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                 &lt;span class=&quot;kt&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;single - colorful&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                 lty &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;blank&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                 fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;steelblue&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                 alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/venndiagram/unnamed-chunk-2-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;2-두-개의-원으로-구성된-벤-다이어그램-그리기&quot;&gt;2. 두 개의 원으로 구성된 벤 다이어그램 그리기&lt;/h2&gt;

&lt;p&gt;두 개의 원으로 구성된 벤 다이어그램을 그리기 위해서는 &lt;code&gt;draw.pairwise.venn()&lt;/code&gt;함수를 사용한다. 교집합 부분의 데이터는 &lt;code&gt;cross.area&lt;/code&gt;에 값을 지정하면 된다. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;area1&lt;/code&gt;, &lt;code&gt;area2&lt;/code&gt;는 각 원 전체의 면적을 의미한다. 따라서 벤 다이어그램에 실제로 표시되는 값은 &lt;code&gt;area1 - cross.area&lt;/code&gt;, &lt;code&gt;cross.area&lt;/code&gt;, &lt;code&gt;area2 - cross.area&lt;/code&gt;가 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;grid.newpage&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
draw.pairwise.venn&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;area1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                   area2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                   cross.area &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                   &lt;span class=&quot;kt&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;diagram A&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;diagram B&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/venndiagram/unnamed-chunk-3-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3 id=&quot;2-1-카테고리-레이블-위치-지정하기&quot;&gt;2.1 카테고리 레이블 위치 지정하기&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;cat.pos&lt;/code&gt;는 카테고리 레이블의 위치를 표시한다. 원의 중심을 기준으로 시계방향 각도(0~360도)를 통해 레이블의 위치를 나타내게 된다. 0이면 12시 방향(원의 중심 바로 위), 90이면 3시 방향(원 우측), 180이면 6시 방향(원 아래)에 위치한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cat.dist&lt;/code&gt;는 카테고리 레이블이 원의 가장자리로부터 얼마나 떨어져있는지 거리를 의미한다. 값이 커질수록 원에서 멀어진다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# cat.dist = 0 일 때, cat.pos 45와 180 비교&lt;/span&gt;
grid.newpage&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
draw.pairwise.venn&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;area1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; area2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cross.area &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                   &lt;span class=&quot;kt&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;45 degree, 0 dist&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;180 degree 0 dist&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   lty &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;blank&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;light blue&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;pink&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   cat.pos &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   cat.dist &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/venndiagram/unnamed-chunk-4-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# cat.pos = 0 일 때, cat.dist 0.1과 -0.1 비교&lt;/span&gt;
grid.newpage&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
draw.pairwise.venn&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;area1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; area2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cross.area &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                   &lt;span class=&quot;kt&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0 degree, 0.1 dist&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;0 degree -0.1 dist&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   lty &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;blank&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;light blue&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;pink&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   cat.pos &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   cat.dist &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/venndiagram/unnamed-chunk-5-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3 id=&quot;2-2-원의-크기-변경-여부-결정하기&quot;&gt;2.2 원의 크기 변경 여부 결정하기&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;draw.pairwise.venn()&lt;/code&gt; 함수는 기본적으로 원의 넓이(area1, area2)에 맞게 원의 크기가 조정된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;grid.newpage&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
draw.pairwise.venn&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;area1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; area2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cross.area &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                   &lt;span class=&quot;kt&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bigger&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;smaller&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   lty &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;blank&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;light blue&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;pink&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                   cat.pos &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/venndiagram/unnamed-chunk-6-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;원의 크기를 값과 상관없이 고정시키려면 &lt;code&gt;scaled = FALSE&lt;/code&gt; 옵션을 추가하면 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;grid.newpage&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
draw.pairwise.venn&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;area1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; area2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cross.area &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                   &lt;span class=&quot;kt&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bigger&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;smaller&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   lty &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;blank&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;light blue&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;pink&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                   cat.pos &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                   scaled &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/venndiagram/unnamed-chunk-7-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3 id=&quot;2-3-겹쳐져-있지-않은-벤-다이어그램&quot;&gt;2.3 겹쳐져 있지 않은 벤 다이어그램&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;euler.d = TRUE&lt;/code&gt; 옵션을 지정하면 서로 겹치지 않는 원을 그릴 수 있다. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;euler.d = TRUE&lt;/code&gt;일 때, sep.dist 옵션을 통해 원 사이의 간격을 지정할 수 있다.
&lt;code&gt;rotation.degree&lt;/code&gt;를 통해 원 사이의 각도를 조정할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;euler.d = FALSE&lt;/code&gt; 옵션을 사용하기 위해서는 항상 &lt;code&gt;scaled = FALSE&lt;/code&gt; 옵션과 같이 사용되어야 한다. 이 경우 원의 크기가 변하지 않는 벤 다이어그램이 강제로 그려진다(intersection값이 0)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# sep.dist = 0.01, rotation.degree = 45&lt;/span&gt;
grid.newpage&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
draw.pairwise.venn&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;area1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; area2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cross.area &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                   &lt;span class=&quot;kt&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Bigger&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Smaller&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   lty &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;blank&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;steelblue&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;firebrick&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   cat.pos &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   euler.d &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sep.dist &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                   rotation.degree &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/venndiagram/unnamed-chunk-8-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# sep.dist = 0.2, rotation.degree = 45&lt;/span&gt;
grid.newpage&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
draw.pairwise.venn&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;area1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; area2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cross.area &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                   &lt;span class=&quot;kt&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Bigger&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Smaller&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   lty &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;blank&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;steelblue&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;firebrick&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   cat.pos &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   euler.d &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sep.dist &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                   rotation.degree &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/venndiagram/unnamed-chunk-9-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# sep.dist = 0.2, rotation.degree = 135&lt;/span&gt;
grid.newpage&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
draw.pairwise.venn&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;area1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; area2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cross.area &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                   &lt;span class=&quot;kt&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Bigger&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Smaller&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   lty &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;blank&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;steelblue&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;firebrick&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   cat.pos &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                   euler.d &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sep.dist &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                   rotation.degree &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;135&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/venndiagram/unnamed-chunk-10-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;3-세-개의-원으로-구성된-벤-다이어그램-그리기&quot;&gt;3. 세 개의 원으로 구성된 벤 다이어그램 그리기&lt;/h2&gt;

&lt;p&gt;벤 다이어그램의 원이 3개로 증가하면 7개의 부분집합을 고려하게 된다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;area1, 2, 3&lt;/strong&gt;는 원 두개짜리 벤 다이어그램과 마찬가지로 각 원 전체의 면적을 의미한다. 교집합 부분인 &lt;strong&gt;n12, n23, n13&lt;/strong&gt;도 전체 교집합인 &lt;strong&gt;n123&lt;/strong&gt;의 값을 포함한 상태이기 때문에 이 점에 유의해서 데이터를 입력하자.&lt;/p&gt;

&lt;p&gt;주의해야 할 점은 &lt;code&gt;VennDiagram&lt;/code&gt; 패키지의 함수의 경우 원이 세 개가 되면 원의 크기가 고정된다. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cex&lt;/strong&gt;는 데이터 레이블의 글꼴 크기, cat.cex는 카테고리 레이블의 글꼴 크기를 의미한다. 부분집합이 7개이기 때문에 &lt;code&gt;rep(1.2, 7)&lt;/code&gt;을 통해 길이 7의 벡터를 생성했다. 마찬가지로 카테고리는 3개이기 때문에 길이 3의 벡터를 생성했다.&lt;/p&gt;

&lt;p&gt;색상은 색 이름을 직접 입력하지 않고 &lt;code&gt;RColorBrewer&lt;/code&gt; 패키지의 함수를 이용해 색상을 받아왔다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;grid.newpage&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
draw.triple.venn&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  area1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  area2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  area3 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  n12 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  n23 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  n13 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  n123 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Biggest&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Bigger&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Big&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; RColorBrewer&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;brewer.pal&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Accent&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  lty &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;blank&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  cex &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  cat.cex &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/venndiagram/unnamed-chunk-11-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/visualization/venndiagram_in_r&quot;&gt;VennDiagram in R - 벤 다이어그램&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on February 15, 2016.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[ggplot2 extensions - ggrepel]]></title>
  <link>http://lumiamitie.github.io/r/visualization/ggrepel</link>
  <id>http://lumiamitie.github.io/r/visualization/ggrepel</id>
  <published>2016-02-05T00:00:00+09:00</published>
  <updated>2016-02-05T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/desk-pen-ruler.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;ggplot2-extenstions&quot;&gt;ggplot2 extenstions&lt;/h1&gt;

&lt;p&gt;최근 ggplot2 2.0버전이 공개되면서 ggplot2의 기능을 확장시키는 방법에 대한 공식적인 가이드가 제시되었다. 그에 따라 기존부터 존재하던 ggplot2 관련 패키지들도 새로운 버전에 맞게 수정되거나, 수정되고있고, 다양한 추가 기능을 포함하는 패키지들도 함께 공개되고있다. &lt;/p&gt;

&lt;p&gt;앞으로 확대될 ggplot2의 extension들을 소개하는 페이지도 생겼다 &lt;a href=&quot;http://ggplot2-exts.github.io/&quot;&gt;http://ggplot2-exts.github.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;네트워크 시각화, 애니메이션 추가 등 다양한 기능을 가진 extension들이 존재하지만 이번 글에서는 text label을 겹치지 않도록 해주는 &lt;code&gt;ggrepel&lt;/code&gt; 패키지를 소개하려고 한다&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ggrepel&quot;&gt;ggrepel&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;ggplot2&lt;/code&gt;의 &lt;code&gt;geom_text&lt;/code&gt;나 &lt;code&gt;geom_label&lt;/code&gt;을 사용하다 보면 텍스트가 겹치는 경우가 많이 생긴다. 이러한 경우에 ggrepel은 텍스트가 겹치지 않도록 수정된 geom을 제공해준다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggplot2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggrepel&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;ggplot2&lt;/code&gt;의 &lt;code&gt;msleep&lt;/code&gt; 데이터를 가지고 그래프를 그렸다. &lt;/p&gt;

&lt;p&gt;name의 텍스트들이 길기 때문에 적은 수의 데이터를 가지고 그리더라도 텍스트가 많이 겹치는 것을 볼 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;msleep &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;is.na&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sleep_rem&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sleep_total &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; sleep_rem&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; awake&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
    geom_point&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    geom_text&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;label &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggrepel/unnamed-chunk-2-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;문자열로 된 레이블같은 경우에는 문자열 자체가 가지는 너비와 높이가 있지만 그러한 값들이 데이터에 포함되어 있지는 않다. 따라서 &lt;code&gt;ggplot2&lt;/code&gt;로는 문자열이 겹쳐서 가독성이 떨어지는 현상에 대해서 대처하기 힘들었다.&lt;/p&gt;

&lt;p&gt;이러한 문제에 간단하게 대응할 수 있는 기능이 ggplot2 2.0.0 버전에 추가되었다.( &lt;a href=&quot;http://blog.rstudio.org/2015/12/21/ggplot2-2-0-0/&quot;&gt;업데이트 내용 링크&lt;/a&gt;) &lt;code&gt;geom_text&lt;/code&gt;에서 &lt;code&gt;check_overlap = TRUE&lt;/code&gt;를 설정해주면 겹치는 항목을 &lt;strong&gt;제거&lt;/strong&gt;해서 보여준다. 크게 노력하거나 시간을 들이지 않고 간단하게 시행할 수 있지만, 일부 항목이 누락된다는 단점이 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;msleep &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;is.na&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sleep_rem&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sleep_total &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; sleep_rem&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; awake&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
    geom_point&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    geom_text&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;label &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; check_overlap &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggrepel/unnamed-chunk-3-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code&gt;ggrepel&lt;/code&gt;의 &lt;code&gt;geom_text_repel&lt;/code&gt;의 경우 텍스트들이 차지하는 공간을 고려해서 배치해준다&lt;/p&gt;

&lt;p&gt;사용하는 방법은 기존 함수와 비슷하다. &lt;code&gt;hjust&lt;/code&gt;, &lt;code&gt;vjust&lt;/code&gt;등 기존 &lt;code&gt;geom_text&lt;/code&gt;, &lt;code&gt;geom_label&lt;/code&gt; 함수에서 사용할 수 있는 옵션 중 일부는 사용할 수 없다.&lt;/p&gt;

&lt;p&gt;항목이 많으면 시간이 오래걸릴 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;msleep &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;is.na&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sleep_rem&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sleep_total &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; sleep_rem&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; awake&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
    geom_point&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    geom_text_repel&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;label &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggrepel/unnamed-chunk-4-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code&gt;geom_text&lt;/code&gt;와 마찬가지로 &lt;code&gt;geom_label&lt;/code&gt;에 대응하는 &lt;code&gt;geom_label_repel&lt;/code&gt;함수가 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;msleep &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;is.na&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sleep_rem&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sleep_total &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; sleep_rem&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; awake&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
    geom_point&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    geom_label_repel&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;label &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/ggrepel/unnamed-chunk-5-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;현재 버전에서는 plot 크기에 따라 text/label의 크기가 변하지 않는 등 개선사항이 남아있다. 추후에 업데이트를 통해서 해결할 예정이라고 한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code&gt;ggrepel&lt;/code&gt; 뿐만 아니라 다양한 &lt;code&gt;ggplot2&lt;/code&gt; 관련 패키지들이 공개되고 있다.&lt;/p&gt;

&lt;p&gt;R은 통계 분석 뿐만 아니라 시각화에서도 큰 강점을 보인다고 생각하는데, 이번 기회로 인해 &lt;code&gt;ggplot2&lt;/code&gt;로 대응할 수 있는 영역이 더 확대되었으면 하는 바람이다.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/visualization/ggrepel&quot;&gt;ggplot2 extensions - ggrepel&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on February 05, 2016.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[caret - preProcess]]></title>
  <link>http://lumiamitie.github.io/r/preProcess</link>
  <id>http://lumiamitie.github.io/r/preProcess</id>
  <published>2016-01-09T00:00:00+09:00</published>
  <updated>2016-01-09T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/macphoto.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;preprocessing-the-data&quot;&gt;Preprocessing the data&lt;/h1&gt;

&lt;p&gt;데이터를 분석하다 보면 분석하기 전에 전처리를 수행해야 하는 경우가 많이 발생한다. 전처리를 위해 직접 코드를 짜는 경우도 있고, 다른 패키지에서 제공하는 기능을 사용할 수 있다. 여기서는 &lt;code&gt;caret&lt;/code&gt; 패키지의 &lt;code&gt;preProcess&lt;/code&gt; 함수를 기준으로 해서 함수를 적용하는 방법에 대해 설명하려고 한다.&lt;/p&gt;

&lt;h2 id=&quot;feature-transformations&quot;&gt;Feature transformations&lt;/h2&gt;

&lt;p&gt;caret 패키지에서는 &lt;code&gt;preProcess&lt;/code&gt; 함수를 통해서 표준화 등의 전처리를 수행할 수 있다. &lt;code&gt;caret&lt;/code&gt;을 이용한 변수변환은 두 개의 단계로 구성된다.&lt;/p&gt;

&lt;p&gt;우선 &lt;code&gt;preProcess&lt;/code&gt; 함수를 사용해서 변수변환에 필요한 parameter를 설정한다&lt;/p&gt;

&lt;p&gt;그리고 &lt;code&gt;predict&lt;/code&gt; 함수를 통해 실제로 값을 변화시킨다&lt;/p&gt;

&lt;p&gt;R에서 모델을 구성하고 예측하는 방법과 동일한 구조를 취하고 있기 때문에 기존에 R을 사용하던 사람이라면 쉽게 익숙해질 수 있다. &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code&gt;preProcess&lt;/code&gt; 함수의 첫 번째 인자는 변환시키고자 하는 데이터이다. data.frame의 형태를 가지는 수치 데이터를 요구한다&lt;/p&gt;

&lt;p&gt;두 번째 인자는 변환 방식이다. &lt;code&gt;&amp;quot;range&amp;quot;, &amp;quot;BoxCox&amp;quot;, c(&amp;quot;center&amp;quot;, &amp;quot;scale&amp;quot;), &amp;quot;pca&amp;quot;&lt;/code&gt;등 다양한 방식을 제공한다. 기본값은 &lt;code&gt;c(&amp;quot;center&amp;quot;, &amp;quot;scale&amp;quot;)&lt;/code&gt;이다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3 id=&quot;z-score-normalization&quot;&gt;Z-Score normalization&lt;/h3&gt;

&lt;p&gt;먼저 살펴볼 변수 변환 방식은 &lt;strong&gt;z-score&lt;/strong&gt;를 이용한 정규화이다. 데이터가 정규분포에 가까운 형태를 가질 경우에 생각해 볼 수 있는 방법이다. 각 변수들이 종모양의 형태를 보이지만 단위에서 큰 차이를 보일 때, 분포는 동일하게 유지하면서 값의 단위를 비슷한 수준으로 맞출 수 있다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;preProcess&lt;/code&gt;함수를 적용하면 변환에 대한 정보를 살펴볼 수 있다. 수치형 자료가 아닌 &lt;code&gt;Species&lt;/code&gt; 열은 무시된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# install.packages(&amp;#39;caret&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# install.packages(&amp;#39;e1071&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;caret&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
zs_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; preProcess&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; method &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;center&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;scale&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
zs_iris
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Created from 150 samples and 5 variables
## 
## Pre-processing:
##   - centered (4)
##   - ignored (1)
##   - scaled (4)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;method = &amp;quot;center&amp;quot;&lt;/code&gt;는 데이터에서 평균값을 뺀다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;method = &amp;quot;scale&amp;quot;&lt;/code&gt;은 데이터를 표준편차로 나눈다&lt;/p&gt;

&lt;p&gt;따라서 두 옵션을 모두 사용하면 Z-Score를 사용한 정규화를 시행할 수 있다. 변환시킨 변수는 평균이 0이고 분산이 1이 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;zs_iris_t &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; predict&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;zs_iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;zs_iris_t&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1   -0.8976739  1.01560199    -1.335752   -1.311052  setosa
## 2   -1.1392005 -0.13153881    -1.335752   -1.311052  setosa
## 3   -1.3807271  0.32731751    -1.392399   -1.311052  setosa
## 4   -1.5014904  0.09788935    -1.279104   -1.311052  setosa
## 5   -1.0184372  1.24503015    -1.335752   -1.311052  setosa
## 6   -0.5353840  1.93331463    -1.165809   -1.048667  setosa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;zs_iris_t&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] -4.484318e-16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;var&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;zs_iris_t&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3 id=&quot;feature-scaling-unity-based-normalization&quot;&gt;Feature Scaling (Unity-based normalization)&lt;/h3&gt;

&lt;p&gt;데이터가 균일하게 분포되어있는 경우에는 [0, 1] 범위로 값을 조정하는 것이 도움이 될 수 있다. 데이터의 최대값을 1로 두고 최소값을 0으로 할 때, 각 데이터의 상대적인 위치를 값으로 한다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;un_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; preProcess&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; method &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;range&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
un_iris
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Created from 150 samples and 5 variables
## 
## Pre-processing:
##   - ignored (1)
##   - re-scaling to [0, 1] (4)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;method = &amp;quot;range&amp;quot;&lt;/code&gt;는 데이터를 [0, 1] 사이의 값으로 조정한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;un_iris_t &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; predict&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;un_iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;un_iris_t&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1   0.22222222   0.6250000   0.06779661  0.04166667  setosa
## 2   0.16666667   0.4166667   0.06779661  0.04166667  setosa
## 3   0.11111111   0.5000000   0.05084746  0.04166667  setosa
## 4   0.08333333   0.4583333   0.08474576  0.04166667  setosa
## 5   0.19444444   0.6666667   0.06779661  0.04166667  setosa
## 6   0.30555556   0.7916667   0.11864407  0.12500000  setosa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3 id=&quot;box-cox-transformation&quot;&gt;Box-Cox transformation&lt;/h3&gt;

&lt;p&gt;Box-Cox 변환은 데이터가 한 쪽으로 쏠려있을 때 종모양에 가까운 형태로 데이터를 조정할 수 있게 해준다. 또는 비선형인 데이터를 선형으로 변환시키거나, 분산이 일정하지 않을 경우 사용할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;bc_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; preProcess&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; method &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;BoxCox&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
bc_iris
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Created from 150 samples and 5 variables
## 
## Pre-processing:
##   - Box-Cox transformation (4)
##   - ignored (1)
## 
## Lambda estimates for Box-Cox transformation:
## -0.1, 0.3, 0.9, 0.6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;lambda estimates&lt;/strong&gt;를 보면 -0.1, 0.3, 0.9, 0.6 으로 되어있다. &lt;strong&gt;fudge&lt;/strong&gt; 기본값 0.2로 인해 (1 - 0.2, 1 + 0.2) 구간은 1로 값이 변경되고 (0 - 0.2, 0 + 0.2)의 값은 0으로 값이 변경된다. &lt;code&gt;lambda = 0&lt;/code&gt;일 경우에는 변환식의 분모가 0이기 때문에 해당 값의 &lt;strong&gt;자연로그&lt;/strong&gt;를 취한다. 따라서 Lambda estimates가 -0.1인 &lt;code&gt;Sepal.Length&lt;/code&gt;는 &lt;code&gt;log(iris$Sepal.Length)&lt;/code&gt;와 값다. Labmda estimates가 0.9인 &lt;code&gt;Petal.Length&lt;/code&gt;는 값이 변하지 않는다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;predict&lt;/code&gt; 함수를 통해 실제로 변환시킨 값을 얻을 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;bc_iris_t &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; predict&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bc_iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bc_iris_t&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1     1.629241    1.520660          1.4  -1.0321154  setosa
## 2     1.589235    1.301297          1.4  -1.0321154  setosa
## 3     1.547563    1.391905          1.3  -1.0321154  setosa
## 4     1.526056    1.347113          1.5  -1.0321154  setosa
## 5     1.609438    1.561856          1.4  -1.0321154  setosa
## 6     1.686399    1.680826          1.7  -0.7048667  setosa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;boxcox 변환에서는 fudge 옵션의 값을 변화시키면 tolerance 수준을 변경할 수 있다. 위에서 -0.1과 0.9가 있었기 때문에 두 변수 모두 값을 변화시킬 수 있도록 값을 0으로 둔다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;bc_iris_nofudge &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; preProcess&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; method &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;BoxCox&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; fudge &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
bc_iris_nofudge
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Created from 150 samples and 5 variables
## 
## Pre-processing:
##   - Box-Cox transformation (4)
##   - ignored (1)
## 
## Lambda estimates for Box-Cox transformation:
## -0.1, 0.3, 0.9, 0.6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;bc_iris_nofudge_t &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; predict&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bc_iris_nofudge&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bc_iris_nofudge_t&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1     1.503443    1.520660    0.3929751  -1.0321154  setosa
## 2     1.469384    1.301297    0.3929751  -1.0321154  setosa
## 3     1.433760    1.391905    0.2959291  -1.0321154  setosa
## 4     1.415318    1.347113    0.4893297  -1.0321154  setosa
## 5     1.486601    1.561856    0.3929751  -1.0321154  setosa
## 6     1.551869    1.680826    0.6801608  -0.7048667  setosa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;모든 수치형 변수의 값이 변화되었다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h4 id=&quot;uspop-데이터에-box-cox-transformation-적용하기&quot;&gt;uspop 데이터에 Box-Cox Transformation 적용하기&lt;/h4&gt;

&lt;p&gt;우선 변수를 변환하기 전에 원본 데이터의 분포를 살펴보려고 한다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;plot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;density&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;uspop&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/preprocess/unnamed-chunk-9-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;오른쪽 꼬리가 비교적 길다는 것을 확인할 수 있다. &lt;code&gt;preProcess&lt;/code&gt; 함수를 적용하기 위해서 데이터를 data.frame 형태로 구성한다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df_uspop &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  pop &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;as.numeric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;uspop&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;preProcess&lt;/code&gt;를 통해 box-cox 변환을 적용한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;bc_uspop &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; preProcess&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_uspop&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; method &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;BoxCox&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
bc_uspop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Created from 19 samples and 1 variables
## 
## Pre-processing:
##   - Box-Cox transformation (1)
##   - ignored (0)
## 
## Lambda estimates for Box-Cox transformation:
## 0.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;predict&lt;/code&gt;를 통해 실제 데이터를 변환한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;bc_uspop_t &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; predict&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bc_uspop&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; df_uspop&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;원래의 데이터와 비교하면 한 쪽에 데이터가 쏠리는 현상이 완화되었다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;plot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;density&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bc_uspop_t&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;pop&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/preprocess/unnamed-chunk-13-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3 id=&quot;다양한-전처리-방식-한번에-적용하기&quot;&gt;다양한 전처리 방식 한번에 적용하기&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;preProcess&lt;/code&gt; 함수에서는 &lt;code&gt;method&lt;/code&gt; 항목에 여러 요소를 한꺼번에 입력하면 여러 가지 전처리 방식을 한번에 적용할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;multi_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; preProcess&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; method &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;center&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;scale&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;pca&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 사실 &amp;quot;pca&amp;quot;만 적용해도 center와 scale까지 한꺼번에 적용된다&lt;/span&gt;

multi_iris
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Created from 150 samples and 5 variables
## 
## Pre-processing:
##   - centered (4)
##   - ignored (1)
##   - principal component signal extraction (4)
##   - scaled (4)
## 
## PCA needed 2 components to capture 95 percent of the variance
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PCA를 적용하고 나면 차원을 축소시켜 두 개의 변수를 남길 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;multi_iris_t &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; predict&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;multi_iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;multi_iris_t&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Species       PC1        PC2
## 1  setosa -2.257141 -0.4784238
## 2  setosa -2.074013  0.6718827
## 3  setosa -2.356335  0.3407664
## 4  setosa -2.291707  0.5953999
## 5  setosa -2.381863 -0.6446757
## 6  setosa -2.068701 -1.4842053
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;PCA를 적용시킨 iris데이터를 가지고 scatter plot을 그리면 다음과 같다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggplot2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;multi_iris_t&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; PC1&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; PC2&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; colour &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Species&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;size &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/preprocess/unnamed-chunk-16-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;near-zero-variance&quot;&gt;Near Zero Variance&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;nearZeroVar&lt;/code&gt;는 값이 하나밖에 존재하지 않는 변수나 몇 개 안되는 요소만 반복되는 변수를 파악한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df_nzv &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  v1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  v2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
  v3 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;nearZeroVar&lt;/code&gt;함수를 사용하면 제거해야 할 열의 index를 반환해준다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;nearZeroVar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_nzv&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 1 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;어떤 기준을 통해서 제거할 열을 선택했는지 살펴보려면 &lt;code&gt;saveMetrics = TRUE&lt;/code&gt;옵션을 추가한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;nearZeroVar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_nzv&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; saveMetrics &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    freqRatio percentUnique zeroVar   nzv
## v1    21.000      9.090909   FALSE  TRUE
## v2     1.375     13.636364   FALSE FALSE
## v3     0.000      4.545455    TRUE  TRUE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code&gt;nearZeroVar&lt;/code&gt;의 옵션 중에서 &lt;code&gt;freqRatio&lt;/code&gt;는 제일 많이 등장하는 값의 개수와 두 번째로 많이 등장하는 값 개수의 비율을 의미한다&lt;/p&gt;

&lt;p&gt;v1의 경우 21/1 = 21&lt;/p&gt;

&lt;p&gt;v2의 경우 11/8 = 1.375&lt;/p&gt;

&lt;p&gt;v3의 경우 값이 한 가지밖에 없기 때문에 0&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code&gt;percentUnique&lt;/code&gt; (&lt;code&gt;uniqueCut&lt;/code&gt;에서 비교하는 값)은 전체 데이터 중에서 겹치지 않는(unique한) 값의 비율을 나타낸다&lt;/p&gt;

&lt;p&gt;v1의 경우 1, 2이므로 2/22 * 100 = 9.0909&lt;/p&gt;

&lt;p&gt;v2의 경우 1, 2, 3 이므로 3/22 = 13.6364&lt;/p&gt;

&lt;p&gt;v3의 경우 1 밖에 없기 때문에 1/22 = 4.5454&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;기본적으로 freqCut은 19, uniqueCut은 10을 기준으로 near zero variance를 판단한다. 옵션을 통해 기준이 되는 값을 변경할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;nearZeroVar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_nzv&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; uniqueCut &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; saveMetrics &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    freqRatio percentUnique zeroVar   nzv
## v1    21.000      9.090909   FALSE FALSE
## v2     1.375     13.636364   FALSE FALSE
## v3     0.000      4.545455    TRUE  TRUE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;nearZeroVar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_nzv&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; uniqueCut &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;nearZeroVar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_nzv&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; freqCut &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 1 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;nearZeroVar&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_nzv&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; freqCut &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; saveMetrics &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    freqRatio percentUnique zeroVar   nzv
## v1    21.000      9.090909   FALSE  TRUE
## v2     1.375     13.636364   FALSE FALSE
## v3     0.000      4.545455    TRUE  TRUE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code&gt;method = &amp;quot;nzv&amp;quot;&lt;/code&gt;를 통해 &lt;code&gt;preProcess&lt;/code&gt; 함수에서도 &lt;code&gt;nearZeroVar&lt;/code&gt;를 적용할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;pp_nzv &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; preProcess&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_nzv&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; method &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;nzv&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
pp_nzv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Created from 22 samples and 2 variables
## 
## Pre-processing:
##   - ignored (0)
##   - removed (2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;pp_nzv_t &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; predict&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;pp_nzv&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; df_nzv&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;pp_nzv_t&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   v2
## 1  1
## 2  1
## 3  1
## 4  1
## 5  1
## 6  1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;v1, v3이 제거되었다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code&gt;method = &amp;quot;zv&amp;quot;&lt;/code&gt;를 사용하면 zero variance(변수의 모든 값이 같은 경우)만 제거한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;pp_zv &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; preProcess&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_nzv&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; method &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;zv&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
pp_zv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Created from 22 samples and 1 variables
## 
## Pre-processing:
##   - ignored (0)
##   - removed (1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;pp_zv_t &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; predict&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;pp_zv&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; df_nzv&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;pp_zv_t&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   v1 v2
## 1  1  1
## 2  1  1
## 3  1  1
## 4  1  1
## 5  1  1
## 6  1  1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;v3가 제거되었다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;missing-values&quot;&gt;Missing Values&lt;/h2&gt;

&lt;p&gt;결측치를 다루는 방법에는 여러 가지가 있다. 결측치가 존재하는 열이나 행을 제거하거나 결측치를 특정 값으로 바꾸는 등의 방법이 있다. caret의 &lt;code&gt;preProcess&lt;/code&gt; 함수는 knn, bagging, median 등의 방법을 이용해서 결측치를 다른 값으로 채울 수 있다. 기능을 사용하기 위해서는 다른 패키지를 추가로 설치해야 할 수도 있다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;실습을 위해서 iris데이터를 복사하고 [2, 2]의 값을 &lt;code&gt;NA&lt;/code&gt;로 변경했다. NA로 변경한 값의 실제 값은 3.0이다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df_na_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; iris
df_na_iris&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;NA&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;우선 &lt;strong&gt;K-nearest Neighbor&lt;/strong&gt;를 이용해서 결측치를 채울 수 있다. 추가로 패키지를 요구할 수 있는데 경고가 뜰 경우 필요한 패키지를 설치하고 다시 실행하면 된다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#install.packages(&amp;quot;RANN&amp;quot;)&lt;/span&gt;
knnimp_na &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; preProcess&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_na_iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; method &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;knnImpute&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
knnimp_na
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Created from 149 samples and 5 variables
## 
## Pre-processing:
##   - centered (4)
##   - ignored (1)
##   - 5 nearest neighbor imputation (4)
##   - scaled (4)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;knnimp_na_t &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; predict&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;knnimp_na&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; df_na_iris&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;knnimp_na_t&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width
## 1   -0.8976739  1.01136747    -1.335752   -1.311052
## 2   -1.1392005  0.78269713    -1.335752   -1.311052
## 3   -1.3807271  0.32535645    -1.392399   -1.311052
## 4   -1.5014904  0.09668612    -1.279104   -1.311052
## 5   -1.0184372  1.24003781    -1.335752   -1.311052
## 6   -0.5353840  1.92604882    -1.165809   -1.048667
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;knnImpute&lt;/code&gt;를 적용하면 centering과 scaling이 같이 적용된다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code&gt;bagImpute&lt;/code&gt;를 사용하면 &lt;code&gt;Bagged Tree Model&lt;/code&gt;을 통해 결측치를 예측하여 채워넣는다. 마찬가지로 다른 패키지를 추가로 설치해야할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#install.packages(&amp;quot;ipred&amp;quot;)&lt;/span&gt;
bagimp_na &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; preProcess&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_na_iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; method &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;bagImpute&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
bagimp_na
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Created from 149 samples and 5 variables
## 
## Pre-processing:
##   - bagged tree imputation (4)
##   - ignored (1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;bagimp_na_t &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; predict&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bagimp_na&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; df_na_iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bagimp_na_t&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1    3.500000          1.4         0.2  setosa
## 2          4.9    3.253777          1.4         0.2  setosa
## 3          4.7    3.200000          1.3         0.2  setosa
## 4          4.6    3.100000          1.5         0.2  setosa
## 5          5.0    3.600000          1.4         0.2  setosa
## 6          5.4    3.900000          1.7         0.4  setosa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;median 값을 이용해서 결측치를 채워넣을 수도 있다. 이 경우 가장 간단하고 빠르지만 비교적 부정확할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;medimp_na &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; preProcess&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_na_iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; method &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;medianImpute&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
medimp_na
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Created from 149 samples and 5 variables
## 
## Pre-processing:
##   - ignored (1)
##   - median imputation (4)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;medimp_na_t &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; predict&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;medimp_na&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; df_na_iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;medimp_na_t&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;caret의 preProcess 함수에 대한 문서와 데이터 전처리에 대해 잘 정리된 블로그 링크를 첨부했다. 추가적으로 필요한 내용이 있다면 큰 도움이 될 것 같다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://topepo.github.io/caret/preprocess.html&quot;&gt;caret document - preProcessing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wlsrnr1218.tistory.com/19&quot;&gt;데이터 전처리 관련 참고&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/preProcess&quot;&gt;caret - preProcess&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on January 09, 2016.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Linear Regression with r]]></title>
  <link>http://lumiamitie.github.io/r/linear-model</link>
  <id>http://lumiamitie.github.io/r/linear-model</id>
  <published>2016-01-01T00:00:00+09:00</published>
  <updated>2016-01-01T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/rocks-waves.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;linear-regression&quot;&gt;Linear Regression&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.packtpub.com/application-development/mastering-predictive-analytics-r&quot;&gt;Mastering Predictive Analytics with R&lt;/a&gt; 의 내용을 기본으로 하여 일부 코드를 수정하거나 추가했다.&lt;/p&gt;

&lt;p&gt;해당 책의 &lt;strong&gt;Chapter2 : Linear Regression&lt;/strong&gt;을 바탕으로 작성했다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;data&quot;&gt;Data&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;caret&lt;/code&gt; 패키지의 &lt;code&gt;cars&lt;/code&gt; 데이터를 &lt;code&gt;data_envir&lt;/code&gt;의 하위 항목으로 로드한다&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Kelly Blue Book resale data for 2005 model year GM cars&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;R이 기본적으로 &lt;code&gt;cars&lt;/code&gt; 데이터를 로드한 상태이기 때문에 &lt;code&gt;caret&lt;/code&gt;의 &lt;code&gt;cars&lt;/code&gt;를 불러오면 데이터를 덮어쓰게 된다. 덮어쓰는 것이 상관없다면 &lt;code&gt;caret&lt;/code&gt; 패키지를 불러온 다음에 그냥 &lt;code&gt;data(cars)&lt;/code&gt;를 실행시키면 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;caret&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
data&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;cars&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;덮어쓰지 않고 다른 변수에 데이터를 불러오려면 아래와 같이 할 수 있다&lt;/p&gt;

&lt;p&gt;우선, 비어있는 environment를 생성한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;data_envir &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new.env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;parent &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.&lt;/span&gt;GlobalEnv&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;ls&lt;/code&gt; 함수를 통해 해당 environment는 비어있음을 확인할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data_envir&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## character(0)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;caret&lt;/code&gt; 패키지에서 cars데이터를 불러와서 &lt;code&gt;data_envir&lt;/code&gt;에 저장한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;caret&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

data&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;cars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; package &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;caret&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; envir &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; data_envir&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data_envir&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;cars&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;list와 비슷한 방식으로 불러올 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data_envir&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;cars&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##      Price Mileage Cylinder Doors Cruise Sound Leather Buick Cadillac
## 1 22661.05   20105        6     4      1     0       0     1        0
## 2 21725.01   13457        6     2      1     1       0     0        0
## 3 29142.71   31655        4     2      1     1       1     0        0
## 4 30731.94   22479        4     2      1     0       0     0        0
## 5 33358.77   17590        4     2      1     1       1     0        0
## 6 30315.17   23635        4     2      1     0       0     0        0
##   Chevy Pontiac Saab Saturn convertible coupe hatchback sedan wagon
## 1     0       0    0      0           0     0         0     1     0
## 2     1       0    0      0           0     1         0     0     0
## 3     0       0    1      0           1     0         0     0     0
## 4     0       0    1      0           1     0         0     0     0
## 5     0       0    1      0           1     0         0     0     0
## 6     0       0    1      0           1     0         0     0     0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;변수간의 상관관계를 확인하기 위해서 &lt;code&gt;cor&lt;/code&gt; 함수로 &lt;strong&gt;correlation matrix&lt;/strong&gt;를 생성한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;findCorrelation&lt;/code&gt; 함수를 통해 correlation이 높아서 제거해야할 열이 있는지 확인할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;cars_cor &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; cor&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data_envir&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;cars&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
findCorrelation&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;cars_cor&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## integer(0)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;cutoff를 임의로 변경해서 확인할 수 있다. 기본값보다 높은 기준치를 부여했다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;findCorrelation&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;cars_cor&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cutoff &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data_envir&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;cars&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;Doors&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Doors&lt;/strong&gt; 변수가 correlation이 높은 변수로 선정되었다.&lt;/p&gt;

&lt;p&gt;차량이 coupe일 경우 문은 2개일 수밖에 없다. 따라서 Doors와 coupe 변수는 높은 상관관계를 가진다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data_envir&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;cars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cor&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Doors&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; coupe&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] -0.8254435
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data_envir&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;cars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Doors&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; coupe&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##      coupe
## Doors   0   1
##     2  50 140
##     4 614   0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;sedan 변수도 마찬가지다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data_envir&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;cars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cor&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Doors&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sedan&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 0.6949056
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data_envir&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;cars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Doors&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sedan&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##      sedan
## Doors   0   1
##     2 190   0
##     4 124 490
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;변수간의 linear dependency를 해결하기 위해서는 &lt;code&gt;findLinearCombos&lt;/code&gt; 함수를 사용한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;findLinearCombos&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data_envir&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;cars&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## $linearCombos
## $linearCombos[[1]]
## [1] 15  4  8  9 10 11 12 13 14
## 
## $linearCombos[[2]]
##  [1] 18  4  8  9 10 11 12 13 16 17
## 
## 
## $remove
## [1] 15 18
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;결과는 list 형태가 된다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$linearCombos&lt;/code&gt; 에는 linear combination이 존재할 때 서로 의존관계에 있는 변수들의 column index가 나열된다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$remove&lt;/code&gt;는 linear combination을 없애기 위해서 제거해야할 열의 index를 보여준다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;제거해야할 열만 idx_remove 벡터에 저장한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;idx_remove &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; findLinearCombos&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data_envir&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;cars&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;remove&lt;/span&gt;
cars_trim &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; data_envir&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;cars&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; idx_remove&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code&gt;caret&lt;/code&gt;의 &lt;code&gt;createDataPartition&lt;/code&gt; 함수를 통해서 training set과 test set을 분리시킨다. &lt;/p&gt;

&lt;p&gt;동일한 결과물을 보기 위해서 random seed를 특정 값으로 고정시킨다. 해당 함수를 통해서 training set의 row index를 생성하고 traing set과 test set을 각각 분리한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;set.seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
idx_cars_tr &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; createDataPartition&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;cars_trim&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Price&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; p &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.85&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
cars_tr &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; cars_trim&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;idx_cars_tr&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
cars_ts &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; cars_trim&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;idx_cars_tr&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;linear-model&quot;&gt;Linear Model&lt;/h2&gt;

&lt;p&gt;가장 기본적인 linear model을 생성한다&lt;/p&gt;

&lt;p&gt;종속변수는 &lt;strong&gt;Price&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;독립변수는 .으로 두면 나머지 모든 변수를 지정한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;summary&lt;/code&gt; 함수를 통해 model의 기본적인 내용을 살펴볼 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;lm_cars &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; lm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Price &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; cars_tr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lm_cars&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## 
## Call:
## lm(formula = Price ~ ., data = cars_tr)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -9672.9 -1556.3   221.8  1468.6 13259.7 
## 
## Coefficients: (1 not defined because of singularities)
##               Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) -9.962e+02  1.100e+03  -0.906  0.36524    
## Mileage     -1.791e-01  1.388e-02 -12.901  &amp;lt; 2e-16 ***
## Cylinder     3.555e+03  1.249e+02  28.472  &amp;lt; 2e-16 ***
## Doors        1.631e+03  2.838e+02   5.745 1.39e-08 ***
## Cruise       4.131e+02  3.213e+02   1.285  0.19907    
## Sound        5.480e+02  2.548e+02   2.150  0.03189 *  
## Leather      7.012e+02  2.687e+02   2.609  0.00928 ** 
## Buick        1.124e+03  5.956e+02   1.887  0.05956 .  
## Cadillac     1.381e+04  6.785e+02  20.355  &amp;lt; 2e-16 ***
## Chevy       -5.660e+02  4.642e+02  -1.219  0.22316    
## Pontiac     -1.309e+03  5.187e+02  -2.524  0.01184 *  
## Saab         1.204e+04  5.914e+02  20.353  &amp;lt; 2e-16 ***
## Saturn              NA         NA      NA       NA    
## convertible  1.142e+04  5.942e+02  19.219  &amp;lt; 2e-16 ***
## hatchback   -6.286e+03  6.683e+02  -9.407  &amp;lt; 2e-16 ***
## sedan       -4.494e+03  4.828e+02  -9.308  &amp;lt; 2e-16 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 2924 on 669 degrees of freedom
## Multiple R-squared:  0.9172, Adjusted R-squared:  0.9155 
## F-statistic: 529.5 on 14 and 669 DF,  p-value: &amp;lt; 2.2e-16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;1 not defined because of singularities&lt;/code&gt; 로 인해서 coeffiecient를 구할 수 없다고 나온다. linear dependency를 발생시키는 변수를 찾아서 제거해야 한다. &lt;code&gt;alias&lt;/code&gt; 함수를 통해 살펴볼 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;alias&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lm_cars&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Model :
## Price ~ Mileage + Cylinder + Doors + Cruise + Sound + Leather + 
##     Buick + Cadillac + Chevy + Pontiac + Saab + Saturn + convertible + 
##     hatchback + sedan
## 
## Complete :
##        (Intercept) Mileage Cylinder Doors Cruise Sound Leather Buick
## Saturn  1           0       0        0     0      0     0      -1   
##        Cadillac Chevy Pontiac Saab convertible hatchback sedan
## Saturn -1       -1    -1      -1    0           0         0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;문제가 되는 변수는 &lt;code&gt;Saturn&lt;/code&gt;이라는 것을 알 수 있다. &lt;code&gt;Saturn&lt;/code&gt; 변수를 제거하고 다시 모델을 구성한다. 변수명 앞에 -를 입력하면 해당 변수를 제외하고 모델을 생성한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;lm_cars2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; lm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Price &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;Saturn&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; cars_tr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lm_cars2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## 
## Call:
## lm(formula = Price ~ . - Saturn, data = cars_tr)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -9672.9 -1556.3   221.8  1468.6 13259.7 
## 
## Coefficients:
##               Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) -9.962e+02  1.100e+03  -0.906  0.36524    
## Mileage     -1.791e-01  1.388e-02 -12.901  &amp;lt; 2e-16 ***
## Cylinder     3.555e+03  1.249e+02  28.472  &amp;lt; 2e-16 ***
## Doors        1.631e+03  2.838e+02   5.745 1.39e-08 ***
## Cruise       4.131e+02  3.213e+02   1.285  0.19907    
## Sound        5.480e+02  2.548e+02   2.150  0.03189 *  
## Leather      7.012e+02  2.687e+02   2.609  0.00928 ** 
## Buick        1.124e+03  5.956e+02   1.887  0.05956 .  
## Cadillac     1.381e+04  6.785e+02  20.355  &amp;lt; 2e-16 ***
## Chevy       -5.660e+02  4.642e+02  -1.219  0.22316    
## Pontiac     -1.309e+03  5.187e+02  -2.524  0.01184 *  
## Saab         1.204e+04  5.914e+02  20.353  &amp;lt; 2e-16 ***
## convertible  1.142e+04  5.942e+02  19.219  &amp;lt; 2e-16 ***
## hatchback   -6.286e+03  6.683e+02  -9.407  &amp;lt; 2e-16 ***
## sedan       -4.494e+03  4.828e+02  -9.308  &amp;lt; 2e-16 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 2924 on 669 degrees of freedom
## Multiple R-squared:  0.9172, Adjusted R-squared:  0.9155 
## F-statistic: 529.5 on 14 and 669 DF,  p-value: &amp;lt; 2.2e-16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;residual&quot;&gt;Residual&lt;/h2&gt;

&lt;p&gt;residual(잔차)이 정규분포를 따르는지 확인하기 위해서 &lt;code&gt;qqnorm&lt;/code&gt;, &lt;code&gt;qqline&lt;/code&gt; 함수로 차트를 그려볼 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;qqnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lm_cars2&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;residuals&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
qqline&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lm_cars2&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;residuals&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/linear_model/unnamed-chunk-16-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3 id=&quot;residual-plot-with-ggplot2&quot;&gt;residual plot with ggplot2&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;ggplot2&lt;/code&gt;의 &lt;code&gt;fortify&lt;/code&gt; 함수를 사용하면 lm 객체를 data.frame 형식으로 바로 변경할 수 있다. 모형의 잔차를 그래프로 나타내려고 한다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggplot2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;fortify&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lm_cars2&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##      Price Mileage Cylinder Doors Cruise Sound Leather Buick Cadillac
## 1 22661.05   20105        6     4      1     0       0     1        0
## 3 29142.71   31655        4     2      1     1       1     0        0
## 5 33358.77   17590        4     2      1     1       1     0        0
## 6 30315.17   23635        4     2      1     0       0     0        0
## 7 33381.82   17381        4     2      1     1       1     0        0
## 8 30251.02   27558        4     2      1     0       1     0        0
##   Chevy Pontiac Saab Saturn convertible hatchback sedan       .hat
## 1     0       0    0      0           0         0     1 0.01921885
## 3     0       0    1      0           1         0     0 0.03090775
## 5     0       0    1      0           1         0     0 0.02872264
## 6     0       0    1      0           1         0     0 0.03368733
## 7     0       0    1      0           1         0     0 0.02875741
## 8     0       0    1      0           1         0     0 0.03270262
##     .sigma      .cooksd  .fitted    .resid  .stdresid
## 1 2925.202 0.0008680549 20300.17  2360.883  0.8151576
## 3 2914.451 0.0118389976 35936.02 -6793.309 -2.3596737
## 5 2919.808 0.0061645819 38455.31 -5096.539 -1.7683038
## 6 2917.714 0.0094868754 36123.33 -5808.159 -2.0203787
## 7 2919.769 0.0062073810 38492.74 -5110.925 -1.7733268
## 8 2917.529 0.0093902378 36121.85 -5870.830 -2.0411393
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;fortify&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lm_cars2&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.&lt;/span&gt;fitted&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.&lt;/span&gt;resid&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/linear_model/unnamed-chunk-17-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;표준화된 residual은 &lt;code&gt;.stdresid&lt;/code&gt; 변수를 사용한다. y축이 변경되는 것을 볼 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;fortify&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lm_cars2&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.&lt;/span&gt;fitted&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.&lt;/span&gt;stdresid&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/linear_model/unnamed-chunk-18-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3 id=&quot;shapiro-wilk-normality-test&quot;&gt;Shapiro-Wilk Normality Test&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Shapiro-Wilk&lt;/code&gt;의 정규성 테스트를 해볼 수 있다 &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;shapiro.test&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lm_cars2&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;residuals&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## 
##  Shapiro-Wilk normality test
## 
## data:  lm_cars2$residuals
## W = 0.9595, p-value = 8.544e-13
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;anova-table&quot;&gt;ANOVA table&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;anova&lt;/code&gt; 함수를 사용하면 하나 이상의 model객체를 통해서 ANOVA table을 생성할 수 있다. 여기서는 intercept의 존재만 가정하는 Null Model을 생성한 다음에. 위에서 생성했던 model과 비교한다. 변수들이 실제로 효과가 있는지 없는지의 여부를 테스트할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;lm_cars_null &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; lm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Price &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; cars_tr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
anova&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lm_cars2&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lm_cars_null&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Analysis of Variance Table
## 
## Model 1: Price ~ (Mileage + Cylinder + Doors + Cruise + Sound + Leather + 
##     Buick + Cadillac + Chevy + Pontiac + Saab + Saturn + convertible + 
##     hatchback + sedan) - Saturn
## Model 2: Price ~ 1
##   Res.Df        RSS  Df   Sum of Sq      F    Pr(&amp;gt;F)    
## 1    669 5.7216e+09                                     
## 2    683 6.9127e+10 -14 -6.3405e+10 529.55 &amp;lt; 2.2e-16 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;p-value가 0에 가깝다는 것을 확인할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;performance-metric&quot;&gt;Performance metric&lt;/h2&gt;

&lt;p&gt;모델의 성능을 평가하는 방법은 여러 가지가 있다. 여기서는 가장 간단하고 살펴볼 수 있는 &lt;strong&gt;R-squared&lt;/strong&gt;를 살펴본다. R-squared와 값이 일부 조정된 Adjusted R-squared는 summary 함수의 결과물에서 볼 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;summary_cars2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lm_cars2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

summary_cars2&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;r.squared
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 0.91723
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;summary_cars2&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;adj.r.squared
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 0.9154979
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;R-squared는 평균을 기준으로 데이터 전체의 변동량에서 실제값과 예측값의 차이가 얼마나 비슷한지를 알려준다. 실제값과 예측값이 정확이 같다면 1이된다&lt;/p&gt;

&lt;p&gt;실제로 R-squared를 구하는 과정을 살펴보면 아래와 같다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ssr_cars &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;lm_cars&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;fitted.values &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; cars_tr&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Price&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
sst_cars &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;cars_tr&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Price &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;cars_tr&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Price&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
r2_cars &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; ssr_cars &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; sst_cars
r2_cars
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 0.91723
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;결과물은 위에서 구한 R-Squared와 같다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;R-Squared&lt;/strong&gt;는 단순하면서도 직관적이라는 장점이 있다. 하지만 의미없는 변수를 추가하더라도 값이 계속 증가한다는 단점이 있다. 따라서 이러한 문제를 보완하기 위한 &lt;strong&gt;Adjusted R-Squared&lt;/strong&gt;는 feature의 개수를 통해 값을 보정한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;n_cars &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nrow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;cars_tr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
k_cars &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lm_cars2&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;coefficients&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# intercept를 제외한 feature의 개수&lt;/span&gt;
ar2_cars &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; r2_cars&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n_cars &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n_cars &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; k_cars &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
ar2_cars
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 0.9154979
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;test-set-performance&quot;&gt;Test set Performance&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;predict&lt;/code&gt; 함수를 통해 model을 가지고 test set의 결과물을 예측한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;pred_cars2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; predict&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lm_cars2&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cars_ts&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;실제값과 예측값의 차이를 통해 모델이 실제와 얼마나 차이가 있는지 값을 측정할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mse_cars2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;pred_cars2 &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; cars_ts&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Price&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
mse_cars2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 8019592
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;실제 데이터와 예측 결과를 하나의 그래프에 표현하려고 한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

diff_cars2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    price &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; cars_ts&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Price&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    pred &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; pred_cars2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  arrange&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;price&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;idx &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; row_number&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ggplot2&lt;/code&gt;에서 본래 추구하는 방식으로 그래프를 그리기 위해서는 tidy data의 형태로 data.frame을 정리하는 것이 좋다. tidy data에 대해서 알아보려면 &lt;a href=&quot;http://lumiamitie.github.io/r/tidy-data/&quot;&gt;예전 글&lt;/a&gt; 의 내용을 참고하면 좋을 것 같다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;diff_cars2_tidy &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; diff_cars2 &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  tidyr&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;gather&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;key &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;level&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; value &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; price&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;pred&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;diff_cars2_tidy&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   idx level    value
## 1   1 price  8638.93
## 2   2 price  9789.04
## 3   3 price 10354.04
## 4   4 price 10813.34
## 5   5 price 10921.95
## 6   6 price 11343.05
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; diff_cars2_tidy&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; idx&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; value&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; colour &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; level&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/linear_model/unnamed-chunk-27-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;feature-selection&quot;&gt;Feature Selection&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;step&lt;/code&gt; 함수를 통해서 &lt;strong&gt;backward selection&lt;/strong&gt;을 시행한다. 모든 요소를 포함한 상태에서 모델을 생성하고, 설명력이 떨어지는 변수를 제거하면서 더 나은 모델을 찾아나가는 방식이다. 결과물에서는 AIC가 낮을 수록 좋은 model이다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;lm_cars3 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; step&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lm_cars2&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                scope &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lower &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; lm_cars_null&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; upper &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; lm_cars2&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                direction &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;backward&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Start:  AIC=10932.66
## Price ~ (Mileage + Cylinder + Doors + Cruise + Sound + Leather + 
##     Buick + Cadillac + Chevy + Pontiac + Saab + Saturn + convertible + 
##     hatchback + sedan) - Saturn
## 
##               Df  Sum of Sq        RSS   AIC
## - Chevy        1   12714941 5.7343e+09 10932
## - Cruise       1   14132676 5.7358e+09 10932
## &amp;lt;none&amp;gt;                      5.7216e+09 10933
## - Buick        1   30460987 5.7521e+09 10934
## - Sound        1   39546468 5.7612e+09 10935
## - Pontiac      1   54481904 5.7761e+09 10937
## - Leather      1   58221312 5.7799e+09 10938
## - Doors        1  282297010 6.0039e+09 10964
## - sedan        1  741046049 6.4627e+09 11014
## - hatchback    1  756759889 6.4784e+09 11016
## - Mileage      1 1423416473 7.1450e+09 11083
## - convertible  1 3159154955 8.8808e+09 11231
## - Saab         1 3542704945 9.2643e+09 11260
## - Cadillac     1 3543395686 9.2650e+09 11260
## - Cylinder     1 6933034432 1.2655e+10 11474
## 
## Step:  AIC=10932.18
## Price ~ Mileage + Cylinder + Doors + Cruise + Sound + Leather + 
##     Buick + Cadillac + Pontiac + Saab + convertible + hatchback + 
##     sedan
## 
##               Df  Sum of Sq        RSS   AIC
## - Cruise       1   11655088 5.7460e+09 10932
## &amp;lt;none&amp;gt;                      5.7343e+09 10932
## - Sound        1   32601330 5.7669e+09 10934
## - Pontiac      1   49199044 5.7835e+09 10936
## - Leather      1   51468366 5.7858e+09 10936
## - Buick        1  106476733 5.8408e+09 10943
## - Doors        1  273386852 6.0077e+09 10962
## - sedan        1  730783107 6.4651e+09 11012
## - hatchback    1  777551120 6.5119e+09 11017
## - Mileage      1 1421303710 7.1556e+09 11082
## - convertible  1 3147012333 8.8814e+09 11229
## - Cadillac     1 6406507443 1.2141e+10 11443
## - Saab         1 6436594114 1.2171e+10 11445
## - Cylinder     1 6972320144 1.2707e+10 11474
## 
## Step:  AIC=10931.57
## Price ~ Mileage + Cylinder + Doors + Sound + Leather + Buick + 
##     Cadillac + Pontiac + Saab + convertible + hatchback + sedan
## 
##               Df  Sum of Sq        RSS   AIC
## &amp;lt;none&amp;gt;                      5.7460e+09 10932
## - Sound        1   32581443 5.7786e+09 10933
## - Pontiac      1   46537556 5.7925e+09 10935
## - Leather      1   48481038 5.7945e+09 10935
## - Buick        1  122937808 5.8689e+09 10944
## - Doors        1  263004964 6.0090e+09 10960
## - sedan        1  719958937 6.4660e+09 11010
## - hatchback    1  789129020 6.5351e+09 11018
## - Mileage      1 1419476570 7.1655e+09 11081
## - convertible  1 3136917995 8.8829e+09 11228
## - Cadillac     1 6450570826 1.2197e+10 11444
## - Saab         1 7963463390 1.3709e+10 11524
## - Cylinder     1 8082905852 1.3829e+10 11530
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lm_cars3&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## 
## Call:
## lm(formula = Price ~ Mileage + Cylinder + Doors + Sound + Leather + 
##     Buick + Cadillac + Pontiac + Saab + convertible + hatchback + 
##     sedan, data = cars_tr)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -9664.4 -1598.7   199.8  1523.0 13304.8 
## 
## Coefficients:
##               Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) -1.036e+03  1.086e+03  -0.953 0.340773    
## Mileage     -1.789e-01  1.389e-02 -12.875  &amp;lt; 2e-16 ***
## Cylinder     3.584e+03  1.167e+02  30.723  &amp;lt; 2e-16 ***
## Doors        1.551e+03  2.799e+02   5.542  4.3e-08 ***
## Sound        4.881e+02  2.503e+02   1.951 0.051523 .  
## Leather      6.311e+02  2.653e+02   2.379 0.017620 *  
## Buick        1.689e+03  4.457e+02   3.789 0.000165 ***
## Cadillac     1.437e+04  5.235e+02  27.446  &amp;lt; 2e-16 ***
## Pontiac     -8.204e+02  3.519e+02  -2.331 0.020038 *  
## Saab         1.271e+04  4.169e+02  30.495  &amp;lt; 2e-16 ***
## convertible  1.133e+04  5.918e+02  19.139  &amp;lt; 2e-16 ***
## hatchback   -6.391e+03  6.657e+02  -9.600  &amp;lt; 2e-16 ***
## sedan       -4.399e+03  4.797e+02  -9.169  &amp;lt; 2e-16 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 2926 on 671 degrees of freedom
## Multiple R-squared:  0.9169, Adjusted R-squared:  0.9154 
## F-statistic: 616.8 on 12 and 671 DF,  p-value: &amp;lt; 2.2e-16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;step&lt;/code&gt; 함수를 사용하면 현재 상황에서 각 변수를 빼거나 추가했을 때 AIC가 어떻게 변화하는지 파악한다. 만약 현재의 모델이 가장 낮은 AIC를 나타낸다면 해당 모델로 최종 확정하게 된다. 변수를 비교하는 방식은 forward, backward, 그리고 양쪽을 모두 사용하는 both 등 다양한 방식을 지원한다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;lm_cars4 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; step&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lm_cars2&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                scope &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lower &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; lm_cars_null&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; upper &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; lm_cars2&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                direction &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;both&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Start:  AIC=10932.66
## Price ~ (Mileage + Cylinder + Doors + Cruise + Sound + Leather + 
##     Buick + Cadillac + Chevy + Pontiac + Saab + Saturn + convertible + 
##     hatchback + sedan) - Saturn
## 
##               Df  Sum of Sq        RSS   AIC
## - Chevy        1   12714941 5.7343e+09 10932
## - Cruise       1   14132676 5.7358e+09 10932
## &amp;lt;none&amp;gt;                      5.7216e+09 10933
## - Buick        1   30460987 5.7521e+09 10934
## - Sound        1   39546468 5.7612e+09 10935
## - Pontiac      1   54481904 5.7761e+09 10937
## - Leather      1   58221312 5.7799e+09 10938
## - Doors        1  282297010 6.0039e+09 10964
## - sedan        1  741046049 6.4627e+09 11014
## - hatchback    1  756759889 6.4784e+09 11016
## - Mileage      1 1423416473 7.1450e+09 11083
## - convertible  1 3159154955 8.8808e+09 11231
## - Saab         1 3542704945 9.2643e+09 11260
## - Cadillac     1 3543395686 9.2650e+09 11260
## - Cylinder     1 6933034432 1.2655e+10 11474
## 
## Step:  AIC=10932.18
## Price ~ Mileage + Cylinder + Doors + Cruise + Sound + Leather + 
##     Buick + Cadillac + Pontiac + Saab + convertible + hatchback + 
##     sedan
## 
##               Df  Sum of Sq        RSS   AIC
## - Cruise       1   11655088 5.7460e+09 10932
## &amp;lt;none&amp;gt;                      5.7343e+09 10932
## + Chevy        1   12714941 5.7216e+09 10933
## - Sound        1   32601330 5.7669e+09 10934
## - Pontiac      1   49199044 5.7835e+09 10936
## - Leather      1   51468366 5.7858e+09 10936
## - Buick        1  106476733 5.8408e+09 10943
## - Doors        1  273386852 6.0077e+09 10962
## - sedan        1  730783107 6.4651e+09 11012
## - hatchback    1  777551120 6.5119e+09 11017
## - Mileage      1 1421303710 7.1556e+09 11082
## - convertible  1 3147012333 8.8814e+09 11229
## - Cadillac     1 6406507443 1.2141e+10 11443
## - Saab         1 6436594114 1.2171e+10 11445
## - Cylinder     1 6972320144 1.2707e+10 11474
## 
## Step:  AIC=10931.57
## Price ~ Mileage + Cylinder + Doors + Sound + Leather + Buick + 
##     Cadillac + Pontiac + Saab + convertible + hatchback + sedan
## 
##               Df  Sum of Sq        RSS   AIC
## &amp;lt;none&amp;gt;                      5.7460e+09 10932
## + Cruise       1   11655088 5.7343e+09 10932
## + Chevy        1   10237353 5.7358e+09 10932
## - Sound        1   32581443 5.7786e+09 10933
## - Pontiac      1   46537556 5.7925e+09 10935
## - Leather      1   48481038 5.7945e+09 10935
## - Buick        1  122937808 5.8689e+09 10944
## - Doors        1  263004964 6.0090e+09 10960
## - sedan        1  719958937 6.4660e+09 11010
## - hatchback    1  789129020 6.5351e+09 11018
## - Mileage      1 1419476570 7.1655e+09 11081
## - convertible  1 3136917995 8.8829e+09 11228
## - Cadillac     1 6450570826 1.2197e+10 11444
## - Saab         1 7963463390 1.3709e+10 11524
## - Cylinder     1 8082905852 1.3829e+10 11530
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lm_cars4&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## 
## Call:
## lm(formula = Price ~ Mileage + Cylinder + Doors + Sound + Leather + 
##     Buick + Cadillac + Pontiac + Saab + convertible + hatchback + 
##     sedan, data = cars_tr)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -9664.4 -1598.7   199.8  1523.0 13304.8 
## 
## Coefficients:
##               Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) -1.036e+03  1.086e+03  -0.953 0.340773    
## Mileage     -1.789e-01  1.389e-02 -12.875  &amp;lt; 2e-16 ***
## Cylinder     3.584e+03  1.167e+02  30.723  &amp;lt; 2e-16 ***
## Doors        1.551e+03  2.799e+02   5.542  4.3e-08 ***
## Sound        4.881e+02  2.503e+02   1.951 0.051523 .  
## Leather      6.311e+02  2.653e+02   2.379 0.017620 *  
## Buick        1.689e+03  4.457e+02   3.789 0.000165 ***
## Cadillac     1.437e+04  5.235e+02  27.446  &amp;lt; 2e-16 ***
## Pontiac     -8.204e+02  3.519e+02  -2.331 0.020038 *  
## Saab         1.271e+04  4.169e+02  30.495  &amp;lt; 2e-16 ***
## convertible  1.133e+04  5.918e+02  19.139  &amp;lt; 2e-16 ***
## hatchback   -6.391e+03  6.657e+02  -9.600  &amp;lt; 2e-16 ***
## sedan       -4.399e+03  4.797e+02  -9.169  &amp;lt; 2e-16 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 2926 on 671 degrees of freedom
## Multiple R-squared:  0.9169, Adjusted R-squared:  0.9154 
## F-statistic: 616.8 on 12 and 671 DF,  p-value: &amp;lt; 2.2e-16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;regularization&quot;&gt;Regularization&lt;/h2&gt;

&lt;p&gt;변수 선택은 종종 overfitting(과적합)에 대응하는 방법으로 사용할 수 있다. regularization을 통해 특정 coefficient가 과도하게 큰 값을 갖지 않도록 조정할 수 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;ridge regression&lt;/strong&gt;과 &lt;strong&gt;lasso&lt;/strong&gt;는 penalty term에서 차이가 발생한다. ridge regression은 가중치가 작게 주어지더라도 각 변수들의 영향력이 남아있다. 하지만 lasso의 경우 가중치가 작은 경우 아예 0으로 수렴하는 경우가 발생한다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3 id=&quot;ridge-regression&quot;&gt;ridge regression&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;glmnet&lt;/code&gt; 패키지의 &lt;code&gt;glmnet&lt;/code&gt; 함수를 통해 ridge regression과 lasso를 시행하려고 한다&lt;/p&gt;

&lt;p&gt;첫 번째 parameter로는 feature들로 구성된 matrix를 필요로 한다. &lt;code&gt;model.matrix&lt;/code&gt; 함수를 통해 design matrix를 생성한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# 1열의 intercept만 제거한다&lt;/span&gt;
mat_cars_tr &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; model.matrix&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Price &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;Saturn&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; cars_tr&lt;span class=&quot;p&quot;&gt;)[,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;두 번째 parameter는 결과물 변수들(여기서는 Price)로 구성된 벡터다&lt;/p&gt;

&lt;p&gt;세 번째 parameter인 alpha는 0일 때 ridge regression, 1일 때 lasso를 시행한다&lt;/p&gt;

&lt;p&gt;네 번째 parameter는 lambda 벡터이다. 모델을 생성할 때 이 값이 포함된 수식을 최소화시키는 방향으로 계산된다. 좋은 model을 생성하기 위해서는 가장 좋은 결과물을 내는 lambda값을 찾아야 한다. lambda parameter는 사용자가 직접 lambda sequence를 지정할 때 사용한다. 보통은 nlambda와 lambda.min.ratio 값을 사용해서 구하게끔 되어있다. 두 값 모두 기본값이 지정되어있기 때문에(100, 0.0001) 명시하지 않을경우 기본값을 사용한다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;glmnet&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Loading required package: Matrix
## Loading required package: foreach
## Loaded glmnet 2.0-2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;model_ridge &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; glmnet&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  mat_cars_tr&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  cars_tr&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Price&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  lambda &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; length &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;lambda값에 250개짜리 벡터를 지정했기 때문에 250개의 model이 생성된다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;coef&lt;/code&gt;함수를 통해 특정 model의 coefficient값을 볼 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;coef&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;model_ridge&lt;span class=&quot;p&quot;&gt;)[,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   (Intercept)       Mileage      Cylinder         Doors        Cruise 
##  6336.6474394    -0.1552561  2725.2328259   387.8009432  1688.3451952 
##         Sound       Leather         Buick      Cadillac         Chevy 
##   214.7119462  1166.1893897  -411.9407312 11612.9688672 -2443.3869902 
##       Pontiac          Saab   convertible     hatchback         sedan 
## -2156.4412870  8344.4367057 10665.7039500 -3146.6877319 -2065.8999174
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;coef&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;model_ridge&lt;span class=&quot;p&quot;&gt;)[,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   (Intercept)       Mileage      Cylinder         Doors        Cruise 
##  -995.9883276    -0.1791173  3555.2756739  1630.6235076   413.1057260 
##         Sound       Leather         Buick      Cadillac         Chevy 
##   548.0081003   701.2180650  1123.9153032 13809.8266390  -566.0737694 
##       Pontiac          Saab   convertible     hatchback         sedan 
## -1309.3151867 12036.8172063 11420.4701519 -6286.0530466 -4493.8744852
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;좋은 lambda값을 찾을 수 있도록 하기 위해 glmnet 패키지에서는 &lt;code&gt;cv.glmnet&lt;/code&gt; 함수를 제공한다. 교차검증을 통해 MSE를 최소화시키는 lambda를 찾는다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ridge_lambda &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; cv.glmnet&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  mat_cars_tr&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  cars_tr&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Price&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;code&gt;predict&lt;/code&gt; 함수를 통해 model을 바탕으로 test set의 값을 예측한다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;s&lt;/strong&gt; 에는 lambda값이 들어간다. &lt;strong&gt;type&lt;/strong&gt;의 값을 바꾸면 다양한 결과물을 볼 수 있다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;type = &amp;quot;coefficient&amp;quot;&lt;/code&gt; 일 때는 다음과 같은 정보를 알 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;predict&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  model_ridge&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  s &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ridge_lambda&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;lambda.min&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  type &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;coefficient&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## 15 x 1 sparse Matrix of class &amp;quot;dgCMatrix&amp;quot;
##                         1
## (Intercept)  3424.8104154
## Mileage        -0.1677827
## Cylinder     3102.4637324
## Doors         828.4585393
## Cruise       1166.4418117
## Sound         375.2800236
## Leather       994.0758585
## Buick          33.4808904
## Cadillac    12483.2985848
## Chevy       -1876.6192799
## Pontiac     -1970.2776716
## Saab         9872.9328182
## convertible 11090.0424876
## hatchback   -4216.6057859
## sedan       -2924.2738801
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;예측 결과물을 보려면 test set에 대해서도 matrix형태로 구성해야한다. &lt;code&gt;predict.glmnet&lt;/code&gt;함수의 newx에 test set의 matrix를 전달한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mat_cars_ts &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; model.matrix&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Price &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;Saturn&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; cars_ts&lt;span class=&quot;p&quot;&gt;)[,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

pred_ridge &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; predict&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  model_ridge&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  s &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ridge_lambda&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;lambda.min&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  newx &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mat_cars_ts&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  type &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;response&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

mse_ridge &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;pred_ridge &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; cars_ts&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Price&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;실제 값과 예측결과를 그래프로 비교해보려고 한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df_ridge &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    price &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; cars_ts&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Price&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    pred &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; pred_ridge&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  arrange&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;price&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;idx &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; row_number&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  tidyr&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;gather&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;key &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; value &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; price&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;pred&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_ridge&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; idx&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; value&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; colour &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; level&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  ggtitle&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Ridge Regression&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/linear_model/unnamed-chunk-36-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lasso-least-absolute-shrinkage-and-selection-operator&quot;&gt;Lasso (Least Absolute Shrinkage and Selection Operator)&lt;/h2&gt;

&lt;p&gt;lasso는 ridge regression과 같은 방식으로 시행할 수 있다. alpha = 1로 설정하면 lasso가 동작한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;model_lasso &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; glmnet&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  mat_cars_tr&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  cars_tr&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Price&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  lambda &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; length &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

lasso_lambda &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; cv.glmnet&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  mat_cars_tr&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  cars_tr&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Price&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

pred_lasso &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; predict&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  model_lasso&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  s &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; lasso_lambda&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;lambda.min&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  newx &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mat_cars_ts&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  type &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;response&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

mse_lasso &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;pred_lasso &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; cars_ts&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Price&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;lasso의 경우도 실제 값과 예측결과를 그래프로 비교해볼 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df_lasso &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    price &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; cars_ts&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Price&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    pred &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; pred_lasso&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  arrange&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;price&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;idx &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; row_number&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  tidyr&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;gather&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;key &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; value &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; price&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;pred&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_lasso&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; idx&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; value&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; colour &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; level&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  ggtitle&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Lasso&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/linear_model/unnamed-chunk-38-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;각 모델의 MSE를 비교해보면 아래와 같다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mse_cars2 &lt;span class=&quot;c1&quot;&gt;# mse of linear model&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 8019592
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mse_ridge &lt;span class=&quot;c1&quot;&gt;# mse of ridge regression&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 8661437
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mse_lasso &lt;span class=&quot;c1&quot;&gt;# mse of lasso&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 8017329
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;위에서 lasso를 적용할 때는 이미 불필요한 변수를 제거한 상태였다
이번에는 변수를 제거하지 않은 상태에서 lasso를 적용해보려고 한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;cars_tr2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; data_envir&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;cars&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;idx_cars_tr&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
cars_ts2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; data_envir&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;cars&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;idx_cars_tr&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

mat_cars_tr2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; model.matrix&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Price &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; cars_tr2&lt;span class=&quot;p&quot;&gt;)[,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

model_lasso2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; glmnet&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  mat_cars_tr2&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  cars_tr2&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Price&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

lasso_lambda2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; cv.glmnet&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  mat_cars_tr2&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  cars_tr2&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Price&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  alpha &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

mat_cars_ts2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; model.matrix&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Price &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; cars_ts2&lt;span class=&quot;p&quot;&gt;)[,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

pred_lasso2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; predict&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  model_lasso2&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  s &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; lasso_lambda2&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;lambda.min&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  newx &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mat_cars_ts2
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

df_lasso2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    price &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; cars_ts2&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Price&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    pred &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; pred_lasso2&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  arrange&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;price&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;idx &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; row_number&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  tidyr&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;gather&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;key &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; value &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; price&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;pred&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_lasso2&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; idx&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; value&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; colour &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; level&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  ggtitle&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Lasso2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/linear_model/unnamed-chunk-40-1.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mse_lasso2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;pred_lasso2 &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; cars_ts2&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Price&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
mse_lasso2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 8037115
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;64번째 model을 살펴보면 &lt;code&gt;Saturn&lt;/code&gt;, &lt;code&gt;coupe&lt;/code&gt;, &lt;code&gt;sedan&lt;/code&gt;의 coefficient가 0이라는 것을 볼 수 있다. 따라서 변수가 제거된 것과 같은 효과를 가진다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;coef&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;model_lasso2&lt;span class=&quot;p&quot;&gt;)[,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##  (Intercept)      Mileage     Cylinder        Doors       Cruise 
##  3511.878810    -0.176481  3528.994492  -586.838372   412.692812 
##        Sound      Leather        Buick     Cadillac        Chevy 
##   488.060710   664.244892  1093.205029 13848.673141  -504.232147 
##      Pontiac         Saab       Saturn  convertible        coupe 
## -1204.322090 12028.003855     0.000000 11418.509547     0.000000 
##    hatchback        sedan        wagon 
## -1755.734835     0.000000  4352.276380
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/linear-model&quot;&gt;Linear Regression with r&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on January 01, 2016.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[R6 - Modify in place]]></title>
  <link>http://lumiamitie.github.io/r/R6-modify-in-place</link>
  <id>http://lumiamitie.github.io/r/R6-modify-in-place</id>
  <published>2015-12-31T00:00:00+09:00</published>
  <updated>2015-12-31T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/taking-notes.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;r6-modify-in-place&quot;&gt;R6 : Modify-in-place&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/R6-basics/&quot;&gt;이전 글&lt;/a&gt;에서 R6는 &lt;strong&gt;Modify-in-place&lt;/strong&gt;라는 표현을 사용했다. 실제로 메모리 주소가 어떻게 변하는지 간단하게 살펴보도록 하겠다.&lt;/p&gt;

&lt;p&gt;R에서 메모리와 관련된 내용은 &lt;a href=&quot;http://adv-r.had.co.nz/memory.html&quot;&gt;Advanced R&lt;/a&gt; 을 참고했다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3 id=&quot;case-r-default&quot;&gt;CASE : R default&lt;/h3&gt;

&lt;p&gt;iris 데이터를 하나 복사한다. R은 기본적으로 객체를 변화시키지 않기 때문에 object를 변경하는 동작을 취하면 object를 복사한다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_test &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; iris
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;pryr&lt;/code&gt;패키지의 &lt;code&gt;address&lt;/code&gt; 함수를 이용하면 해당 오브젝트의 메모리 주소를 확인할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;pryr&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;address&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris_test&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;0x88c6d08&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이제 &lt;code&gt;iris_test&lt;/code&gt;의 값을 변경하고 다시 메모리 주소를 확인해보자&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_test&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
pryr&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;address&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris_test&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;0xadae5a8&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;메모리 주소가 변경되었다. 어떠한 오브젝트를 변경하면 실제로는 object를 복사한 후에 값을 변경하는 방식으로 동작한다는 것을 확인할 수 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h3 id=&quot;case-r6&quot;&gt;CASE : R6&lt;/h3&gt;

&lt;p&gt;이번에는 R6 패키지를 불러오고 &lt;code&gt;Iris&lt;/code&gt; 라는 클래스를 생성한다. data라는 field를 만들어서 iris데이터를 입력했다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;R6&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
Iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; R6Class&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Iris&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               public &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                 data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; iris
               &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;인스턴스를 생성하고 메모리 주소를 확인한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;r6_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Iris&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;new&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
pryr&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;address&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;r6_iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;0x7bc32b0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위에서 했던 것과 마찬가지로 값을 변경하고 메모리 주소를 확인한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;r6_iris&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
pryr&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;address&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;r6_iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;0x7bc32b0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;내부의 값을 변경했지만 메모리 주소는 변경되지 않았다는 것을 볼 수 있다.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/R6-modify-in-place&quot;&gt;R6 - Modify in place&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on December 31, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[R6 basics]]></title>
  <link>http://lumiamitie.github.io/r/R6-basics</link>
  <id>http://lumiamitie.github.io/r/R6-basics</id>
  <published>2015-12-30T00:00:00+09:00</published>
  <updated>2015-12-30T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/note-and-pen.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;r6&quot;&gt;R6&lt;/h1&gt;

&lt;p&gt;R6는 기존에 존재하던 RC(Reference Class)와 유사한 Class의 기능을 제공합니다. 하지만 RC와는 다르게 S4 시스템에 의존하지 않으면서 RC보다 더 효율적으로 동작합니다&lt;/p&gt;

&lt;p&gt;R에서는 기본적으로 copy-on-modify가 적용됩니다. 다시 말하자면, object를 조금이라도 수정하게 되면 object를 복사한 다음에 수정을 하게 됩니다. 하지만 RC, R6의 경우에는 copy-on-modify가 적용되지 않기 때문에 주의해서 사용한다면 메모리를 더 효율적으로 사용할 수 있습니다. 기존 S3나 S4와는 크게 다른 성질을 가지기 때문에 주어진 상황에 적합한 방식을 선택하여 사용할 수 있습니다&lt;/p&gt;

&lt;p&gt;그리고 다른 객체지향 언어에 익숙한 사람들이 더 쉽게 R에 익숙해질 수 있을 것 같습니다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;r6-basics&quot;&gt;R6 : Basics&lt;/h2&gt;

&lt;p&gt;R6로 클래스를 생성하는 방법을 알아보도록 하겠습니다. R6에서 클래스는 &lt;code&gt;R6Class&lt;/code&gt;라는 함수를 통해서 만들 수 있습니다. &lt;/p&gt;

&lt;p&gt;첫번째 요소는 &lt;strong&gt;class의 이름&lt;/strong&gt;입니다. 인스턴스를 생성했을 때 &lt;code&gt;class()&lt;/code&gt; 함수를 통해 class를 확인하면 &lt;em&gt;classname&lt;/em&gt; 요소와 &lt;em&gt;R6&lt;/em&gt;가 출력됩니다. &lt;/p&gt;

&lt;p&gt;그리고 &lt;strong&gt;public&lt;/strong&gt;에는 public member들을 리스트의 형태로 담을 수 있습니다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Random이라는 클래스를 생성해서 표준정규분포를 따르는 난수를 발생시킬 수 있도록 작성했습니다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;n&lt;/code&gt;과 &lt;code&gt;vector&lt;/code&gt; field는 NA값으로 초기화를 시킵니다. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;initialize&lt;/code&gt; 메소드 안에 있는 내용들은 &lt;code&gt;new()&lt;/code&gt;메소드를 통해 처음 인스턴스를 생성할 때 시행됩니다.&lt;/p&gt;

&lt;p&gt;클래스 내부에서 public member에 접근하기 위해서는 &lt;code&gt;self$member&lt;/code&gt;, &lt;code&gt;self$method()&lt;/code&gt;와 같은 방식을 사용합니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;R6&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
Random &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; R6Class&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Random&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  public &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    n &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;vector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    initialize &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
      self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; n
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    gen_normal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
      self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;vector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; rnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;클래스의 인스턴스를 생성하기 위해서는 &lt;code&gt;$new()&lt;/code&gt; 를 사용합니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;rd &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Random&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;new&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Public member에 접근하기 위해서는 &lt;code&gt;$&lt;/code&gt;를 사용하면 됩니다. 기존의 리스트나 data.frame의 열에 접근할 때와 비슷한 방식으로 사용할 수 있습니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;rd&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;n
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;rd&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;vector&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] NA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;rd&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;gen_normal&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
rd&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;vector&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##  [1]  1.60938489  0.22661340  0.39826320  0.62156489 -0.71540379
##  [6]  0.26136030  0.51512304  0.02617344 -0.81198997  0.42580841
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;private-members&quot;&gt;Private members&lt;/h2&gt;

&lt;p&gt;Class 내부에 &lt;strong&gt;private member&lt;/strong&gt;를 추가할 수 있습니다. public member들이 &lt;code&gt;self$n&lt;/code&gt;과 같은 형태로 접근가능했다면, private member들은 &lt;code&gt;private$sample_mean&lt;/code&gt;의 형태로 접근할 수 있습니다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;private member로 &lt;code&gt;sample_mean&lt;/code&gt;이라는 항목을 만들어서 초기화시킵니다. &lt;code&gt;calc_sp_mean&lt;/code&gt;, &lt;code&gt;print_sp_mean&lt;/code&gt;이라는 메소드를 추가해서 private member에 값을 저장하고 불러올 수 있게 합니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;Random &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; R6Class&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Random&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   public &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
     n &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;kt&quot;&gt;vector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;NA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     initialize &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
       self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; n
     &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
     gen_normal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mu &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sd &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
       self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;vector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; rnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sd&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
     calc_sp_mean &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
       private&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;sample_mean &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
     print_sp_mean &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
       &lt;span class=&quot;kp&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;private&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;sample_mean&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
   private &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
     sample_mean &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;NA&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;rd &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Random&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;new&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
rd&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;gen_normal&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
rd&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;calc_sp_mean&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
rd&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;print_sp_mean&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] -0.3280799
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;private member로 설정하게 되면 외부에서 직접적으로 호출할 수 는 없습니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;rd&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;sample_mean
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## NULL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;active-bindings&quot;&gt;Active bindings&lt;/h2&gt;

&lt;p&gt;Active binding의 요소들은 접근할 때마다 함수를 불러옵니다. 해당 요소들은 항상 외부에서 접근할 수 있습니다(public)&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;아래 코드는 npp요소에 접근할 때마다 n의 값이 1씩 증가하도록 되어있습니다. 그리고 npp 요소에 값을 입력하려고 하면 n의 값이 해당 값으로 변경됩니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;Count &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; R6Class&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Count&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  public &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    n &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  active &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    npp &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;value&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;missing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;value&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;
        self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; value
        &lt;span class=&quot;kp&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    nmm &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
      self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
      &lt;span class=&quot;kp&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;n_count &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Count&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;new&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
n_count&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;n
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;n_count&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;npp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;n_count&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;npp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;n_count&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;npp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이 경우 처럼 npp 요소에 값을 할당하려고 하면 해당 값을 함수의 value 인자로 간주하고 함수를 실행시킵니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;n_count&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;npp &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;active binding의 함수가 인자를 갖지 않을 경우에는 위와 같은 방식으로 값을 할당할 수 없습니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;n_count&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;nmm &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# Error in (function ()  : unused argument (quote(5))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;inheritance&quot;&gt;Inheritance&lt;/h2&gt;

&lt;p&gt;R6 class는 다른 class로부터 상속받을 수 있습니다. 자식 클래스(subclass)는 부모 클래스(superclass)로부터 메소드를 받아서 기능을 변경하거나, 추가적인 메소드를 생성할 수 있습니다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;다음 예제에서는 맨 처음 만들었던 Random class를 상속받아서 &lt;code&gt;gen_normal&lt;/code&gt;의 기능을 확장시키도록 하겠습니다. Random에서는 rnorm에 평균과 표분편차를 입력하지 않았습니다. 그래서 평균 0, 분산 1의 기본값이 적용된 표준정규분포를 따르는 난수가 생성되었습니다. 이번에는 &lt;code&gt;gen_normal&lt;/code&gt; 메소드에 평균과 표준편차를 입력할 수 있도록 함수를 변경하겠습니다&lt;/p&gt;

&lt;p&gt;상속은 Class를 생성할 때 &lt;code&gt;inherit&lt;/code&gt; 요소에 상속받으려는 R6 클래스를 입력하는 방식으로 동작합니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;RandomNormal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; R6Class&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;RandomNormal&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  inherit &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Random&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 여기서 Random class를 상속받습니다&lt;/span&gt;
  public &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    gen_normal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mu&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sd&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
      self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;vector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; rnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sd&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;rdn &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; RandomNormal&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;new&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
rdn&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;gen_normal&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
rdn&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;vector&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##  [1] 18.40037 18.78328 20.72541 17.22007 19.16256 21.45393 19.95351
##  [8] 16.35129 14.99379 17.76512
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;rdn&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;n
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;부모 클래스의 메소드는 &lt;code&gt;super$method()&lt;/code&gt; 의 형태로 호출할 수 있습니다. 아래 예제에서는 &lt;code&gt;gen_normal()&lt;/code&gt; 메소드를 실행시킬 때 표본평균까지 볼 수 있도록 RandomNormal class를 수정하겠습니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;RandomNormal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; R6Class&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;RandomNormal&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   inherit &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Random&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   public &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
     gen_normal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mu&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sd&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
       self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;vector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; rnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; mu&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sd&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       super&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;calc_sp_mean&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
       super&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;print_sp_mean&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;rdn &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; RandomNormal&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;new&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
rdn&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;gen_normal&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 20.71161
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;copy-on-modify-vs-modify-in-place&quot;&gt;Copy-on-modify vs Modify in place&lt;/h2&gt;

&lt;p&gt;글을 시작할 때 R6는 R에서 기본적으로 사용하는 copy-on-modify가 적용되지 않는다고 말씀드렸습니다. 아래에서는 실제 예제를 통해서 살펴보겠습니다&lt;/p&gt;

&lt;p&gt;보통 R에서 동작하는 방식은 다음과 같습니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;a &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;

b &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; a

a &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;

b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;보셨다시피 &lt;code&gt;b = a&lt;/code&gt;를 실행시키는 순간 b는 a의 값을 그대로 받지만 이것은 복사된 객체이기 때문에 이후에 a를 변경하는 작업은 b에 영향을 주지 못합니다. 하지만 이러한 객체의 복사가 모든 영역에서 발생한다면, 큰 데이터를 다루는 작업에서는 성능에 큰 영향을 미칠 수도 있습니다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;R6 class에서는 어떻게 되는지 살펴보겠습니다. 상수값 한 개를 가지는 Constant class를 생성합니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;Constant &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; R6Class&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Constant&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  public &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    a &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Constant class의 인스턴스를 하나 생성합니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;r6_a &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Constant&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;new&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;생성한 인스턴스를 통해서 다른 인스턴스를 하나 더 만듭니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;r6_b &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; r6_a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;새로 만든 인스턴스의 값을 확인합니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;r6_b&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;먼저 생성한 인스턴스의 값을 변경해보겠습니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;r6_a&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;a &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;나중에 만든 인스턴스도 함께 값이 변경된 것을 볼 수 있습니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;r6_b&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;만약 기존처럼 서로 연결되지 않는 별개의 인스턴스를 만들고 싶다면 &lt;code&gt;clone()&lt;/code&gt; 메서드를 사용하면 됩니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;r6_c &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; r6_a&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;clone&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

r6_c&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;r6_a&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;a &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;

r6_c&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;그러면 기존 인스턴스의 값을 변경하더라도 clone으로 복제한 인스턴스의 값은 변하지 않는 것을 볼 수 있습니다&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/R6-basics&quot;&gt;R6 basics&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on December 30, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Plotly for R]]></title>
  <link>http://lumiamitie.github.io/r/visualization/plotly-for-r</link>
  <id>http://lumiamitie.github.io/r/visualization/plotly-for-r</id>
  <published>2015-12-08T00:00:00+09:00</published>
  <updated>2015-12-08T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/old-book.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;getting-started-with-plotly-for-r&quot;&gt;Getting Started with Plotly for R&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://plot.ly&quot;&gt;Plotly&lt;/a&gt; 서비스의 코어 부분인 Plotly.js가 오픈소스화 되었습니다. 그 영향으로 로컬 환경에서 plotly를 이용해 인터렉티브 차트를 그릴 수 있게 되었습니다. 파이썬 등 다른 언어를 통해서도 지원하지만, R의 경우 ggplot2와의 호환성이 높다는 것이 큰 특징이라고 할 수 있습니다. &lt;/p&gt;

&lt;p&gt;R의 plotly 패키지는 &lt;strong&gt;plotly.js&lt;/strong&gt;를 htmlwidget을 이용해 그래프를 처리합니다. 따라서 다른 htmlwidget기반 패키지들과 마찬가지로 윈도우에서는 한글 출력시 인코딩 문제가 발생할 수 있습니다. &lt;/p&gt;

&lt;p&gt;자세한 사용법은 &lt;a href=&quot;https://plot.ly/r/&quot;&gt;홈페이지&lt;/a&gt; 에서 확인할 수 있습니다. 여기서는 정말 간단한 맛보기 정도로만 보여드리려고 합니다. &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;이 페이지에서는 이미지 형태의 차트로만 보여드립니다&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;plotly&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggplot2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;기본적으로 &lt;code&gt;plot_ly&lt;/code&gt; 함수를 사용해서 그래프를 출력합니다.&lt;/p&gt;

&lt;p&gt;아래 그래프는 ggplot2 패키지의 diamonds 데이터를 이용해서 그린 산점도입니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;set.seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
d &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; diamonds &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; sample_n&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
plot_ly&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;d&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;carat&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;price&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        text &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;paste&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Clarity :&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; clarity&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        mode &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;markers&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; color &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; carat&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; size &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; carat&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/plotly_for_r/plotly1.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이번에는 &lt;a href=&quot;http://sts.kma.go.kr/jsp/home/contents/main/main.do&quot;&gt;국가 기후 데이터 센터&lt;/a&gt; 에서 받은 지역/시간대별 온도/습도 자료를 이용해서 서울과 부산의 온도를 선 그래프로 그려보았습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;weather &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; readr&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;read_csv&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;../dataset/0701_0813_data.csv&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

weather_subset &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; weather &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;location &lt;span class=&quot;o&quot;&gt;%in%&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;서울&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;부산&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;location &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;ifelse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;location &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;서울&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Seoul&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Busan&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  group_by&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;location&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  summarise&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;temp &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;temp&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  ungroup&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

weather_subset
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [88 x 3]
## 
##    location       date  temp
##       (chr)     (date) (dbl)
## 1     Busan 2015-07-01  22.4
## 2     Busan 2015-07-02  22.2
## 3     Busan 2015-07-03  23.1
## 4     Busan 2015-07-04  21.4
## 5     Busan 2015-07-05  21.3
## 6     Busan 2015-07-06  21.1
## 7     Busan 2015-07-07  19.5
## 8     Busan 2015-07-08  20.7
## 9     Busan 2015-07-09  23.1
## 10    Busan 2015-07-10  23.8
## ..      ...        ...   ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;plot_ly&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;weather_subset&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; temp&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; color &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; location&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        colors &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Accent&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/plotly_for_r/plotly2.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;동일한 데이터로 서울의 시간대별 온도를 box plot으로 그려보았습니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;seoul_weather &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; weather &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;location &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;서울&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

seoul_weather
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [1,056 x 6]
## 
##       id location       date  hour  temp precipitation
##    (int)    (chr)     (date) (int) (dbl)         (dbl)
## 1    108     서울 2015-07-01     0  22.2           0.0
## 2    108     서울 2015-07-01     1  22.1           0.5
## 3    108     서울 2015-07-01     2  21.9           0.0
## 4    108     서울 2015-07-01     3  21.8           0.0
## 5    108     서울 2015-07-01     4  21.7           0.0
## 6    108     서울 2015-07-01     5  21.4           0.0
## 7    108     서울 2015-07-01     6  21.0           0.0
## 8    108     서울 2015-07-01     7  21.1           0.0
## 9    108     서울 2015-07-01     8  22.2           0.0
## 10   108     서울 2015-07-01     9  23.3           0.0
## ..   ...      ...        ...   ...   ...           ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;plot_ly&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;seoul_weather&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; hour&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;temp&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        type &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;box&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/plotly_for_r/plotly3.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;ggplot2 패키지에서 생성한 그래프 객체를 이용해서 plotly 그래프를 생성할 수 있습니다.&lt;/p&gt;

&lt;p&gt;먼저 아래와 같이 ggplot2 그래프 객체를 생성합니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;seoul_gg &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ggplot&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;seoul_weather&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; aes&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; hour&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;temp&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  geom_point&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;colour &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;#90c8c6&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
  stat_smooth&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

seoul_gg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/plotly_for_r/plotly4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ggplotly&lt;/code&gt;함수를 이용해서 plotly 그래프로 변환시킬 수 있습니다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;ggplotly&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;seoul_gg&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/plotly_for_r/plotly5.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/visualization/plotly-for-r&quot;&gt;Plotly for R&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on December 08, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[tidyr Utilities]]></title>
  <link>http://lumiamitie.github.io/r/tidyr-util</link>
  <id>http://lumiamitie.github.io/r/tidyr-util</id>
  <published>2015-12-03T00:00:00+09:00</published>
  <updated>2015-12-03T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/taking-notes.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;tidyr-utilities&quot;&gt;tidyr Utilities&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;tidyr&lt;/code&gt; 패키지에서 가장 중심이 되는 기능은 &lt;code&gt;gather&lt;/code&gt;와 &lt;code&gt;spread&lt;/code&gt;를 이용한 데이터 형태 변환이다. 하지만 이전 포스팅에서도 다루었지만, NA를 처리하는 &lt;code&gt;replace_na&lt;/code&gt;나 &lt;code&gt;fill&lt;/code&gt; 등 데이터를 편리하게 정제할 수 있는 도구들을 제공하기도 한다. 여기서는 이전까지의 글에서 다루지 않았던 tidyr의 다른 기능에 대해서 살펴보려고 한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tidyr과 관련된 이전 포스팅&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/tidy-data/&quot;&gt;Tidy Data&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/replace_na_with_tidyr/&quot;&gt;relace_na with tidyr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;tidyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;expand&quot;&gt;expand()&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;expand&lt;/code&gt;함수는 선택한 변수들의 조합을 만들어낸다&lt;/p&gt;

&lt;p&gt;어떠한 형태로 사용하는지에 따라서 데이터에 존재하는 조합만 생성할 수도 있고, 데이터와 무관하게 각 변수들로 만들어 낼 수 있는 모든 조합을 생성할 수도 있다.&lt;/p&gt;

&lt;p&gt;우선 실습을 위해 &lt;code&gt;mtcars&lt;/code&gt; 데이터를 사용한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;expand(데이터, 열 이름들)&lt;/code&gt;의 형태로 사용하면 해당 변수들로 만들 수 있는 모든 조합을 생성한다(데이터에는 없더라도)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;expand&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cyl&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [6 x 2]
## 
##      vs   cyl
##   (dbl) (dbl)
## 1     0     4
## 2     0     6
## 3     0     8
## 4     1     4
## 5     1     6
## 6     1     8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;변수를 c()로 묶으면 데이터에 존재하는 조합만 생성한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;expand&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cyl&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   vs cyl
## 1  0   4
## 2  0   6
## 3  0   8
## 4  1   4
## 5  1   6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;두 방식을 섞어서 사용할 수도 있다. 아래와 같이 사용하면 &lt;code&gt;vs&lt;/code&gt;, &lt;code&gt;cyl&lt;/code&gt;에 대해서는 데이터에 존재하는 조합만 만들고 &lt;code&gt;am&lt;/code&gt;에 대해서는 데이터에 없는 조합까지 생성한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;expand&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cyl&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; am&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [10 x 3]
## 
##       vs   cyl    am
##    (dbl) (dbl) (dbl)
## 1      0     4     0
## 2      0     4     1
## 3      0     6     0
## 4      0     6     1
## 5      0     8     0
## 6      0     8     1
## 7      1     4     0
## 8      1     4     1
## 9      1     6     0
## 10     1     6     1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;모든 변수를 c로 묶으면 데이터에 존재하는 조합만 생성된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;expand&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cyl&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; am&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   vs cyl am
## 1  0   4  1
## 2  0   6  1
## 3  0   8  0
## 4  0   8  1
## 5  1   4  0
## 6  1   4  1
## 7  1   6  0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;expand&lt;/code&gt; 함수를 사용하면 원하는 변수의 모든 조합에 대한 테이블을 생성할 수 있다. 데이터에 없는 부분은 &lt;code&gt;NA&lt;/code&gt;로 처리하고 존재하는 조합에만 데이터를 넣으면 된다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;expand&lt;/code&gt; 함수를 사용해서 원하는 변수 조합에 대한 data.frame을 생성한 다음에 원본 데이터를 &lt;code&gt;left_join&lt;/code&gt; 시키면 원하는 모든 조합을 표시하는 테이블이 생성된다. &lt;code&gt;NA&lt;/code&gt;값을 0으로 변환시키기 위해서 &lt;code&gt;replace_na&lt;/code&gt; 함수를 사용할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;expand&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cyl&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; am&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  left_join&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; by&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;vs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;cyl&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;am&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  replace_na&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mpg &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; disp &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; hp &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; drat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; wt &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; qsec &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; gear &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; carb &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [37 x 11]
## 
##       vs   cyl    am   mpg  disp    hp  drat    wt  qsec  gear  carb
##    (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl)
## 1      0     4     0   0.0   0.0     0  0.00 0.000  0.00     0     0
## 2      0     4     1  26.0 120.3    91  4.43 2.140 16.70     5     2
## 3      0     6     0   0.0   0.0     0  0.00 0.000  0.00     0     0
## 4      0     6     1  21.0 160.0   110  3.90 2.620 16.46     4     4
## 5      0     6     1  21.0 160.0   110  3.90 2.875 17.02     4     4
## 6      0     6     1  19.7 145.0   175  3.62 2.770 15.50     5     6
## 7      0     8     0  18.7 360.0   175  3.15 3.440 17.02     3     2
## 8      0     8     0  14.3 360.0   245  3.21 3.570 15.84     3     4
## 9      0     8     0  16.4 275.8   180  3.07 4.070 17.40     3     3
## 10     0     8     0  17.3 275.8   180  3.07 3.730 17.60     3     3
## ..   ...   ...   ...   ...   ...   ...   ...   ...   ...   ...   ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tidyr&lt;/code&gt;에서는 이 세 가지 과정을 하나로 묶어서 &lt;code&gt;complete&lt;/code&gt; 라는 함수로 제공한다. &lt;code&gt;expand&lt;/code&gt;와 &lt;code&gt;replace_na&lt;/code&gt;의 문법이 섞인 형태로 사용할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;complete&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
         vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cyl&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; am&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
         fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mpg &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                     disp &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                     hp &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                     drat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                     wt &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                     qsec &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                     gear &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                     carb &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [37 x 11]
## 
##       vs   cyl    am   mpg  disp    hp  drat    wt  qsec  gear  carb
##    (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl) (dbl)
## 1      0     4     0   0.0   0.0     0  0.00 0.000  0.00     0     0
## 2      0     4     1  26.0 120.3    91  4.43 2.140 16.70     5     2
## 3      0     6     0   0.0   0.0     0  0.00 0.000  0.00     0     0
## 4      0     6     1  21.0 160.0   110  3.90 2.620 16.46     4     4
## 5      0     6     1  21.0 160.0   110  3.90 2.875 17.02     4     4
## 6      0     6     1  19.7 145.0   175  3.62 2.770 15.50     5     6
## 7      0     8     0  18.7 360.0   175  3.15 3.440 17.02     3     2
## 8      0     8     0  14.3 360.0   245  3.21 3.570 15.84     3     4
## 9      0     8     0  16.4 275.8   180  3.07 4.070 17.40     3     3
## 10     0     8     0  17.3 275.8   180  3.07 3.730 17.60     3     3
## ..   ...   ...   ...   ...   ...   ...   ...   ...   ...   ...   ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nest&quot;&gt;nest&lt;/h2&gt;

&lt;p&gt;어떤 그룹을 기준으로 반복되는 값들을 list-variable 형태로 정리한다. 그룹을 중심으로 데이터를 좀 더 압축적으로 살펴볼 수 있게 된다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;list의 형태로 표현할 열들을 nest 함수의 인자로 하면 된다. 아래 코드에서는 Species함수를 제외한 다른 열의 값을 리스트로 변경한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; nest&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [3 x 5]
## Groups: &amp;lt;by row&amp;gt;
## 
##      Species Sepal.Length Sepal.Width Petal.Length Petal.Width
##       (fctr)        (chr)       (chr)        (chr)       (chr)
## 1     setosa    &amp;lt;dbl[50]&amp;gt;   &amp;lt;dbl[50]&amp;gt;    &amp;lt;dbl[50]&amp;gt;   &amp;lt;dbl[50]&amp;gt;
## 2 versicolor    &amp;lt;dbl[50]&amp;gt;   &amp;lt;dbl[50]&amp;gt;    &amp;lt;dbl[50]&amp;gt;   &amp;lt;dbl[50]&amp;gt;
## 3  virginica    &amp;lt;dbl[50]&amp;gt;   &amp;lt;dbl[50]&amp;gt;    &amp;lt;dbl[50]&amp;gt;   &amp;lt;dbl[50]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;데이터를 nest시킨 이후에는 list 형태로 데이터를 활용할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;nested_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; nest&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
nested_iris&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;Sepal.Length
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
##  [1] 5.1 4.9 4.7 4.6 5.0 5.4 4.6 5.0 4.4 4.9 5.4 4.8 4.8 4.3 5.8 5.7 5.4
## [18] 5.1 5.7 5.1 5.4 5.1 4.6 5.1 4.8 5.0 5.0 5.2 5.2 4.7 4.8 5.4 5.2 5.5
## [35] 4.9 5.0 5.5 4.9 4.4 5.1 5.0 4.5 4.4 5.0 5.1 4.8 5.1 4.6 5.3 5.0
## 
## [[2]]
##  [1] 7.0 6.4 6.9 5.5 6.5 5.7 6.3 4.9 6.6 5.2 5.0 5.9 6.0 6.1 5.6 6.7 5.6
## [18] 5.8 6.2 5.6 5.9 6.1 6.3 6.1 6.4 6.6 6.8 6.7 6.0 5.7 5.5 5.5 5.8 6.0
## [35] 5.4 6.0 6.7 6.3 5.6 5.5 5.5 6.1 5.8 5.0 5.6 5.7 5.7 6.2 5.1 5.7
## 
## [[3]]
##  [1] 6.3 5.8 7.1 6.3 6.5 7.6 4.9 7.3 6.7 7.2 6.5 6.4 6.8 5.7 5.8 6.4 6.5
## [18] 7.7 7.7 6.0 6.9 5.6 7.7 6.3 6.7 7.2 6.2 6.1 6.4 7.2 7.4 7.9 6.4 6.3
## [35] 6.1 7.7 6.3 6.4 6.0 6.9 6.7 6.9 5.8 6.8 6.7 6.7 6.3 6.5 6.2 5.9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;여러 개의 변수를 기준으로 하여 nest시킬 수도 있다. 이 경우 &lt;code&gt;dplyr::select&lt;/code&gt;의 열 선택 방식을 사용할 수 있다. 아래의 두 가지 코드는 같은 결과물을 가진다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtcars &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; nest&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;am&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;gear&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;carb&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [14 x 11]
## Groups: &amp;lt;by row&amp;gt;
## 
##       vs    am  gear  carb      mpg      cyl     disp       hp     drat
##    (dbl) (dbl) (dbl) (dbl)    (chr)    (chr)    (chr)    (chr)    (chr)
## 1      0     0     3     2 &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt;
## 2      0     0     3     3 &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt;
## 3      0     0     3     4 &amp;lt;dbl[5]&amp;gt; &amp;lt;dbl[5]&amp;gt; &amp;lt;dbl[5]&amp;gt; &amp;lt;dbl[5]&amp;gt; &amp;lt;dbl[5]&amp;gt;
## 4      0     1     4     4 &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt;
## 5      0     1     5     2 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## 6      0     1     5     4 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## 7      0     1     5     6 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## 8      0     1     5     8 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## 9      1     0     3     1 &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt;
## 10     1     0     4     2 &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt;
## 11     1     0     4     4 &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt;
## 12     1     1     4     1 &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt;
## 13     1     1     4     2 &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt;
## 14     1     1     5     2 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## Variables not shown: wt (chr), qsec (chr)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtcars &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; nest&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;vs&lt;span class=&quot;o&quot;&gt;:-&lt;/span&gt;carb&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [14 x 11]
## Groups: &amp;lt;by row&amp;gt;
## 
##       vs    am  gear  carb      mpg      cyl     disp       hp     drat
##    (dbl) (dbl) (dbl) (dbl)    (chr)    (chr)    (chr)    (chr)    (chr)
## 1      0     0     3     2 &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt;
## 2      0     0     3     3 &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt;
## 3      0     0     3     4 &amp;lt;dbl[5]&amp;gt; &amp;lt;dbl[5]&amp;gt; &amp;lt;dbl[5]&amp;gt; &amp;lt;dbl[5]&amp;gt; &amp;lt;dbl[5]&amp;gt;
## 4      0     1     4     4 &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt;
## 5      0     1     5     2 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## 6      0     1     5     4 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## 7      0     1     5     6 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## 8      0     1     5     8 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## 9      1     0     3     1 &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt; &amp;lt;dbl[3]&amp;gt;
## 10     1     0     4     2 &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt;
## 11     1     0     4     4 &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt;
## 12     1     1     4     1 &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt; &amp;lt;dbl[4]&amp;gt;
## 13     1     1     4     2 &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt; &amp;lt;dbl[2]&amp;gt;
## 14     1     1     5     2 &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt; &amp;lt;dbl[1]&amp;gt;
## Variables not shown: wt (chr), qsec (chr)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;nest를 해제하려면 unnest 함수를 사용한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;nested_iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; unnest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [150 x 5]
## 
##    Species Sepal.Length Sepal.Width Petal.Length Petal.Width
##     (fctr)        (dbl)       (dbl)        (dbl)       (dbl)
## 1   setosa          5.1         3.5          1.4         0.2
## 2   setosa          4.9         3.0          1.4         0.2
## 3   setosa          4.7         3.2          1.3         0.2
## 4   setosa          4.6         3.1          1.5         0.2
## 5   setosa          5.0         3.6          1.4         0.2
## 6   setosa          5.4         3.9          1.7         0.4
## 7   setosa          4.6         3.4          1.4         0.3
## 8   setosa          5.0         3.4          1.5         0.2
## 9   setosa          4.4         2.9          1.4         0.2
## 10  setosa          4.9         3.1          1.5         0.1
## ..     ...          ...         ...          ...         ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;extract&quot;&gt;extract&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;extract&lt;/code&gt; 함수는 정규표현식을 통해 원하는 값만 추출해서 새로운 열을 만들어준다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;extract(데이터, 대상 열, 생성할 열 이름, 정규표현식)&lt;/code&gt;의 형태로 사용한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mtcars&lt;/code&gt;에서 자동차 모델 중 일부의 이름을 따로 data.frame으로 저장해서 실습하려고 한다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtcars_name &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;name &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;row.names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])&lt;/span&gt;
mtcars_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##              name
## 1       Merc 240D
## 2        Merc 230
## 3        Merc 280
## 4       Merc 280C
## 5      Merc 450SE
## 6      Merc 450SL
## 7     Merc 450SLC
## 8     Honda Civic
## 9  Toyota Corolla
## 10  Toyota Corona
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;기본값은 영문자와 숫자를 포함하는 문자열만을 추출한다. 따라서 아래 예제에서는 공백이 나오기 전까지의 문자열을 추출하게 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtcars_name &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  extract&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Brand&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##     Brand
## 1    Merc
## 2    Merc
## 3    Merc
## 4    Merc
## 5    Merc
## 6    Merc
## 7    Merc
## 8   Honda
## 9  Toyota
## 10 Toyota
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;여기서는 정규표현식을 자세히 설명하지 않기 때문에 자세한 동작 원리에 대해서는 언급하지 않는다. 간단하게 설명하면 아래의 예제에서 세 번째 인자인 정규표현식은 &lt;code&gt;(첫 번째 패턴)구분자(두 번째 패턴)&lt;/code&gt; 의 형태로 되어있다.
첫 번째 패턴에 해당하는 결과가 &lt;code&gt;&amp;quot;Brand&amp;quot;&lt;/code&gt; 열에 들어가고, 두 번째 패턴에 해당하는 결과는 &lt;code&gt;&amp;quot;Name&amp;quot;&lt;/code&gt; 열에 입력된다. 그리고 각각의 패턴은 영문자 또는 숫자인 문자열만 찾도록 되어있다. &lt;/p&gt;

&lt;p&gt;R에서 정규표현식에 대한 도움말은 &lt;code&gt;?regex&lt;/code&gt;를 참고하자  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;mtcars_name &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  extract&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Brand&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;([[:alnum:]]+) ([[:alnum:]]+)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##     Brand    Name
## 1    Merc    240D
## 2    Merc     230
## 3    Merc     280
## 4    Merc    280C
## 5    Merc   450SE
## 6    Merc   450SL
## 7    Merc  450SLC
## 8   Honda   Civic
## 9  Toyota Corolla
## 10 Toyota  Corona
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;unite&quot;&gt;unite&lt;/h2&gt;

&lt;p&gt;두 열을 하나의 열로 합쳐준다. dplyr의 mutate 함수를 통해 두 열을 paste 하는 것과 비슷한 효과를 낸다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;unite(데이터프레임, 결과물의 열 이름, 합칠 열 이름들)&lt;/code&gt;의 형태로 사용한다&lt;/p&gt;

&lt;p&gt;아래 코드는 &lt;code&gt;mtcars&lt;/code&gt; 데이터의 &lt;code&gt;vs&lt;/code&gt;와 &lt;code&gt;am&lt;/code&gt; 열을 합쳐서 &lt;code&gt;vs_am&lt;/code&gt;이라는 새로운 열을 만든다. &lt;code&gt;unite&lt;/code&gt; 의 &lt;code&gt;sep&lt;/code&gt; 기본값이 &lt;code&gt;_&lt;/code&gt;이기 때문에 두 열의 값 사이에 &lt;code&gt;_&lt;/code&gt; 이 들어간 형태로 합쳐진다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;unite&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs_am&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; am&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##                      mpg cyl  disp  hp drat    wt  qsec vs_am gear carb
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46   0_1    4    4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02   0_1    4    4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61   1_1    4    1
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44   1_0    3    1
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02   0_0    3    2
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22   1_0    3    1
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84   0_0    3    4
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00   1_0    4    2
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90   1_0    4    2
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30   1_0    4    4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90   1_0    4    4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40   0_0    3    3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60   0_0    3    3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00   0_0    3    3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98   0_0    3    4
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82   0_0    3    4
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42   0_0    3    4
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47   1_1    4    1
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52   1_1    4    2
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90   1_1    4    1
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01   1_0    3    1
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87   0_0    3    2
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30   0_0    3    2
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41   0_0    3    4
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05   0_0    3    2
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90   1_1    4    1
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70   0_1    5    2
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90   1_1    5    2
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50   0_1    5    4
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50   0_1    5    6
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60   0_1    5    8
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60   1_1    4    2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;unite&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs_am&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; am&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sep &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##                      mpg cyl  disp  hp drat    wt  qsec vs_am gear carb
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46   0x1    4    4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02   0x1    4    4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61   1x1    4    1
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44   1x0    3    1
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02   0x0    3    2
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22   1x0    3    1
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84   0x0    3    4
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00   1x0    4    2
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90   1x0    4    2
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30   1x0    4    4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90   1x0    4    4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40   0x0    3    3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60   0x0    3    3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00   0x0    3    3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98   0x0    3    4
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82   0x0    3    4
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42   0x0    3    4
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47   1x1    4    1
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52   1x1    4    2
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90   1x1    4    1
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01   1x0    3    1
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87   0x0    3    2
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30   0x0    3    2
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41   0x0    3    4
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05   0x0    3    2
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90   1x1    4    1
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70   0x1    5    2
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90   1x1    5    2
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50   0x1    5    4
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50   0x1    5    6
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60   0x1    5    8
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60   1x1    4    2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;SE버전의 함수를 사용하려면 &lt;code&gt;unite_&lt;/code&gt; 함수를 사용한다. 열이름을 문자열의 형태로 전달할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;unite_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;vs_am&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;vs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;am&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##                      mpg cyl  disp  hp drat    wt  qsec vs_am gear carb
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46   0_1    4    4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02   0_1    4    4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61   1_1    4    1
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44   1_0    3    1
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02   0_0    3    2
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22   1_0    3    1
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84   0_0    3    4
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00   1_0    4    2
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90   1_0    4    2
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30   1_0    4    4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90   1_0    4    4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40   0_0    3    3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60   0_0    3    3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00   0_0    3    3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98   0_0    3    4
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82   0_0    3    4
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42   0_0    3    4
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47   1_1    4    1
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52   1_1    4    2
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90   1_1    4    1
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01   1_0    3    1
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87   0_0    3    2
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30   0_0    3    2
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41   0_0    3    4
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05   0_0    3    2
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90   1_1    4    1
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70   0_1    5    2
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90   1_1    5    2
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50   0_1    5    4
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50   0_1    5    6
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60   0_1    5    8
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60   1_1    4    2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;unite_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;vs_am&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;vs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;am&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; sep &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##                      mpg cyl  disp  hp drat    wt  qsec vs_am gear carb
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46   0x1    4    4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02   0x1    4    4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61   1x1    4    1
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44   1x0    3    1
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02   0x0    3    2
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22   1x0    3    1
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84   0x0    3    4
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00   1x0    4    2
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90   1x0    4    2
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30   1x0    4    4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90   1x0    4    4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40   0x0    3    3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60   0x0    3    3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00   0x0    3    3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98   0x0    3    4
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82   0x0    3    4
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42   0x0    3    4
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47   1x1    4    1
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52   1x1    4    2
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90   1x1    4    1
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01   1x0    3    1
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87   0x0    3    2
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30   0x0    3    2
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41   0x0    3    4
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05   0x0    3    2
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90   1x1    4    1
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70   0x1    5    2
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90   1x1    5    2
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50   0x1    5    4
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50   0x1    5    6
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60   0x1    5    8
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60   1x1    4    2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;3개 이상의 변수를 합칠 수도 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;unite&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vagc&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; am&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; gear&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; carb&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##                      mpg cyl  disp  hp drat    wt  qsec    vagc
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46 0_1_4_4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02 0_1_4_4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61 1_1_4_1
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44 1_0_3_1
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02 0_0_3_2
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22 1_0_3_1
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84 0_0_3_4
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00 1_0_4_2
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90 1_0_4_2
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30 1_0_4_4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90 1_0_4_4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40 0_0_3_3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60 0_0_3_3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00 0_0_3_3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98 0_0_3_4
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82 0_0_3_4
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42 0_0_3_4
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47 1_1_4_1
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52 1_1_4_2
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90 1_1_4_1
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01 1_0_3_1
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87 0_0_3_2
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30 0_0_3_2
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41 0_0_3_4
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05 0_0_3_2
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90 1_1_4_1
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70 0_1_5_2
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90 1_1_5_2
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50 0_1_5_4
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50 0_1_5_6
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60 0_1_5_8
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60 1_1_4_2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dplyr::select&lt;/code&gt; 함수에서 지원하는 열 선택 방식을 지원한다. 자세한 내용은 &lt;code&gt;dplyr::select&lt;/code&gt; 함수의 도움말에서 확인할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;unite&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vagc&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;carb&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##                      mpg cyl  disp  hp drat    wt  qsec    vagc
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46 0_1_4_4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02 0_1_4_4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61 1_1_4_1
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44 1_0_3_1
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02 0_0_3_2
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22 1_0_3_1
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84 0_0_3_4
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00 1_0_4_2
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90 1_0_4_2
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30 1_0_4_4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90 1_0_4_4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40 0_0_3_3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60 0_0_3_3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00 0_0_3_3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98 0_0_3_4
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82 0_0_3_4
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42 0_0_3_4
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47 1_1_4_1
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52 1_1_4_2
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90 1_1_4_1
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01 1_0_3_1
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87 0_0_3_2
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30 0_0_3_2
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41 0_0_3_4
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05 0_0_3_2
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90 1_1_4_1
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70 0_1_5_2
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90 1_1_5_2
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50 0_1_5_4
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50 0_1_5_6
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60 0_1_5_8
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60 1_1_4_2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;기본적으로는 열을 합치면 합치는데 사용한 원본 열은 삭제하게끔 되어있다. 원본 열들을 남기고 싶다면 &lt;code&gt;remove = FALSE&lt;/code&gt; 옵션을 사용한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;unite&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vagc&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;carb&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; remove &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##                      mpg cyl  disp  hp drat    wt  qsec    vagc vs am gear
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46 0_1_4_4  0  1    4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02 0_1_4_4  0  1    4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61 1_1_4_1  1  1    4
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44 1_0_3_1  1  0    3
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02 0_0_3_2  0  0    3
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22 1_0_3_1  1  0    3
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84 0_0_3_4  0  0    3
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00 1_0_4_2  1  0    4
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90 1_0_4_2  1  0    4
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30 1_0_4_4  1  0    4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90 1_0_4_4  1  0    4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40 0_0_3_3  0  0    3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60 0_0_3_3  0  0    3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00 0_0_3_3  0  0    3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98 0_0_3_4  0  0    3
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82 0_0_3_4  0  0    3
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42 0_0_3_4  0  0    3
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47 1_1_4_1  1  1    4
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52 1_1_4_2  1  1    4
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90 1_1_4_1  1  1    4
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01 1_0_3_1  1  0    3
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87 0_0_3_2  0  0    3
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30 0_0_3_2  0  0    3
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41 0_0_3_4  0  0    3
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05 0_0_3_2  0  0    3
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90 1_1_4_1  1  1    4
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70 0_1_5_2  0  1    5
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90 1_1_5_2  1  1    5
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50 0_1_5_4  0  1    5
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50 0_1_5_6  0  1    5
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60 0_1_5_8  0  1    5
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60 1_1_4_2  1  1    4
##                     carb
## Mazda RX4              4
## Mazda RX4 Wag          4
## Datsun 710             1
## Hornet 4 Drive         1
## Hornet Sportabout      2
## Valiant                1
## Duster 360             4
## Merc 240D              2
## Merc 230               2
## Merc 280               4
## Merc 280C              4
## Merc 450SE             3
## Merc 450SL             3
## Merc 450SLC            3
## Cadillac Fleetwood     4
## Lincoln Continental    4
## Chrysler Imperial      4
## Fiat 128               1
## Honda Civic            2
## Toyota Corolla         1
## Toyota Corona          1
## Dodge Challenger       2
## AMC Javelin            2
## Camaro Z28             4
## Pontiac Firebird       2
## Fiat X1-9              1
## Porsche 914-2          2
## Lotus Europa           2
## Ford Pantera L         4
## Ferrari Dino           6
## Maserati Bora          8
## Volvo 142E             2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;separate&quot;&gt;separate&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;unite&lt;/code&gt; 함수와는 반대로 열을 쪼개는 역할을 한다. 기본적으로는 &lt;strong&gt;영문자와 숫자가 아닌 값을 기준&lt;/strong&gt;으로 열을 구분한다. &lt;code&gt;unite&lt;/code&gt; 함수에서 기본값으로 &lt;code&gt;_&lt;/code&gt;를 사용해 문자열을 합쳤기 때문에 간단하게 원래 상태로 돌릴 수 있다. 구분자가 정해져있는 경우에는 직접 &lt;code&gt;sep&lt;/code&gt; 옵션에 값을 지정하면 된다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;separate(데이터, 분리시킬 열 이름, 새롭게 생성할 열 이름들)&lt;/code&gt;의 형태로 사용한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;unite&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mtcars&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vagc&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; vs&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;carb&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  separate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;vagc&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;vs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;am&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;gear&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;carb&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb
## Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4
## Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4
## Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1
## Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1
## Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2
## Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1
## Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4
## Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2
## Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2
## Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4
## Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4
## Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3
## Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3
## Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3
## Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4
## Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4
## Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4
## Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1
## Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2
## Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1
## Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1
## Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2
## AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2
## Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4
## Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2
## Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1
## Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2
## Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2
## Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4
## Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6
## Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8
## Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;문자열을 쪼갤 때 원하는 개수의 조각으로 쪼개지지 않을 수도 있다. 이러한 경우 &lt;code&gt;extra&lt;/code&gt;와 &lt;code&gt;fill&lt;/code&gt; 옵션을 사용하면 각각의 상황에 대해서 대응하는 방식을 정해줄 수 있다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;extra&lt;/code&gt;는 지정했던 열 개수보다 많은 개수로 쪼개졌을 경우&lt;/p&gt;

&lt;p&gt;&lt;code&gt;fill&lt;/code&gt;은 지정했던 열 개수보다 적은 개수로 쪼개졌을 경우에 대한 대응 방식을 나타낸다&lt;/p&gt;

&lt;p&gt;양쪽 모두 기본값은 &lt;code&gt;&amp;quot;warn&amp;quot;&lt;/code&gt; 으로, 경고메세지를 출력한다. &lt;code&gt;extra&lt;/code&gt;는 여분의 데이터를 버리고, &lt;code&gt;fill&lt;/code&gt;은 오른쪽부터 모자란 열에 &lt;code&gt;NA&lt;/code&gt;값을 채운다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;x: 123&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;y: error: 7&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  separate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;key&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; extra &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;warn&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Warning: Too many values at 1 locations: 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   key value
## 1   x   123
## 2   y error
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;x: 123&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  separate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;key&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;warn&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Warning: Too few values at 1 locations: 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   key value
## 1   x   123
## 2   y  &amp;lt;NA&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/tidyr-util&quot;&gt;tidyr Utilities&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on December 03, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Grouped Bar chart]]></title>
  <link>http://lumiamitie.github.io/d3/grouped-bar</link>
  <id>http://lumiamitie.github.io/d3/grouped-bar</id>
  <published>2015-11-17T00:00:00+09:00</published>
  <updated>2015-11-17T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/old-book.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;grouped-bar-chart&quot;&gt;Grouped bar chart&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://bl.ocks.org/mbostock/3887051&quot;&gt;http://bl.ocks.org/mbostock/3887051&lt;/a&gt;를 보고 수정하면서 알게 된 내용을 정리하려고 한다.&lt;/p&gt;

&lt;p&gt;위 예제에서는 x축의 scale함수를 &lt;strong&gt;그룹에 대한 scale&lt;/strong&gt;과 &lt;strong&gt;그룹 내에서 막대의 위치&lt;/strong&gt;에 대한 scale 두 개로 나누어서 막대를 배치하는 방식으로 구성했다. 여기서는 D3를 이용해서 기본적인 막대그래프를 만드는 방법은 알고 있다고 가정하고 기본적인 내용에 대해서는 넘어갈 것이다. &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;D3를 이용해서 막대그래프를 구성할 수 있다면 일반 막대그래프와 그룹 막대그래프의 차이는 scale 함수의 구성이 일부 달라진다는 것 뿐이다. &lt;/p&gt;

&lt;p&gt;일반적인 막대 그래프이 다음과 같이 구성되어 있다고 생각해보자&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;x_scale
y_scale

막대의 x축 위치 : x_scale(data.x)
막대의 높이 : height - y_scale(data.value)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;x축의 항목이 ordinal(명목형) 변수일 때 &lt;code&gt;x_scale&lt;/code&gt; 함수는 해당 변수에 맞는 x축 위치를 제공한다&lt;/p&gt;

&lt;p&gt;그림으로 표현하면 아래와 같다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_image/grouped_bar/grouped_bar01.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;x_scale의 결과물이 반환하는 좌표값은 각 막대의 왼쪽 끝에 해당하는 x좌표가 된다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;반면에 그룹별로 막대그래프를 만들 때에는 x축에 대한 scale 함수가 두 개 필요해진다. 우선 그룹에 맞는 위치를 찾아야하고, 그룹 내에서 막대의 위치를 잡아주어야 한다. 따라서 &lt;code&gt;x_scale&lt;/code&gt; 함수도 그룹에 대한 함수와 세부적인 위치에 대한 함수를 따로 생성해야 한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;x_scale_group
x_scale_bar
y_scale
막대의 x축 위치 : x_scale_group(data.group) + x_scale_bar(data.bar)
막대의 높이 : height - y_scale(data.value)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;그림으로 표현한다면 아래와 같다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_image/grouped_bar/grouped_bar02.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;먼저, group의 값에 따라서 &lt;code&gt;x_scale_group&lt;/code&gt; 함수가 해당 그룹의 x 좌표를 반환한다. 화살표의 끝이 각 그룹의 왼쪽 맨 끝을 향하고 있는 것을 볼 수 있다. &lt;code&gt;x_scale_group&lt;/code&gt; 함수는 각 그룹을 하나의 커다란 막대로 생각하여 값을 반환한다. 따라서 여기서 결정되는 가상의 막대 너비(그룹의 범위)는 곧 &lt;code&gt;x_scale_bar&lt;/code&gt; 함수의 range를 결정하는 값이 된다. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_image/grouped_bar/grouped_bar03.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;두 번째 그룹의 막대들을 대상으로 막대의 위치를 결정한다고 하면, &lt;code&gt;x_scale_bar&lt;/code&gt; 함수가 반환하는 값은 해당 그룹의 범위 내에서 막대가 위치해야 하는 지점의 좌표를 반환한다. 실제로 막대를 원하는 위치에 놓기 위해서는 &lt;code&gt;x_scale_group&lt;/code&gt; 의 결과물과 &lt;code&gt;x_scale_bar&lt;/code&gt; 의 결과물을 합하면 원하는 x좌표를 얻을 수 있게 된다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이제 나머지 과정은 일반적인 막대그래프를 만드는 과정과 같다. 따라서 html, css, js, json 파일의 내용과 완성된 결과물로 마무리하려고 한다. 아래 내용을 실습하려면 웹서버 환경이 필요하기 때문에 익숙하지 않다면 &lt;a href=&quot;https://github.com/mbostock/d3/wiki#using&quot;&gt;https://github.com/mbostock/d3/wiki#using&lt;/a&gt;의 내용을 참고해서 진행하면 된다. 크롬 확장프로그램에도 간단한 web server가 있으니 다른 언어를 설치하는 과정이 번거롭다면 참고할 수 있다. &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;grouped_bar-html&quot;&gt;grouped_bar.html&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;//d3js.org/d3.v3.min.js&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;grouped_bar.css&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;grouped bar chart&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;chart&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;grouped_bar.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;grouped_bar-css&quot;&gt;grouped_bar.css&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.pos&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#1f4e79&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.neg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#e51843&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.neu&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#73ad21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.y&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.tick&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:first-child&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.y&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stroke&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ccc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;grouped_bar-json&quot;&gt;grouped_bar.json&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;그룹1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;긍정&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;34&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;그룹2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;긍정&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;그룹3&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;긍정&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;51&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;그룹1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;부정&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;76&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;그룹2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;부정&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;59&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;그룹3&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;부정&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;79&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;그룹1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;중립&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;그룹2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;중립&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;94&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;그룹3&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;sentiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;중립&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;98&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;grouped_bar-js&quot;&gt;grouped_bar.js&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//grouped bar chart&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 차트의 크기&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chart_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// margin 설정&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;bot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// svg 생성&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// id = &amp;quot;chart&amp;quot; 인 div 태그의 하위 element로 svg 생성&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 차트의 크기에다 margin값을 더해서 svg 전체의 면적을 결정한다&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// x축은 margin.left, y축은 margin.top만큼 평행이동 시켜서 이후의 차트는 margin값과 상관없이 그릴 수 있도록 한다&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#chart&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;svg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chart_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chart_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;transform&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;translate(&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 각 그룹의 위치를 결정하는 scale 함수&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x_scale_group&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ordinal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rangeRoundBands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chart_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 그룹 내에서 막대의 위치를 결정하는 scale 함수&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x_scale_bar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ordinal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 막대의 높이를 결정하는 scale 함수&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// y축의 값이 위에는 높은값, 아래에는 0이 있어야 한다. 그렇기 때문에 range에 들어가는 배열에서 값의 순서가 바뀐다&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y_scale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;chart_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// x축을 생성하는 함수&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xAxis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x_scale_group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;orient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;bottom&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;outerTickSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// y축을 생성하는 함수&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 막대 뒤에 선을 표시하기 위해서 innerTickSize에 -chart_size.width 값을 부여한다&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 원래는 y축 눈금을 만드는 함수인데 -값을 주면 반대방향(차트 안쪽)으로 눈금이 길어진다&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;yAxis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;orient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;left&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;outerTickSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerTickSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;chart_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// json 파일을 불러온다&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 외부 파일을 불러오기 때문에 웹서버 환경에서만 실행 가능해진다&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;grouped_bar.json&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// data를 group 값을 기준으로 그룹 지정한다&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nested&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


    &lt;span class=&quot;c1&quot;&gt;// 그룹명(json 데이터에서 group 값)만 추출한다&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;group_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nested&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// x_scale_group의 domain에 group_name 변수를 지정한다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 그룹 수에 맞게 막대 그룹 개수 설정&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;x_scale_group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;group_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// x_scale_bar의 domain에 각 막대에 해당하는 값을 넣는다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// x_scale_group처럼 배열에서 값을 추출해서 쓰는 것이 더 좋다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// rangeRoundBands([interval], padding)의 형태로 사용했다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// padding의 값은 0과 1 사이의 값이 들어가는데 0.5일 때 막대의 너비와 막대 사이의 간격이 같아진다&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;x_scale_bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;긍정&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;부정&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;중립&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
               &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rangeRoundBands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x_scale_group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rangeBand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()],&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// y_scale의 domain 범위를 지정한다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 막대 그래프의 아래쪽 눈금은 0부터 시작하는 것이 바람직하기 때문에 배열의 첫 번째 값은 0으로 한다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 두 번째 값은 data의 value 값중에서 가장 큰 값을 찾고 그 값에서 임의의 값(여기서는 10)을 더해서 그래프 상단의 공간이 여유가 있도록 한다&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;y_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// x축을 생성한다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 그냥 만들면 (0,0) 위치 (화면 좌측 상단)에 생기기 때문에 margin.left 만큼 x축을 이동시키고 차트의 높이만큼 아래로 내려준다&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;class&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;x Axis&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;transform&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;translate(&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chart_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xAxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// y축을 생성한다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// margin.left만큼 우측으로 평행이동 시킨다&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;class&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;y Axis&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;transform&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;translate(&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;yAxis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 막대를 생성하기 위해서 data를 연결한다&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bars&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;svg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selectAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;.bar&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 새로 생성되는 부분(enter)에 대한 코드&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 막대의 x축 위치는 x_scale_group으로 생성되는 그룹 위치와 x_scale_bar로 생성되는 막대 위치를 더하고 margin.left를 더한다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 막대의 y축 위치(막대가 시작되는 좌표)는 일반 막대그래프와 마찬가지로 value값을 y_scale로 변형시키면 된다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// width의 값은 x_scale_bar.rangeBand()값을 그래도 사용한다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 막대의 높이는 y_scale(d.value)부터 시작해서 y축의 0 위치까지 와야 한다. &lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 따라서 막대가 시작되는 지점의 y좌표와 막대의 길이를 더하면 차트의 높이가 되어야 한다&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// y의 값이 y_scale(d.value) 이니까 height값은 chart_size.height - y_scale(d.value)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// sentiment에 해당하는 값에 따라서 막대의 색을 다르게 하기 위해 class 항목을 지정하고 해당하는 색상은 css에서 명시한다&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;bars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;rect&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; 
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
                &lt;span class=&quot;nx&quot;&gt;x_scale_group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
                &lt;span class=&quot;nx&quot;&gt;x_scale_bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sentiment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;y_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x_scale_bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rangeBand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chart_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y_scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;class&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; 
            &lt;span class=&quot;nx&quot;&gt;class_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;긍정&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;pos&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;부정&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;neg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;중립&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;neu&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;class_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sentiment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]});&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;chart-image&quot;&gt;Chart (image)&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/post_image/grouped_bar/grouped_bar04.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/d3/grouped-bar&quot;&gt;Grouped Bar chart&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on November 17, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[memoise in R]]></title>
  <link>http://lumiamitie.github.io/r/memoise</link>
  <id>http://lumiamitie.github.io/r/memoise</id>
  <published>2015-11-14T00:00:00+09:00</published>
  <updated>2015-11-14T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/note-and-pen.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;memoization&quot;&gt;Memoization&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;메모이제이션(memoization)&lt;/strong&gt;은 컴퓨터 프로그램이 동일한 계산을 반복해야 할 때, 
이전에 계산한 값을 메모리에 저장함으로써 동일한 계산의 반복 수행을 제거하여 
프로그램 실행 속도를 빠르게 하는 기술이다&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%A9%94%EB%AA%A8%EC%9D%B4%EC%A0%9C%EC%9D%B4%EC%85%98&quot;&gt;https://ko.wikipedia.org/wiki/메모이제이션&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;여기서는 memoise 패키지에 구현된 함수를 사용한다&lt;/p&gt;

&lt;p&gt;memoization 여부에 따른 성능 차이를 확인해보기 위해 쓸데없이 시간을 많이 잡아먹는 함수를 하나 만들어보기로 했다&lt;/p&gt;

&lt;p&gt;iris 데이터를 지정한 횟수만큼 중복시켜서 rbind를 반복시키는 함수를 만들고 시간을 측정했다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;i &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rbind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; new_df&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이러한 형태로 data.frame을 합치게 될 경우, 매번 df의 마지막 row를 찾고 합치고 하는 과정을 반복해야 하기 때문에 df의 row 수가 많아질 수록 시간이 오래 걸리게 된다. 실제 코드는 아래와 같다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# install.packages(&amp;#39;memoise&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;memoise&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;bind_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;stopifnot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;o&quot;&gt;%%&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  new_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;i &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    new_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rbind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;new_iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;new_iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bind_iris&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##   13.65    0.08   13.95
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;memoise&quot;&gt;memoise&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;memoise&lt;/code&gt; 함수를 사용하려면 memoise 함수에 원하는 함수를 인자로 넣고 새로운 함수를 생성하면 된다. 새로 만들어진 함수를 이용해서 값을 계산하면 memoise 함수는 &lt;strong&gt;인자에 새로운 값이 들어올 때만&lt;/strong&gt; 새로 계산하게 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;m_bind_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; memoise&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bind_iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;따라서 첫 번째 계산때는 시간이 오래 걸리는 반면에 두 번째 계산에서는 시간이 대폭 단축되는 것을 확인할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_bind_iris&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##   12.96    0.05   13.20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_bind_iris&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##       0       0       0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;하지만 새로운 input 값이 들어오면 전체를 다시 계산하기 때문에 다시 원래의 속도가 나온다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_bind_iris&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##    3.65    0.03    3.70
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://adv-r.had.co.nz/&quot;&gt;advanced R&lt;/a&gt; 페이지에 memoization 관련하여 실린 예제가 있다. 피보나치 수열을 재귀함수를 통해 계산하도록 구성했는데, 이렇게 동일한 input값이 지속적으로 등장할 수 있는 환경에서는 memoization이 효과를 발휘할 수 있다&lt;/p&gt;

&lt;p&gt;실제 내용은 아래 페이지에서 확인할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://adv-r.had.co.nz/Function-operators.html&quot;&gt;http://adv-r.had.co.nz/Function-operators.html&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;fib &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  fib&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; fib&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;fib&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##    5.29    0.00    5.39
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이제 이 함수에 memoization을 적용한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;m_fib &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; memoise&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  m_fib&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; m_fib&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_fib&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##    0.02    0.00    0.02
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_fib&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##       0       0       0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;기본적으로 함수 내부의 &lt;strong&gt;재귀 호출에 걸리는 시간이 큰 폭으로 줄어들기 때문에&lt;/strong&gt; 성능이 향상된다. 그리고 두 번째로 실행했을 때는 그 자체의 결과물이 캐싱되어 있기 때문에 더 빠르게 결과물을 확인할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;caching&quot;&gt;Caching&lt;/h2&gt;

&lt;p&gt;캐싱의 여부는 parameter의 이름이 아니라 값에 의해서 결정된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;a &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_bind_iris&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##    7.30    0.02    7.41
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_bind_iris&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##       0       0       0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;따라서 아래와 같은 경우에는 동일한 a 변수이지만 값이 변경되었기 때문에 새로 계산한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;a &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;450&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_bind_iris&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##    8.79    0.04    8.99
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;반면에 새로운 변수 b에 이전 a와 동일한 값을 넣게 되면 캐싱된 결과를 바로 가져오는 것을 확인할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;b &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_bind_iris&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;b&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##       0       0       0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;memoise()&lt;/code&gt; 함수는 &lt;strong&gt;default parameter&lt;/strong&gt;에 대한 정보를 가지고 있지 않다. 따라서 함수가 자동적으로 default parameter를 사용한 경우와 사용자가 default parameter와 동일한 값을 지정해 주는 상황을 서로 다른 input으로 간주한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;bind_iris2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; param &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;aaa&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;stopifnot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;o&quot;&gt;%%&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  new_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;i &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;n&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    new_iris &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rbind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;new_iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;new_iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

m_bind_iris2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; memoise&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;bind_iris2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이 함수에서는 param 인자의 기본값이 &amp;ldquo;aaa&amp;quot;이기 때문에 아래 두 함수는 결과적으로는 같은 함수다. 하지만 memoise 함수는 &lt;strong&gt;서로 다른 input&lt;/strong&gt;으로 보기 때문에 새로 계산하는 것을 확인할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_bind_iris2&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##    3.00    0.00    2.99
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;system.time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_bind_iris2&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; param &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;aaa&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    user  system elapsed 
##    3.31    0.00    3.36
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;함수 내부에 random한 값을 다루는 부분이 있을 경우에는 memoization의 사용을 주의해야 한다. input 값이 같으면 output이 같아지기 때문에 함수 안에 random한 값을 발생시켜야 하는 과정이 있다면 memoise를 적용한 이후에는 동일한 값이 출력된다. 따라서 이러한 경우에는 필요에 맞게 주의해서 사용할 필요가 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; runif&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 0.59122861 0.06253046 0.46490960 0.81359091 0.31473203
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;m_runif &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; memoise&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;runif&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; m_runif&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 0.6717948 0.6717948 0.6717948 0.6717948 0.6717948
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h2 id=&quot;forget&quot;&gt;forget&lt;/h2&gt;

&lt;p&gt;만약 memoise 해둔 함수를 제거해야 한다면 &lt;code&gt;forget()&lt;/code&gt; 함수를 이용한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;forget&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;m_fib&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] TRUE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/memoise&quot;&gt;memoise in R&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on November 14, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[dplyr advanced - Databases]]></title>
  <link>http://lumiamitie.github.io/r/dplyr-advanced-databases</link>
  <id>http://lumiamitie.github.io/r/dplyr-advanced-databases</id>
  <published>2015-10-31T00:00:00+09:00</published>
  <updated>2015-10-31T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/macphoto.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;databases&quot;&gt;Databases&lt;/h1&gt;

&lt;p&gt;dplyr은 data.frame과 같은 메모리 내의 데이터 뿐만 아니라 데이터베이스에 있는 자료를 가지고 작업을 할 수 있도록 도와주는 기능을 제공한다. 일반적인 작은 데이터라면 데이터베이스를 통해 R로 자료로 가져오는 과정이 오히려 번거롭겠지만, 데이터베이스에 저장된 데이터를 가져오거나, 엄청나게 많은 양의 데이터(메모리가 감당못할)를 가져와야 할 때에는 데이터베이스를 이용해야 한다.&lt;/p&gt;

&lt;p&gt;만약 데이터베이스에서 대용량의 데이터를 가져와야 한다면 테이블을 통째로 가지고 오기 보다는 필요한 항목으로 간추리고 내용을 요약하여 정리하게 된다. dplyr을 이런 과정을 더 간편하게 해 준다. 데이터베이스에서 원하는 데이터를 가져다가 R에서 작업하기 위해서는 SQL과 R 양쪽에서 머리를 쥐어짜게 만드는 경우가 많은데 dplyr은 SELECT에 한해서 R의 코드가 SQL로 변환되도록 도와준다&lt;/p&gt;

&lt;p&gt;현재 dplyr은 &lt;strong&gt;SQLite&lt;/strong&gt;, &lt;strong&gt;MySQL&lt;/strong&gt;, &lt;strong&gt;PostgreSQL&lt;/strong&gt;과 구글의 &lt;strong&gt;Bigquery&lt;/strong&gt;를 지원하고 있다. 여기서는 가장 간단하게 사용할 수 있는 &lt;strong&gt;SQLite&lt;/strong&gt;를 가지고 dplyr을 통해 데이터베이스에 접근하는 방법을 살펴보려고 한다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;우선 시작하기 전에 &lt;code&gt;RSQLite&lt;/code&gt; 패키지를 설치하고 dplyr을 불러오자&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# install.packages(&amp;#39;RSQLite&amp;#39;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;SQLite는 파일을 기반으로하는 데이터베이스이기 때문에 아래 코드와 같이 데이터베이스를 생성해주면 &lt;strong&gt;working directory&lt;/strong&gt; 안에 해당 이름으로 db가 생성된다. 처음 db를 만들 때는 &lt;code&gt;create = T&lt;/code&gt; 옵션을 넣어주고, 이후에 db에 접근할 때는 &lt;code&gt;create = F&lt;/code&gt; 또는 &lt;strong&gt;create 옵션 없이&lt;/strong&gt; 사용하면 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;sqlite_db &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; src_sqlite&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;sqlite_db.sqlite3&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; create &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;다른 database의 경우에도 각각의 함수들이 존재한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;src_mysql()&lt;/code&gt;, &lt;code&gt;src_postgres()&lt;/code&gt;, &lt;code&gt;src_bigquery()&lt;/code&gt; 의 함수를 통해 각 데이터베이스에 접근할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code&gt;sqlite_db&lt;/code&gt;에는 아직 아무런 데이터가 없다&lt;/p&gt;

&lt;p&gt;일단 가장 친숙한 iris 데이터를 db에 넣어보려고 한다. &lt;code&gt;copy_to()&lt;/code&gt; 함수는 local의 데이터를 remote source의 db에서 사용할 수 있도록 데이터를 복사한다. &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;copy_to(db_connection, local_data.frame)&lt;/code&gt;의 형태로 사용한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;name&lt;/code&gt;옵션을 텍스트를 지정하면 테이블을 해당 이름으로 db에 저장한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;temporary = TRUE&lt;/code&gt; 일 경우 테이블을 임시 테이블로 저장한다. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;copy_to&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sqlite_db&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; iris&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; temporary &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: sqlite 3.8.6 [sqlite_db.sqlite3]
## From: iris [150 x 5]
## 
##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
##           (dbl)       (dbl)        (dbl)       (dbl)   (chr)
## 1           5.1         3.5          1.4         0.2  setosa
## 2           4.9         3.0          1.4         0.2  setosa
## 3           4.7         3.2          1.3         0.2  setosa
## 4           4.6         3.1          1.5         0.2  setosa
## 5           5.0         3.6          1.4         0.2  setosa
## 6           5.4         3.9          1.7         0.4  setosa
## 7           4.6         3.4          1.4         0.3  setosa
## 8           5.0         3.4          1.5         0.2  setosa
## 9           4.4         2.9          1.4         0.2  setosa
## 10          4.9         3.1          1.5         0.1  setosa
## ..          ...         ...          ...         ...     ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;이제 src_tbls 함수를 통해 db를 살펴보면 iris 데이터가 테이블 형태로 db에 들어간 것을 확인할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;src_tbls&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sqlite_db&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;iris&amp;quot;         &amp;quot;sqlite_stat1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;db에서 테이블을 가져오려면 tbl함수에서 source를 db connection으로 지정하고 table 명을 지정해주면 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;tbl&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sqlite_db&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;iris&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: sqlite 3.8.6 [sqlite_db.sqlite3]
## From: iris [150 x 5]
## 
##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
##           (dbl)       (dbl)        (dbl)       (dbl)   (chr)
## 1           5.1         3.5          1.4         0.2  setosa
## 2           4.9         3.0          1.4         0.2  setosa
## 3           4.7         3.2          1.3         0.2  setosa
## 4           4.6         3.1          1.5         0.2  setosa
## 5           5.0         3.6          1.4         0.2  setosa
## 6           5.4         3.9          1.7         0.4  setosa
## 7           4.6         3.4          1.4         0.3  setosa
## 8           5.0         3.4          1.5         0.2  setosa
## 9           4.4         2.9          1.4         0.2  setosa
## 10          4.9         3.1          1.5         0.1  setosa
## ..          ...         ...          ...         ...     ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;쿼리를 직접 입력해서 데이터를 불러올 수도 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;tbl&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sqlite_db&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sql&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;SELECT * FROM iris&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: sqlite 3.8.6 [sqlite_db.sqlite3]
## From: &amp;lt;derived table&amp;gt; [?? x 5]
## 
##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
##           (dbl)       (dbl)        (dbl)       (dbl)   (chr)
## 1           5.1         3.5          1.4         0.2  setosa
## 2           4.9         3.0          1.4         0.2  setosa
## 3           4.7         3.2          1.3         0.2  setosa
## 4           4.6         3.1          1.5         0.2  setosa
## 5           5.0         3.6          1.4         0.2  setosa
## 6           5.4         3.9          1.7         0.4  setosa
## 7           4.6         3.4          1.4         0.3  setosa
## 8           5.0         3.4          1.5         0.2  setosa
## 9           4.4         2.9          1.4         0.2  setosa
## 10          4.9         3.1          1.5         0.1  setosa
## ..          ...         ...          ...         ...     ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;db에서 데이터를 불러오면 이후에는 local data를 다루는 것 처럼 작업할 수 있다
data.frame에 사용하는 것처럼 dplyr의 기본적인 함수들인 &lt;code&gt;select&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;mutate&lt;/code&gt;, &lt;code&gt;summarise&lt;/code&gt;, &lt;code&gt;arrange&lt;/code&gt;를 적용할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_db &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; tbl&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sqlite_db&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;iris&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
iris_db &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: sqlite 3.8.6 [sqlite_db.sqlite3]
## From: iris [12 x 5]
## Filter: Sepal.Length &amp;gt; 7 
## 
##    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species
##           (dbl)       (dbl)        (dbl)       (dbl)     (chr)
## 1           7.1         3.0          5.9         2.1 virginica
## 2           7.6         3.0          6.6         2.1 virginica
## 3           7.3         2.9          6.3         1.8 virginica
## 4           7.2         3.6          6.1         2.5 virginica
## 5           7.7         3.8          6.7         2.2 virginica
## 6           7.7         2.6          6.9         2.3 virginica
## 7           7.7         2.8          6.7         2.0 virginica
## 8           7.2         3.2          6.0         1.8 virginica
## 9           7.2         3.0          5.8         1.6 virginica
## 10          7.4         2.8          6.1         1.9 virginica
## 11          7.9         3.8          6.4         2.0 virginica
## 12          7.7         3.0          6.1         2.3 virginica
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# Source: sqlite 3.8.6 [sqlite_db.sqlite3]
# From: iris [12 x 5]
# Filter: Sepal.Length &amp;gt; 7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;source를 보면 &lt;code&gt;as.tbl(iris)&lt;/code&gt;가 &lt;code&gt;Source: local data frame [150 x 5]&lt;/code&gt; 을 보여주는 것과는 다르게 sqlite를 source로 하는 것을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;laziness&quot;&gt;Laziness&lt;/h2&gt;

&lt;p&gt;dplyr이 데이터베이스를 가지고 작업할 때에는 최대한 느긋한 계산을 통해 데이터를 처리하려고 한다&lt;/p&gt;

&lt;p&gt;다시 말하자면 사용자가 직접 요청하기 전에는 전체 데이터를 가지고 오지 않는다. 작업을 할 때에도 최대한 끝까지 작업을 미루다가 사용자가 최종적으로 요구하는 항목들만 가지고 연산해서 데이터를 가져온다. 아래 코드를 예로 들면 &lt;code&gt;iris_fltd&lt;/code&gt; 라는 변수를 생성할 때 까지도 db 작업을 하지 않다가 &lt;code&gt;iris_fltd&lt;/code&gt;를 진짜 실행시키는 경우에만 db에 연결하여 데이터 작업을 하게 된다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;필요한 경우에는 특정 함수를 사용해서 강제로 연산을 하도록 만들 수도 있다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;작업한 내용을 local 환경으로 가져오고 싶을 때는 &lt;code&gt;collect()&lt;/code&gt;함수를 사용한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;collect()&lt;/code&gt; 함수는 쿼리를 실행하고 그 결과물을 R로 반환한다(&lt;code&gt;tbl_df&lt;/code&gt; 형태로)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_fltd &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; iris_db &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

collect&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris_fltd&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [12 x 5]
## 
##    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species
##           (dbl)       (dbl)        (dbl)       (dbl)     (chr)
## 1           7.1         3.0          5.9         2.1 virginica
## 2           7.6         3.0          6.6         2.1 virginica
## 3           7.3         2.9          6.3         1.8 virginica
## 4           7.2         3.6          6.1         2.5 virginica
## 5           7.7         3.8          6.7         2.2 virginica
## 6           7.7         2.6          6.9         2.3 virginica
## 7           7.7         2.8          6.7         2.0 virginica
## 8           7.2         3.2          6.0         1.8 virginica
## 9           7.2         3.0          5.8         1.6 virginica
## 10          7.4         2.8          6.1         1.9 virginica
## 11          7.9         3.8          6.4         2.0 virginica
## 12          7.7         3.0          6.1         2.3 virginica
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;source: local data frame [12 x 5]&lt;/code&gt;로 source가 변경된 것을 확인할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;compute()&lt;/code&gt; 함수를 사용하면 쿼리를 실행하고 그 결과물을 db의 임시 테이블에 저장한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;compute&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris_fltd&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: sqlite 3.8.6 [sqlite_db.sqlite3]
## From: vdtgepxwho [12 x 5]
## 
##    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species
##           (dbl)       (dbl)        (dbl)       (dbl)     (chr)
## 1           7.1         3.0          5.9         2.1 virginica
## 2           7.6         3.0          6.6         2.1 virginica
## 3           7.3         2.9          6.3         1.8 virginica
## 4           7.2         3.6          6.1         2.5 virginica
## 5           7.7         3.8          6.7         2.2 virginica
## 6           7.7         2.6          6.9         2.3 virginica
## 7           7.7         2.8          6.7         2.0 virginica
## 8           7.2         3.2          6.0         1.8 virginica
## 9           7.2         3.0          5.8         1.6 virginica
## 10          7.4         2.8          6.1         1.9 virginica
## 11          7.9         3.8          6.4         2.0 virginica
## 12          7.7         3.0          6.1         2.3 virginica
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;테이블 목록을 확인하면 임시 테이블이 생성된 것을 볼 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;src_tbls&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sqlite_db&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;iris&amp;quot;         &amp;quot;sqlite_stat1&amp;quot; &amp;quot;vdtgepxwho&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code&gt;dplyr&lt;/code&gt;은 db 작업을 할 때, 실수로 무거운 연산을 수행하는 것을 방지하기 위해서 몇 가지 제한을 둔다&lt;/p&gt;

&lt;p&gt;우선, &lt;code&gt;nrow()&lt;/code&gt;의 결과는 무조건 NA로 처리한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;nrow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;tbl&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sqlite_db&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; sql&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;SELECT * FROM iris&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] NA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;연산을 할 때, 실제로 계산이 다 끝나기 전에는 row의 개수가 얼마나 될지 파악하기 힘들기 때문에 &lt;code&gt;nrow()&lt;/code&gt;의 결과는 NA로 반환한다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;또, tbl의 결과물은 첫 10개만 보여준다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그리고 tail()함수를 사용할 수 없다.마찬가지로 전체 쿼리의 결과물을 보기 전에는 마지막 row를 확인할 수 없다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# tail(tbl(sqlite_db, sql(&amp;#39;SELECT * FROM iris&amp;#39;)))
# &amp;gt; Error: tail is not supported by sql sources
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;code&gt;query&lt;/code&gt;항목에서는 데이터에 대한 작업이 sql로 어떻게 변환되었는지 확인할 수 있다&lt;/p&gt;

&lt;p&gt;또는 &lt;code&gt;show_query()&lt;/code&gt;함수를 통해 확인할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_fltd&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;query
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## &amp;lt;Query&amp;gt; SELECT &amp;quot;Sepal.Length&amp;quot;, &amp;quot;Sepal.Width&amp;quot;, &amp;quot;Petal.Length&amp;quot;, &amp;quot;Petal.Width&amp;quot;, &amp;quot;Species&amp;quot;
## FROM &amp;quot;iris&amp;quot;
## WHERE &amp;quot;Sepal.Length&amp;quot; &amp;gt; 7.0
## &amp;lt;SQLiteConnection&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;show_query&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris_fltd&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## &amp;lt;SQL&amp;gt;
## SELECT &amp;quot;Sepal.Length&amp;quot;, &amp;quot;Sepal.Width&amp;quot;, &amp;quot;Petal.Length&amp;quot;, &amp;quot;Petal.Width&amp;quot;, &amp;quot;Species&amp;quot;
## FROM &amp;quot;iris&amp;quot;
## WHERE &amp;quot;Sepal.Length&amp;quot; &amp;gt; 7.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;group-operation&quot;&gt;Group Operation&lt;/h2&gt;

&lt;p&gt;SQLite는 window function에 대한 지원이 취약하다. 따라서 group을 지정한 상태에서 mutate나 filter에 대한 결과물이 생각과는 다르게 나올 수 있다는 점을 염두해야 한다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;로컬에 있는 iris에서 Species별로 Sepal.Length의 평균을 계산해서 새로운 열에 데이터를 저장하려고 한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  group_by&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mean_SL &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [150 x 6]
## Groups: Species [3]
## 
##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species mean_SL
##           (dbl)       (dbl)        (dbl)       (dbl)  (fctr)   (dbl)
## 1           5.1         3.5          1.4         0.2  setosa   5.006
## 2           4.9         3.0          1.4         0.2  setosa   5.006
## 3           4.7         3.2          1.3         0.2  setosa   5.006
## 4           4.6         3.1          1.5         0.2  setosa   5.006
## 5           5.0         3.6          1.4         0.2  setosa   5.006
## 6           5.4         3.9          1.7         0.4  setosa   5.006
## 7           4.6         3.4          1.4         0.3  setosa   5.006
## 8           5.0         3.4          1.5         0.2  setosa   5.006
## 9           4.4         2.9          1.4         0.2  setosa   5.006
## 10          4.9         3.1          1.5         0.1  setosa   5.006
## ..          ...         ...          ...         ...     ...     ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;iris&lt;/code&gt;와 &lt;code&gt;iris_db&lt;/code&gt;의 데이터는 동일하지만 &lt;code&gt;group_by&lt;/code&gt;를 통한 &lt;code&gt;mutate&lt;/code&gt;연산을 &lt;em&gt;SQLite&lt;/em&gt;*가 지원하지 않기 때문에&lt;/p&gt;

&lt;p&gt;위의 코드와는 전혀 다른 결과물이 나오게 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_db &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  group_by&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mean_SL &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: sqlite 3.8.6 [sqlite_db.sqlite3]
## From: iris [1 x 6]
## Grouped by: Species 
## 
##   Sepal.Length Sepal.Width Petal.Length Petal.Width   Species  mean_SL
##          (dbl)       (dbl)        (dbl)       (dbl)     (chr)    (dbl)
## 1          5.9           3          5.1         1.8 virginica 5.843333
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;반면에 summarise 함수는 정상적으로 작동한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  group_by&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  summarise&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mean_SL &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [3 x 2]
## 
##      Species mean_SL
##       (fctr)   (dbl)
## 1     setosa   5.006
## 2 versicolor   5.936
## 3  virginica   6.588
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_db &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  group_by&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  summarise&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mean_SL &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: sqlite 3.8.6 [sqlite_db.sqlite3]
## From: &amp;lt;derived table&amp;gt; [?? x 2]
## 
##       Species mean_SL
##         (chr)   (dbl)
## 1      setosa   5.006
## 2  versicolor   5.936
## 3   virginica   6.588
## ..        ...     ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;other-databases&quot;&gt;Other Databases&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Mysql&lt;/code&gt;의 경우에는 &lt;code&gt;RMySQL&lt;/code&gt; 패키지를 설치하고 나면 &lt;code&gt;src_mysql()&lt;/code&gt;함수를 통해 접근할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;db와의 connection을 생성하고 나면 이후의 사용 방법은 대부분 비슷하다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;mysql_db= src_mysql(dbname = &amp;quot;dbname&amp;quot;, 
                    host = &amp;quot;000.000.000.00&amp;quot;, 
                    user = &amp;#39;user&amp;#39;, 
                    password = &amp;#39;password&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;의 형태로 connection을 생성할 수 있다. 다만 윈도우에서는 &lt;code&gt;RMySQL&lt;/code&gt; 설치 자체가 까다로울 수 있으니 주의해야 한다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;dplyr의 데이터베이스 작업에 대해서 더 자세한 내용을 살펴보고 싶다면 &lt;/p&gt;

&lt;p&gt;dplyr을 불러온 후에 &lt;code&gt;vignette(&amp;#39;databases&amp;#39;)&lt;/code&gt; 를 통해 dplyr의 database 관련 작업에 대한 문서를 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;또는 &lt;a href=&quot;https://cran.r-project.org/web/packages/dplyr/vignettes/databases.html&quot;&gt;https://cran.r-project.org/web/packages/dplyr/vignettes/databases.html&lt;/a&gt; 에서 문서를 볼 수 있다&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/dplyr-advanced-databases&quot;&gt;dplyr advanced - Databases&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on October 31, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Tidy data]]></title>
  <link>http://lumiamitie.github.io/r/tidy-data</link>
  <id>http://lumiamitie.github.io/r/tidy-data</id>
  <published>2015-10-26T00:00:00+09:00</published>
  <updated>2015-10-26T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;../../images/taking-notes.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;tidy-data&quot;&gt;Tidy data&lt;/h1&gt;

&lt;p&gt;많은 패키지들, 특히 ggplot2는 특정한 형태로 정리된 데이터를 요구한다. 처음에 익숙하지 않을 때는 함수가 요구하는 데이터의 형태를 맞추기도 버거웠지만 차츰 익숙해지면서 깔끔하게 정리된 데이터의 중요성을 깨닫게 된다. 깔끔한 데이터를 만드는 과정 중에서 wide format과 long format 사이의 변환은 방법을 모르면 헤매거나 크게 돌아갈 수도 있기 때문에 여기서 가장 대표적인 패키지, &lt;code&gt;tidyr&lt;/code&gt;과 &lt;code&gt;reshape2&lt;/code&gt;의 기본적인 사용법을 정리해보려고 한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;tidy data&lt;/strong&gt;에 대한 내용은 &lt;a href=&quot;https://cran.r-project.org/web/packages/tidyr/vignettes/tidy-data.html&quot;&gt;https://cran.r-project.org/web/packages/tidyr/vignettes/tidy-data.html&lt;/a&gt;를 참고하거나 R에서 &lt;code&gt;tidyr&lt;/code&gt;을 설치하고 &lt;code&gt;vignette(&amp;#39;tidy-data&amp;#39;)&lt;/code&gt;명령어로 문서를 볼 수 있다. &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;tidyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;reshape2&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;데이터를 살펴보면 table의 형태를 가진 자료가 많다. 열과 행에 각각 변수가 들어가며, 찾고자 하는 열과 행에 기록된 값을 찾는다.&lt;/p&gt;

&lt;p&gt;이런 형태의 데이터는 contingency table, wide-format data 등 여러 가지 이름을 가진다&lt;/p&gt;

&lt;p&gt;엑셀을 사용한다면 데이터블 pivot table로 정리했을 때 이러한 형태로 데이터를 정리할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;WorldPhones
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##      N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer
## 1951  45939  21574 2876   1815    1646     89      555
## 1956  60423  29990 4708   2568    2366   1411      733
## 1957  64721  32510 5230   2695    2526   1546      773
## 1958  68484  35218 6662   2845    2691   1663      836
## 1959  71799  37598 6856   3000    2868   1769      911
## 1960  76036  40341 8220   3145    3054   1905     1008
## 1961  79831  43173 9053   3338    3224   2005     1076
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위 데이터에서 1958년도 Asia의 값을 확인하려면 4번째 행, 3번째 열의 값인 6662를 보면 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;WorldPhones&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#로 바로 확인할 수 있다&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] 6662
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;WorldPhones&lt;/code&gt; 데이터는 7개의 행과 7개의 열을 가지고 있다.&lt;/p&gt;

&lt;p&gt;다시 말하자면 행에 해당하는 변수(연도)가 7가지, 열에 해당하는 변수(지역)가 7가지인 셈이다.&lt;/p&gt;

&lt;p&gt;또, 같은 데이터를 이러한 형태로도 표현할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;area &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;dimnames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;WorldPhones&lt;span class=&quot;p&quot;&gt;)[[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt; 
            &lt;span class=&quot;kp&quot;&gt;as.data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;WorldPhones&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; row.names&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##       area X1951 X1956 X1957 X1958 X1959 X1960 X1961
## 1   N.Amer 45939 60423 64721 68484 71799 76036 79831
## 2   Europe 21574 29990 32510 35218 37598 40341 43173
## 3     Asia  2876  4708  5230  6662  6856  8220  9053
## 4   S.Amer  1815  2568  2695  2845  3000  3145  3338
## 5  Oceania  1646  2366  2526  2691  2868  3054  3224
## 6   Africa    89  1411  1546  1663  1769  1905  2005
## 7 Mid.Amer   555   733   773   836   911  1008  1076
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;위 자료들은 모두 동일한 데이터를 표현하고 있지만 그 형태는 각기 다르다. &lt;/p&gt;

&lt;p&gt;그냥 단순하게 행과 열을 구분하는 것 만으로는 우리가 표현하고자 하는 데이터를 명확하게 표현하기 힘들다&lt;/p&gt;

&lt;p&gt;따라서 데이터가 생긴 형태뿐만 아니라 그 안에 담긴 의미를 적절하게 표현해줄 수 있는 방식을 정의할 필요가 있다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;tidy-data&quot;&gt;Tidy data&lt;/h2&gt;

&lt;p&gt;우리가 어떤 Dataset을 가지고 있다면 이 데이터가 가지고 있는 기본적인 속성은 다음과 같다&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;기본적으로 Dataset은 숫자 또는 문자열 등의 값(value)이 모여서 구성된다. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;모든 값은 하나의 변수(variable)와 하나의 관측치(observation)에 속한다. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;변수는 같은 속성의 값을 측정한 결과를 말하고, 관측치는 관측대상 하나가 가지는 모든 속성값을 의미한다&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;WorldPhones_df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;year &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;row.names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;WorldPhones&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                            &lt;span class=&quot;kp&quot;&gt;as.data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;WorldPhones&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; row.names &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;WorldPhones_df&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   year N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer
## 1 1951  45939  21574 2876   1815    1646     89      555
## 2 1956  60423  29990 4708   2568    2366   1411      733
## 3 1957  64721  32510 5230   2695    2526   1546      773
## 4 1958  68484  35218 6662   2845    2691   1663      836
## 5 1959  71799  37598 6856   3000    2868   1769      911
## 6 1960  76036  40341 8220   3145    3054   1905     1008
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;위에서 설명한 데이터를 좀 더 깔끔하게 구성하기 위해 다음과 같은 원칙을 정했다&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;각 변수는 하나의 열을 구성하고, 각 관측치는 하나의 행을 구성한다&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;하나의 테이블은 동일한 속성의 관측대상들로 구성된다&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이러한 원칙 하에 정리된 데이터를 tidy data라고 한다&lt;/p&gt;

&lt;p&gt;WorldPhones 데이터를 깔끔하게 정리해본다면 다음과 같이 할 수 있을 것이다&lt;/p&gt;

&lt;p&gt;일단 함수보다는 결과물에 형태를 살펴보자&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;melt&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;WorldPhones&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    Var1     Var2 value
## 1  1951   N.Amer 45939
## 2  1956   N.Amer 60423
## 3  1957   N.Amer 64721
## 4  1958   N.Amer 68484
## 5  1959   N.Amer 71799
## 6  1960   N.Amer 76036
## 7  1961   N.Amer 79831
## 8  1951   Europe 21574
## 9  1956   Europe 29990
## 10 1957   Europe 32510
## 11 1958   Europe 35218
## 12 1959   Europe 37598
## 13 1960   Europe 40341
## 14 1961   Europe 43173
## 15 1951     Asia  2876
## 16 1956     Asia  4708
## 17 1957     Asia  5230
## 18 1958     Asia  6662
## 19 1959     Asia  6856
## 20 1960     Asia  8220
## 21 1961     Asia  9053
## 22 1951   S.Amer  1815
## 23 1956   S.Amer  2568
## 24 1957   S.Amer  2695
## 25 1958   S.Amer  2845
## 26 1959   S.Amer  3000
## 27 1960   S.Amer  3145
## 28 1961   S.Amer  3338
## 29 1951  Oceania  1646
## 30 1956  Oceania  2366
## 31 1957  Oceania  2526
## 32 1958  Oceania  2691
## 33 1959  Oceania  2868
## 34 1960  Oceania  3054
## 35 1961  Oceania  3224
## 36 1951   Africa    89
## 37 1956   Africa  1411
## 38 1957   Africa  1546
## 39 1958   Africa  1663
## 40 1959   Africa  1769
## 41 1960   Africa  1905
## 42 1961   Africa  2005
## 43 1951 Mid.Amer   555
## 44 1956 Mid.Amer   733
## 45 1957 Mid.Amer   773
## 46 1958 Mid.Amer   836
## 47 1959 Mid.Amer   911
## 48 1960 Mid.Amer  1008
## 49 1961 Mid.Amer  1076
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위와 같이 정리하면 변수 &lt;code&gt;Var1&lt;/code&gt;에는 연도가, &lt;code&gt;Var2&lt;/code&gt;에는 지역이 들어가고 &lt;code&gt;value&lt;/code&gt; 열에는 값이 들어간다&lt;/p&gt;

&lt;p&gt;또, 첫 번째 행에는 1951년도 북아메리카의 전화기 수, 10 번째 행에는 1957년도 유럽의 전화기 수가 정리되어 있다. &lt;/p&gt;

&lt;p&gt;원래의 형태에 비해서는 분명 양이 많아졌지만 이와 같은 형태로 여러 가지 장점이 있다.&lt;/p&gt;

&lt;p&gt;우선 변수를 자유롭게 추가할 수 있다. 기존의 &lt;code&gt;WorldPhone&lt;/code&gt;과 같은 Wide format의 데이터는 행과 열에 변수가 하나씩 들어간다. 때문에 두 개 변수에 대해서는 더 간단하고 깔끔하게 정리할 수 있지만 추가적인 변수를 표현하기에는 힘들다. 반면에 long format으로 정리한 경우에는 그냥 열을 하나 더 만들면 변수를 추가할 수 있다&lt;/p&gt;

&lt;p&gt;두 번째로는 변수를 열 하나로 관리하기 때문에 데이터를 더 깔끔하게 처리할 수 있다. 하나의 변수는 같은 속성을 공유하게 되는데 같은 변수라면 같은 열에 배치되는 이러한 방식은 동일한 속성의 값을 같은 방식으로 처리할 수 있게 해준다. 이렇게 데이터가 정리된 경우 dplyr의 mutate함수를 이용하면 열 단위로 데이터를 처리할 수 있게된다. 또한 ggplot2같은 패키지에서는 변수와 그래프의 에스테틱을 맵핑시키는 과정에서 이러한 tidy data의 강점을 최대한 활용한다. 또, formula를 사용하게 되는 경우라면 하나의 변수가 하나의 열을 구성하는 것이 필수적이다&lt;/p&gt;

&lt;p&gt;세 번째로는 데이터 구조가 표준화된다는 점이 있다. 어떤 함수가 tidy data를 요구한다는 것을 알면 우리는 해당 데이터를 data.frame으로 구성해서 각 변수가 각각의 열을 구성하도록 하면 된다. 그리고 이렇게 tidy data를 한 번 구성하고 나면 tidy data를 사용하는 다른 패키지 및 함수에 바로 적용할 수도 있게 된다. ggplot2에서는 이러한 성질을 이용해서 다양한 시각화를 통일된 문법으로 시도할 수 있도록 기능을 지원한다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br / &gt;&lt;/p&gt;

&lt;h2 id=&quot;tidying-messy-datasets&quot;&gt;Tidying messy datasets&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;tidy-data&lt;/code&gt; 문서를 보면 지저분한 데이터의 대표적인 사례로 다섯 가지 경우를 들고 있다&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;열 이름에 변수 이름이 아니라 값이 들어가있는 경우&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;하나의 열에 여러 개의 변수가 들어가있는 경우&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;변수가 행, 열 모두에 들어간 경우&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;하나의 테이블에 여러 가지 종류의 관측대상이 포함된 경우&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;하나의 관측 대상이 여러 개의 테이블에 포함된 경우&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;각각의 경우에 대한 설명은 vignette에서 확인할 수 있으니 여기에서는 넘어가려고 한다. 결국 우리가 원하는 것은 지저분한 데이터를 단정하게 만드는 것이다. 글의 초반에 나와있는 문구처럼 지저분한 데이터는 그 종류를 여러가지로 나눠볼 수 있겠지만 단정하게 만들면 데이터의 형태가 비슷한 형태로 종합된다&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;reshape2&quot;&gt;reshape2&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;tidyr&lt;/code&gt;보다 이전에 등장하여 많이 쓰였던 패키지이다. &lt;code&gt;tidyr&lt;/code&gt;패키지가 data.frame에 특화되어있기 때문에 data.frame에 대한 작업이 아니라면 여전히 reshape2 패키지를 사용하게 된다&lt;/p&gt;

&lt;p&gt;기본적으로는 &lt;code&gt;melt&lt;/code&gt;와 &lt;code&gt;cast&lt;/code&gt;라는 두 가지 함수로 구성된다. &lt;code&gt;melt&lt;/code&gt;는 messy data(또는 wide format)를 tidy한 형태(또는 long format)로 변형시켜준다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cast&lt;/code&gt;는 tidy한 형태의 데이터를 contingency table이나 엑셀의 피벗테이블처럼 행과 열에 특정 변수를 지정하여 데이터를 요약해준다. 결과물의 형태에 따라 &lt;code&gt;acast&lt;/code&gt;와 &lt;code&gt;dcast&lt;/code&gt;로 구분된다. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;dcast&lt;/code&gt;는 data.frame의 형태로 결과물을 내보내고, &lt;code&gt;acast&lt;/code&gt;는 vector / matrix / array의 형태로 결과물을 만들어낸다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;phone_melt &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; melt&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;WorldPhones&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; value.name &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;phone_melt&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Var1   Var2 number
## 1 1951 N.Amer  45939
## 2 1956 N.Amer  60423
## 3 1957 N.Amer  64721
## 4 1958 N.Amer  68484
## 5 1959 N.Amer  71799
## 6 1960 N.Amer  76036
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dcast&lt;/code&gt;는 formula 형태로 row와 col에 들어갈 변수를 지정할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;y~x&lt;/strong&gt;의 형태로 사용하기 때문에 row에 들어갈 변수는 x에, col에 들어갈 변수는 y에 지정한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;value.var&lt;/code&gt;에는 value값으로 들어갈 변수를 지정할 수 있다. &lt;/p&gt;

&lt;p&gt;지정하지 않으면 적당한 변수를 넣지만 경고메세지가 발생한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;dcast&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;phone_melt&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Var1&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;Var2&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; value.var &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Var1 N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer
## 1 1951  45939  21574 2876   1815    1646     89      555
## 2 1956  60423  29990 4708   2568    2366   1411      733
## 3 1957  64721  32510 5230   2695    2526   1546      773
## 4 1958  68484  35218 6662   2845    2691   1663      836
## 5 1959  71799  37598 6856   3000    2868   1769      911
## 6 1960  76036  40341 8220   3145    3054   1905     1008
## 7 1961  79831  43173 9053   3338    3224   2005     1076
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;같은 내용을 &lt;code&gt;acast&lt;/code&gt;로 실행하면 matrix로 데이터가 출력된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;acast&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;phone_melt&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Var1&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;Var2&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; value.var &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##      N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer
## 1951  45939  21574 2876   1815    1646     89      555
## 1956  60423  29990 4708   2568    2366   1411      733
## 1957  64721  32510 5230   2695    2526   1546      773
## 1958  68484  35218 6662   2845    2691   1663      836
## 1959  71799  37598 6856   3000    2868   1769      911
## 1960  76036  40341 8220   3145    3054   1905     1008
## 1961  79831  43173 9053   3338    3224   2005     1076
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# matrix&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;acast&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;phone_melt&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Var1&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;Var2&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; value.var &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;matrix&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;reshape2가 tidyr과 다른 점은 matrix에 대해서도 바로 적용할 수 있다는 것이다&lt;/p&gt;

&lt;p&gt;matrix형태의 데이터를 이용해 ggplot2로 그래프를 그린다고 하면 reshape2를 사용해 data.frame으로 변경하면 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;str&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;volcano&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##  num [1:87, 1:61] 100 101 102 103 104 105 105 106 107 108 ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;volcano_melt &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; melt&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;volcano&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;volcano_melt&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Var1 Var2 value
## 1    1    1   100
## 2    2    1   101
## 3    3    1   102
## 4    4    1   103
## 5    5    1   104
## 6    6    1   105
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;tidyr&quot;&gt;tidyr&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;tidyr&lt;/code&gt; 패키지는 data.frame에만 적용할 수 있는 패키지이다. pipe 연산자(%&amp;gt;%)를 이용한 작업을 쉽게 할 수 있도록 구성되어있다. pipe에 대한 자세한 내용은 &lt;a href=&quot;http://lumiamitie.github.io/r/magrittr/&quot;&gt;이 곳&lt;/a&gt; 에서 확인할 수 있다&lt;/p&gt;

&lt;p&gt;위에서 만들었던 &lt;code&gt;WorldPhones_df&lt;/code&gt; 를 tidy한 형태로 변형시키려고 한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;WorldPhones_df
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   year N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer
## 1 1951  45939  21574 2876   1815    1646     89      555
## 2 1956  60423  29990 4708   2568    2366   1411      733
## 3 1957  64721  32510 5230   2695    2526   1546      773
## 4 1958  68484  35218 6662   2845    2691   1663      836
## 5 1959  71799  37598 6856   3000    2868   1769      911
## 6 1960  76036  40341 8220   3145    3054   1905     1008
## 7 1961  79831  43173 9053   3338    3224   2005     1076
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gather&lt;/code&gt;는 reshape2의 melt와 비슷한 기능을 한다. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;gather&lt;/code&gt;함수는 기본적으로 &lt;code&gt;gather(data, key, value, column_list)&lt;/code&gt;로 구성된다. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;data&lt;/code&gt;는 말 그대로 대상이 되는 data.frame을 의미하고 &lt;code&gt;key&lt;/code&gt;는 key column의 이름, &lt;code&gt;value&lt;/code&gt;는 value column의 이름을 입력한다. &lt;code&gt;column_list&lt;/code&gt;에는 key와 value로 구분할 열의 이름들을 지정하면 된다. &lt;code&gt;dplyr&lt;/code&gt;의 &lt;code&gt;select&lt;/code&gt; 항목에서 사용할 수 있는 열 선택 방법과 동일하게 사용할 수 있다. N.Amer 부터 Mid.Amer까지의 열을 선택할 것이니 &lt;code&gt;N.Amer:Mid.Amer&lt;/code&gt;로 지정하면 된다&lt;/p&gt;

&lt;p&gt;이 중에서 첫 번째 열은 year는 놔두고, N.Amer부터 Mid.Amer까지를 key와 value로 분리시킨다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;key column&lt;/strong&gt;의 이름은 &lt;code&gt;area&lt;/code&gt;, &lt;strong&gt;value column&lt;/strong&gt;의 이름은 &lt;code&gt;number&lt;/code&gt;로 지정한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;phone_gather &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; gather&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;WorldPhones_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; area&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; number&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; N.Amer&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;Mid.Amer&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;phone_gather&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   year   area number
## 1 1951 N.Amer  45939
## 2 1956 N.Amer  60423
## 3 1957 N.Amer  64721
## 4 1958 N.Amer  68484
## 5 1959 N.Amer  71799
## 6 1960 N.Amer  76036
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;spread&lt;/code&gt; 함수는 reshape2의 &lt;code&gt;cast&lt;/code&gt;계열 함수와 비슷한 기능을 한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;spread(data, key, value)&lt;/code&gt;의 형태로 사용되는데 열별로 정리하려고하는 변수를 key에 지정하고, 값으로 정리해야하는 변수는 value에 넣는다. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;spread&lt;/code&gt;함수를 이용해서 &lt;code&gt;gather&lt;/code&gt;를 사용하기 전의 원래 형태로 돌리려면 다음과 같이 할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;spread&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;phone_gather&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; area&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; number&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   year N.Amer Europe Asia S.Amer Oceania Africa Mid.Amer
## 1 1951  45939  21574 2876   1815    1646     89      555
## 2 1956  60423  29990 4708   2568    2366   1411      733
## 3 1957  64721  32510 5230   2695    2526   1546      773
## 4 1958  68484  35218 6662   2845    2691   1663      836
## 5 1959  71799  37598 6856   3000    2868   1769      911
## 6 1960  76036  40341 8220   3145    3054   1905     1008
## 7 1961  79831  43173 9053   3338    3224   2005     1076
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;만약 NA값이 발생할 경우 &lt;code&gt;fill&lt;/code&gt; 옵션을 통해서 NA값을 임의의 값으로 채워넣을 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;na_sample &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; phone_gather &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; sample_n&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;아래와 같이 NA가 잔뜩 발생하는 경우&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;spread&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;na_sample&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; area&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; number&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   year N.Amer Europe Asia S.Amer Oceania
## 1 1951  45939     NA 2876   1815      NA
## 2 1957     NA  32510   NA     NA      NA
## 3 1958  68484  35218   NA     NA      NA
## 4 1959     NA  37598 6856     NA      NA
## 5 1961  79831     NA   NA     NA    3224
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;fill&lt;/code&gt; 옵션에 0을 지정하면 NA값 대신에 0으로 빈칸을 채운다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;spread&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;na_sample&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; area&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; number&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; fill &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   year N.Amer Europe Asia S.Amer Oceania
## 1 1951  45939      0 2876   1815       0
## 2 1957      0  32510    0      0       0
## 3 1958  68484  35218    0      0       0
## 4 1959      0  37598 6856      0       0
## 5 1961  79831      0    0      0    3224
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;좀 더 상세한 NA처리를 위해서는 &lt;code&gt;replace_na&lt;/code&gt;와 &lt;code&gt;fill&lt;/code&gt;이라는 함수를 제공한다&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/replace_na_with_tidyr/&quot;&gt;http://lumiamitie.github.io/r/replace_na_with_tidyr/&lt;/a&gt; 에 정리한 내용을 참고하면 된다&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/tidy-data&quot;&gt;Tidy data&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on October 26, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[dplyr advanced - data_frame]]></title>
  <link>http://lumiamitie.github.io/r/dplyr-advanced-data_frame</link>
  <id>http://lumiamitie.github.io/r/dplyr-advanced-data_frame</id>
  <published>2015-10-19T00:00:00+09:00</published>
  <updated>2015-10-19T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;../../images/macphoto.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;data_frame&quot;&gt;data_frame&lt;/h2&gt;

&lt;p&gt;dplyr은 data.frame을 더 편리하게 사용할 수 있도록 변형된 형태의 data.frame을 제공한다&lt;/p&gt;

&lt;p&gt;초창기부터 제공했던 &lt;code&gt;tbl_df&lt;/code&gt; 을 이용하면 화면에 맞게 행과 열의 수를 제한해서 볼 수 있고&lt;/p&gt;

&lt;p&gt;dplyr과 관련된 추가적인 정보(&lt;code&gt;group_by&lt;/code&gt; 정보, column의 type, source정보 등)를 제공한다&lt;/p&gt;

&lt;p&gt;이후에 추가된 &lt;code&gt;data_frame&lt;/code&gt;은 tbl_df와 data.frame을 기반으로 하여 data.frame을 더욱 편리하게 사용할 수 있도록 여러가지 기능을 제공한다&lt;/p&gt;

&lt;p&gt;dplyr의 기능과 궁합이 잘 맞는 데이터 형태이기 때문에 차이점을 명확하게 알고 쓴다면 도움이 많이 될 것 같다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;아래 내용은 dplyr 패키지 내부에 있는 &lt;code&gt;data_frames&lt;/code&gt; 문서를 정리하고 일부 내용을 추가했다&lt;/p&gt;

&lt;p&gt;R에서는 dplyr 패키지를 불러온 후에 &lt;code&gt;vignette(&amp;#39;data_frames&amp;#39;)&lt;/code&gt; 명령어로 문서를 볼 수 있으며&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cran.r-project.org/web/packages/dplyr/vignettes/data_frames.html&quot;&gt;CRAN 페이지&lt;/a&gt;에서도 문서를 확인할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## 
## Attaching package: &amp;#39;dplyr&amp;#39;
## 
## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter, lag
## 
## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     intersect, setdiff, setequal, union
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;data-frame과의-차이점&quot;&gt;data.frame과의 차이점&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;data.frame은 &lt;code&gt;stringsAsFactors = FALSE&lt;/code&gt; 를 해주지 않으면 문자열을 factor로 가져간다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;month &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;month.abb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##    month 
## &amp;quot;factor&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;data_frame은 입력한 데이터의 type을 변경하지 않는다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;data_frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;month &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;month.abb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##       month 
## &amp;quot;character&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;list를 값으로 가지는 column을 쉽게 생성할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list_col &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data_frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;index &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                      rnorm &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;rnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                                   rnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
                                   rnorm&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                      &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
list_col&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
##  [1] -0.21884373 -0.83728231  0.74070271 -0.01440668  1.92528622
##  [6]  0.64657433  1.53596809  0.37297701  0.75368773  1.26919784
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이 경우 rnorm column은 list의 형태로 출력되기 때문에&lt;/p&gt;

&lt;p&gt;sapply 함수를 이용하면 mutate와 함께 자료를 정리할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list_col &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mean &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;rnorm&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [3 x 3]
## 
##   index     rnorm       mean
##   (int)     (chr)      (dbl)
## 1     1 &amp;lt;dbl[10]&amp;gt;  0.6173861
## 2     2  &amp;lt;dbl[5]&amp;gt; -0.2303840
## 3     3  &amp;lt;dbl[7]&amp;gt; -0.2237431
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;data_frame은 변수의 이름을 변경하지 않는다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# space.variable&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;space variable&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   space.variable
## 1              1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# space variable&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;data_frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;space variable&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [1 x 1]
## 
##   space variable
##            (dbl)
## 1              1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;값을 계산할 때 느긋(lazy)하게 순차적으로 진행한다&lt;/p&gt;

&lt;p&gt;다시 말하자면, dplyr의 mutate 함수를 사용하는 것처럼 data_frame을 생성할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Error&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Error in data.frame(x = 1:5, y = 3 * x) : object &amp;#39;x&amp;#39; not found
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;data_frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [5 x 2]
## 
##       x     y
##   (int) (dbl)
## 1     1     3
## 2     2     6
## 3     3     9
## 4     4    12
## 5     5    15
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;기타-특이사항들&quot;&gt;기타 특이사항들&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;data_frame은-row-names-를-사용하지-않는다&quot;&gt;data_frame은 &lt;code&gt;row.names()&lt;/code&gt;를 사용하지 않는다&lt;/h4&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;tidy data의 관점에서 변수는 attribute로 관리하지 않고 테이블 안에서 변수로 직접 관리한다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;data_frame에서-벡터의-재사용은-길이-1의-벡터로만-한정한다&quot;&gt;data_frame에서 벡터의 재사용은 길이 1의 벡터로만 한정한다&lt;/h4&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;큰 단위의 벡터에서 벡터 재사용은 버그의 빈번하게 발생시킨다&lt;/p&gt;

&lt;p&gt;아래 예제에서 보면 x와 y 벡터는 길이가 다르지만 &lt;/p&gt;

&lt;p&gt;data.frame에서는 y를 다시 사용하는 방식으로 길이를 맞춰서 data.frame을 생성한다&lt;/p&gt;

&lt;p&gt;data_frame은 그러한 벡터 재사용을 허용하지 않는다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   x y
## 1 1 1
## 2 2 2
## 3 3 1
## 4 4 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Error&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;data_frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; y &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Error in data_frame_(lazyeval::lazy_dots(...)) : 
  arguments imply differing number of rows: 4, 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;data_frame은-tbl_df-클래스를-추가시킨다&quot;&gt;data_frame은 tbl_df 클래스를 추가시킨다&lt;/h4&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;따라서 기본적으로는 데이터를 호출했을 때 데이터의 일부만 보이게 된다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;print(data_frame, n = 100)&lt;/code&gt; 등의 함수로 원하는 만큼의 데이터를 볼 수 있다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;tbl_df-클래스로-인해서-의-동작도-달라진다&quot;&gt;tbl_df 클래스로 인해서 [ ]의 동작도 달라진다&lt;/h4&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;기존 data.frame에서는 해당 열을 벡터로 바꾸어서 출력하는 반면에 &lt;/p&gt;

&lt;p&gt;data_frame에서는 형태를 변경하지 않는다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_head &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
iris_df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; tbl_df&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris_head&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

iris_head&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Species&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] setosa setosa setosa setosa setosa setosa
## Levels: setosa versicolor virginica
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris_df&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Species&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [6 x 1]
## 
##   Species
##    (fctr)
## 1  setosa
## 2  setosa
## 3  setosa
## 4  setosa
## 5  setosa
## 6  setosa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;data_frame으로-변경하려면-as_data_frame-함수를-사용하면-된다&quot;&gt;data_frame으로 변경하려면 &lt;code&gt;as_data_frame()&lt;/code&gt;함수를 사용하면 된다&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;as.data.frame()&lt;/code&gt;보다 훨씬 빠르다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;as_data_frame&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;iris&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [150 x 5]
## 
##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
##           (dbl)       (dbl)        (dbl)       (dbl)  (fctr)
## 1           5.1         3.5          1.4         0.2  setosa
## 2           4.9         3.0          1.4         0.2  setosa
## 3           4.7         3.2          1.3         0.2  setosa
## 4           4.6         3.1          1.5         0.2  setosa
## 5           5.0         3.6          1.4         0.2  setosa
## 6           5.4         3.9          1.7         0.4  setosa
## 7           4.6         3.4          1.4         0.3  setosa
## 8           5.0         3.4          1.5         0.2  setosa
## 9           4.4         2.9          1.4         0.2  setosa
## 10          4.9         3.1          1.5         0.1  setosa
## ..          ...         ...          ...         ...     ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/dplyr-advanced-data_frame&quot;&gt;dplyr advanced - data_frame&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on October 19, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[dplyr advanced - Standard Evaluation]]></title>
  <link>http://lumiamitie.github.io/r/dplyr-advanced-se</link>
  <id>http://lumiamitie.github.io/r/dplyr-advanced-se</id>
  <published>2015-10-16T00:00:00+09:00</published>
  <updated>2015-10-16T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;../../../images/old-book.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;non-standard-evaluation&quot;&gt;Non-standard Evaluation&lt;/h1&gt;

&lt;p&gt;dplyr은 기본적으로 non-standard evaluation (NSE)을 사용하여 연산을 처리한다&lt;/p&gt;

&lt;p&gt;사실 이 글을 쓰는 지금도 NSE가 정확히 어떤 것인지는 잘 모르겠다&amp;hellip; &lt;/p&gt;

&lt;p&gt;모든 값을 계산하지 않고 필요할 때만 계산하는? 것이라고 알아들었기는 하지만 정확한 동작 방식은 정말 모르겠다..&lt;/p&gt;

&lt;p&gt;내부적으로 어떻게 다른지는 알 수 없지만 한 가지 눈에 보이는 확실한 차이점은 존재한다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;NSE는 아래 코드처럼 column name을 하나의 object 처럼 사용한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sl2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; Sepal.Length&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species  sl2
## 1          5.1         3.5          1.4         0.2  setosa 10.2
## 2          4.9         3.0          1.4         0.2  setosa  9.8
## 3          4.7         3.2          1.3         0.2  setosa  9.4
## 4          4.6         3.1          1.5         0.2  setosa  9.2
## 5          5.0         3.6          1.4         0.2  setosa 10.0
## 6          5.4         3.9          1.7         0.4  setosa 10.8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  group_by&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Species&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  summarise&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;mean &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## Source: local data frame [3 x 2]
## 
##      Species  mean
##       (fctr) (dbl)
## 1     setosa 5.006
## 2 versicolor 5.936
## 3  virginica 6.588
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;반면에 r의 기본 함수(&lt;code&gt;[&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt; 등)들은 column name을 문자열의 형태로 받는다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span class=&quot;s&quot;&gt;&amp;#39;[&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Sepal.Length&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length
## 1          5.1
## 2          4.9
## 3          4.7
## 4          4.6
## 5          5.0
## 6          5.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;dplyr에서는 filter, mutate, summarise, arrange, select, group_by 등의 함수에서 nse를 사용한다&lt;/p&gt;

&lt;p&gt;이들 함수는 각각 se버전을 가지고 있는데, 함수 이름 뒤에 _ 를 붙이면 된다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;filter_&lt;/code&gt;, &lt;code&gt;mutate_&lt;/code&gt;, &lt;code&gt;summarise_&lt;/code&gt;, &lt;code&gt;arrange_&lt;/code&gt;, &lt;code&gt;select_&lt;/code&gt;, &lt;code&gt;group_by_&lt;/code&gt; 등이 각 함수의 se 버전이다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br / &gt;
&lt;br / &gt;&lt;/p&gt;

&lt;h1 id=&quot;standard-evaluation&quot;&gt;Standard Evaluation&lt;/h1&gt;

&lt;p&gt;se버전의 함수를 사용할 때는 함수의 input값을 따옴표로 감싸진 문자열로 넣게 된다&lt;/p&gt;

&lt;p&gt;se버전에서 함수에 인자를 넘기는 방법은 크게 세 가지가 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# String&lt;/span&gt;
iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  head &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mean(Sepal.Length)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa
##   mean(Sepal.Length)
## 1               4.95
## 2               4.95
## 3               4.95
## 4               4.95
## 5               4.95
## 6               4.95
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# quote()&lt;/span&gt;
iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  head &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;quote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa
##   mean(Sepal.Length)
## 1               4.95
## 2               4.95
## 3               4.95
## 4               4.95
## 5               4.95
## 6               4.95
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# formula&lt;/span&gt;
iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  head &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa
##   mean(Sepal.Length)
## 1               4.95
## 2               4.95
## 3               4.95
## 4               4.95
## 5               4.95
## 6               4.95
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;이 중에서 가장 좋은 방법은 formula를 쓰는 것이다&lt;/p&gt;

&lt;p&gt;따옴표나 quote를 사용할 때는 해당 입력값이 어느 environment에 존재하는지 못찾게 되는 경우도 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;divide_by_two &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;num&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;num&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 제대로 실행된다&lt;/span&gt;
iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  head &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;divide_by_two&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa
##   divide_by_two(Sepal.Length)
## 1                        2.55
## 2                        2.45
## 3                        2.35
## 4                        2.30
## 5                        2.50
## 6                        2.70
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# 오류 발생&lt;/span&gt;
iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  head &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;divide_by_two(Sepal.Length)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Error: could not find function &amp;quot;divide_by_two&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# 오류 발생&lt;/span&gt;
iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  head &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;quote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;divide_by_two&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Error: could not find function &amp;quot;divide_by_two&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;여러 가지 input을 한꺼번에 입력하거나, 변수명을 지정해야 할 때에는 &lt;code&gt;.dots&lt;/code&gt; argument에 값을 넘기면 된다&lt;/p&gt;

&lt;p&gt;setNames 함수를 사용해서 함수의 내용과 변수명을 함께 지정해주면 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  summarise_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.&lt;/span&gt;dots &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; setNames&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mean(Sepal.Length)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;sd(Sepal.Length)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mean&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;sd&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##       mean        sd
## 1 5.843333 0.8280661
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  summarise_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.&lt;/span&gt;dots &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; setNames&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;sd&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;mean&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;sd&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##       mean        sd
## 1 5.843333 0.8280661
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;이러한 se버전의 함수를 어떻게 활용할까?&lt;/p&gt;

&lt;p&gt;변수를 만들 때 고정된 문자열과 변하는 숫자, 문자열을 이용해 많은 수의 변수를 생성해야 한다고 생각해보자&lt;/p&gt;

&lt;p&gt;예를 들면&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;
  select&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  head &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;sl10 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Sepal.Length &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         sl20 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Sepal.Length &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         sl30 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Sepal.Length &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length sl10 sl20 sl30
## 1          5.1 15.1 25.1 35.1
## 2          4.9 14.9 24.9 34.9
## 3          4.7 14.7 24.7 34.7
## 4          4.6 14.6 24.6 34.6
## 5          5.0 15.0 25.0 35.0
## 6          5.4 15.4 25.4 35.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위와 같은 형태로 변수를 만들어야 한다고 생각해보자&lt;/p&gt;

&lt;p&gt;위 예제는 3개만 만드니까 다 타이핑할 수 있겠지만&lt;/p&gt;

&lt;p&gt;저렇게 변수를 10개 이상? 100개를 만들어야 한다면?&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이러한 상황에서 se버전의 함수를 이용하면 해결할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;iris &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  select&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Sepal.Length&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  head &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate_&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;m&quot;&gt;.&lt;/span&gt;dots &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; setNames&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
              &lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;paste0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Sepal.Length + &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; collapse &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
              &lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;paste0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;sl&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; collapse &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   Sepal.Length sl10 sl20 sl30
## 1          5.1 15.1 25.1 35.1
## 2          4.9 14.9 24.9 34.9
## 3          4.7 14.7 24.7 34.7
## 4          4.6 14.6 24.6 34.6
## 5          5.0 15.0 25.0 35.0
## 6          5.4 15.4 25.4 35.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;paste0()&lt;/code&gt;는 둘 이상의 문자열을 하나로 묶어주는 역할을 한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sapply&lt;/code&gt; 는 첫 번째의 인자의 요소들이 차례대로 두 번째 인자의 함수에 parameter로 들어가서 값이 계산되고&lt;/p&gt;

&lt;p&gt;그 결과물을 벡터 등으로 묶어서 반환해준다&lt;/p&gt;

&lt;p&gt;for문을 짧은 함수 형태로 사용하는 것과 비슷한 효과를 낼 수 있다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;일반적인 상황에서 데이터를 정제하고 분석할 때는 크게 필요를 느끼지 못할 수도 있지만&lt;/p&gt;

&lt;p&gt;엄청나게 반복적인 작업을 해야할 때에는 이러한 방식으로 연산하면 시간을 크게 절약할 수도 있다&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/dplyr-advanced-se&quot;&gt;dplyr advanced - Standard Evaluation&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on October 16, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[List and sapply]]></title>
  <link>http://lumiamitie.github.io/r/list-and-sapply</link>
  <id>http://lumiamitie.github.io/r/list-and-sapply</id>
  <published>2015-10-11T00:00:00+09:00</published>
  <updated>2015-10-11T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;../../images/note-and-pen.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;p&gt;json이나 파이썬의 딕셔너리처럼 자유로운 형태의 데이터를 사용하게 되면 list를 많이 사용하게 된다. 평소에는 주로 data.frame을 사용하다보니 상대적으로 list에는 익숙하지가 않았다. 이번에 인스타그램에서 데이터를 가져오면서 리스트에 대해 한 번쯤 정리를 해야겠다는 필요성을 느꼈다. 그래서 api를 통해 데이터를 가져올 때 많이 사용할 만한 내용을 살펴보려고 한다&lt;/p&gt;

&lt;hr&gt;

&lt;h1 id=&quot;list&quot;&gt;List&lt;/h1&gt;

&lt;p&gt;R의 리스트는 key-value 형태로 데이터를 저장한다&lt;/p&gt;

&lt;p&gt;value에는 숫자, 문자열, 리스트, 데이터프레임 등 다양한 형태의 데이터 프레임이 존재할 수 있다&lt;/p&gt;

&lt;p&gt;다만 여기서는 json 형태의 데이터를 R로 가져왔을 때 가장 많이 발생하는 형태인 &amp;lsquo;리스트가 중첩된 형태&amp;rsquo; 를 중점적으로 생각하려고 한다&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;list-생성하기&quot;&gt;list 생성하기&lt;/h2&gt;

&lt;p&gt;리스트를 생성하려면 &lt;code&gt;list()&lt;/code&gt;함수를 사용하면 된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list01 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;aaa&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;a01&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; like &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; filter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;filterA&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
              &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;a02&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; like &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  filter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;filterB&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
              &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;a03&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; like &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; filter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;filterC&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

list01
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## $id
## [1] &amp;quot;aaa&amp;quot;
## 
## $data
## $data[[1]]
## $data[[1]]$media_id
## [1] &amp;quot;a01&amp;quot;
## 
## $data[[1]]$like
## [1] 18
## 
## $data[[1]]$filter
## [1] &amp;quot;filterA&amp;quot;
## 
## 
## $data[[2]]
## $data[[2]]$media_id
## [1] &amp;quot;a02&amp;quot;
## 
## $data[[2]]$like
## [1] 5
## 
## $data[[2]]$filter
## [1] &amp;quot;filterB&amp;quot;
## 
## 
## $data[[3]]
## $data[[3]]$media_id
## [1] &amp;quot;a03&amp;quot;
## 
## $data[[3]]$like
## [1] 23
## 
## $data[[3]]$filter
## [1] &amp;quot;filterC&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h2 id=&quot;list-불러오기&quot;&gt;list 불러오기&lt;/h2&gt;

&lt;p&gt;리스트에 값을 저장했을 때, 데이터를 불러오는 방식은 크게 두 가지가 있다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;key-value의-형태&quot;&gt;key-value의 형태&lt;/h3&gt;

&lt;p&gt;인덱싱을 통해 특정 데이터를 호출할 때 [] 를 사용하면 key값과 value값이 모두 반환되어 list 형식으로 값이 나오게 된다&lt;/p&gt;

&lt;p&gt;숫자를 입력하면 1부터 시작하는 인덱스 번호로 호출되고&lt;/p&gt;

&lt;p&gt;변수에 이름이 존재할 경우에는 이름으로 호출할 수도 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list01&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## $id
## [1] &amp;quot;aaa&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list01&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## $id
## [1] &amp;quot;aaa&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;value-값만-출력&quot;&gt;value 값만 출력&lt;/h3&gt;

&lt;p&gt;반면에 [[]]를 이용해서 출력할 경우에는 key없이 value만 호출하게 된다&lt;/p&gt;

&lt;p&gt;value 항목이 벡터 형태라면 벡터만 출력되고, 리스트 형태라면 리스트가 출력된다&lt;/p&gt;

&lt;p&gt;마찬가지로 숫자를 넣으면 인덱스 번호로 호출한다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$&lt;/code&gt;를 통해 호출하는 경우에도 value만 출력된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list01&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;aaa&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list01&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [[1]]$media_id
## [1] &amp;quot;a01&amp;quot;
## 
## [[1]]$like
## [1] 18
## 
## [[1]]$filter
## [1] &amp;quot;filterA&amp;quot;
## 
## 
## [[2]]
## [[2]]$media_id
## [1] &amp;quot;a02&amp;quot;
## 
## [[2]]$like
## [1] 5
## 
## [[2]]$filter
## [1] &amp;quot;filterB&amp;quot;
## 
## 
## [[3]]
## [[3]]$media_id
## [1] &amp;quot;a03&amp;quot;
## 
## [[3]]$like
## [1] 23
## 
## [[3]]$filter
## [1] &amp;quot;filterC&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list01&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;aaa&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list01&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;aaa&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;list에서-데이터-추출하기&quot;&gt;list에서 데이터 추출하기&lt;/h2&gt;

&lt;p&gt;인스타그램에서 데이터를 성공적으로 받아왔다고 하면, 이제 거기에서 필요한 데이터만 꺼내서 정리해야 한다.&lt;/p&gt;

&lt;p&gt;일정한 형태가 반복될 것이기 때문에 for문이나 sapply함수 등을 사용해서 정리할 수 있다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;list01의-data에서-media_id만-추출하기-for문&quot;&gt;list01의 data에서 media_id만 추출하기 - for문&lt;/h3&gt;

&lt;p&gt;빈 벡터를 하나 만들고, for문이 돌 때마다 값을 하나씩 추가한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;post &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt; list01&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;media_id&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; post&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;media_id&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

media_id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;a01&amp;quot; &amp;quot;a02&amp;quot; &amp;quot;a03&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3 id=&quot;list01의-data에서-media_id만-추출하기-sapply&quot;&gt;list01의 data에서 media_id만 추출하기 - sapply&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;sapply&lt;/code&gt;함수를 이용하면 &lt;code&gt;list01$data&lt;/code&gt;의 각 항목을 &lt;code&gt;x&lt;/code&gt;로 둘 때 &lt;code&gt;x$media_id&lt;/code&gt;의 값을 벡터로 정리해서 반환해준다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;list01&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; x&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;media_id&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;a01&amp;quot; &amp;quot;a02&amp;quot; &amp;quot;a03&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;list01&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; x&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;media_id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;a01&amp;quot; &amp;quot;a02&amp;quot; &amp;quot;a03&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sapply&quot;&gt;sapply?&lt;/h2&gt;

&lt;p&gt;첫 번째 인자로 들어오는 벡터 또는 리스트의 항목을 하나씩 그 뒤에 들어오는 함수에 대입시킨다&lt;/p&gt;

&lt;p&gt;각 결과물을 벡터로 모아서 반환한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##  [1]  2  4  6  8 10 12 14 16 18 20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위 코드에서는 &lt;/p&gt;

&lt;p&gt;1이 x에 반영되어 2*1&lt;/p&gt;

&lt;p&gt;2가 x에 반영되어 2*2&lt;/p&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;10이 x에 반영되어 2*10&lt;/p&gt;

&lt;p&gt;이 반복되어서 최종적으로는 2부터 20까지의 짝수 벡터가 출력된다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;데이터를-data-frame에-정리하기&quot;&gt;데이터를 data.frame에 정리하기&lt;/h2&gt;

&lt;p&gt;위에서는 간단하게 필요한 변수만 벡터로 저장해 보았다면 여기서는 여러 가지 변수들을 모아서 데이터 프레임으로 저장해 보려고 한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;list01-data-를-데이터-프레임으로-정리하기-for문&quot;&gt;list01$data 를 데이터 프레임으로 정리하기 - for문&lt;/h3&gt;

&lt;p&gt;row단위로 데이터를 합치게 된다&lt;/p&gt;

&lt;p&gt;for문 안에서 1행의 데이터 프레임을 생성한 다음에 기존에 있던 데이터프레임의 마지막 행에 추가하는 형태로 반복한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df_data_for &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;post &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt; list01&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  df_data_for &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;rbind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;df_data_for&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                      &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; post&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;media_id&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                                 like &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; post&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;like&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                                 filter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; post&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;filter&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

df_data_for
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   media_id like  filter
## 1      a01   18 filterA
## 2      a02    5 filterB
## 3      a03   23 filterC
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;list01-data를-데이터-프레임으로-정리하기-sapply&quot;&gt;list01$data를 데이터 프레임으로 정리하기 - sapply&lt;/h3&gt;

&lt;p&gt;col단위로 데이터를 합치게 된다&lt;/p&gt;

&lt;p&gt;sapply함수를 이용해 각각의 열에 들어갈 자료를 벡터로 만들고 그 벡터들을 data.frame함수로 묶게된다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;df_data_sapply &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;list01&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; x&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;media_id&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  like &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;list01&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; x&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;like&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  filter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;list01&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; x&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;filter&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

df_data_sapply
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   media_id like  filter
## 1      a01   18 filterA
## 2      a02    5 filterB
## 3      a03   23 filterC
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;list-들을-합치는-방법들&quot;&gt;list 들을 합치는 방법들&lt;/h2&gt;

&lt;p&gt;api에서 한 번에 제공하는 데이터의 양은 한정되어있다&lt;/p&gt;

&lt;p&gt;따라서 분석을 하기 위해서는 데이터를 계속 수집하면서 하나의 데이터셋으로 모아줄 필요가 있다&lt;/p&gt;

&lt;p&gt;맨 처음에 생성했던 리스트와 동일한 형태로 list02라는 리스트를 생성한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;list02 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;bbb&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;b01&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; like &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  filter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;filterD&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
              &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;b02&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; like &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; filter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;filterA&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
              &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;media_id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;b03&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; like &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; filter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;filterB&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;첫 번째로 리스트를 합치는 방법은 벡터에서 처럼 &lt;code&gt;c()&lt;/code&gt; 함수를 사용하는 것이다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;list01&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; list02&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## $id
## [1] &amp;quot;aaa&amp;quot;
## 
## $data
## $data[[1]]
## $data[[1]]$media_id
## [1] &amp;quot;a01&amp;quot;
## 
## $data[[1]]$like
## [1] 18
## 
## $data[[1]]$filter
## [1] &amp;quot;filterA&amp;quot;
## 
## 
## $data[[2]]
## $data[[2]]$media_id
## [1] &amp;quot;a02&amp;quot;
## 
## $data[[2]]$like
## [1] 5
## 
## $data[[2]]$filter
## [1] &amp;quot;filterB&amp;quot;
## 
## 
## $data[[3]]
## $data[[3]]$media_id
## [1] &amp;quot;a03&amp;quot;
## 
## $data[[3]]$like
## [1] 23
## 
## $data[[3]]$filter
## [1] &amp;quot;filterC&amp;quot;
## 
## 
## 
## $id
## [1] &amp;quot;bbb&amp;quot;
## 
## $data
## $data[[1]]
## $data[[1]]$media_id
## [1] &amp;quot;b01&amp;quot;
## 
## $data[[1]]$like
## [1] 8
## 
## $data[[1]]$filter
## [1] &amp;quot;filterD&amp;quot;
## 
## 
## $data[[2]]
## $data[[2]]$media_id
## [1] &amp;quot;b02&amp;quot;
## 
## $data[[2]]$like
## [1] 15
## 
## $data[[2]]$filter
## [1] &amp;quot;filterA&amp;quot;
## 
## 
## $data[[3]]
## $data[[3]]$media_id
## [1] &amp;quot;b03&amp;quot;
## 
## $data[[3]]$like
## [1] 13
## 
## $data[[3]]$filter
## [1] &amp;quot;filterB&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이렇게 하면 &lt;code&gt;list01$id&lt;/code&gt;, &lt;code&gt;list01$data&lt;/code&gt;, &lt;code&gt;list02$id&lt;/code&gt;, &lt;code&gt;list02$data&lt;/code&gt; 순으로 들어간다&lt;/p&gt;

&lt;p&gt;따라서 각각의 항목을 [[1]], [[2]], [[3]], [[4]]로 호출할 수 있다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;c()&lt;/code&gt; 함수에서 &lt;code&gt;recursive = TRUE&lt;/code&gt; 옵션을 사용하면 list 안에 있는 내용을 모두 벡터로 반환한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;list01&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; list02&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; recursive &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##            id data.media_id     data.like   data.filter data.media_id 
##         &amp;quot;aaa&amp;quot;         &amp;quot;a01&amp;quot;          &amp;quot;18&amp;quot;     &amp;quot;filterA&amp;quot;         &amp;quot;a02&amp;quot; 
##     data.like   data.filter data.media_id     data.like   data.filter 
##           &amp;quot;5&amp;quot;     &amp;quot;filterB&amp;quot;         &amp;quot;a03&amp;quot;          &amp;quot;23&amp;quot;     &amp;quot;filterC&amp;quot; 
##            id data.media_id     data.like   data.filter data.media_id 
##         &amp;quot;bbb&amp;quot;         &amp;quot;b01&amp;quot;           &amp;quot;8&amp;quot;     &amp;quot;filterD&amp;quot;         &amp;quot;b02&amp;quot; 
##     data.like   data.filter data.media_id     data.like   data.filter 
##          &amp;quot;15&amp;quot;     &amp;quot;filterA&amp;quot;         &amp;quot;b03&amp;quot;          &amp;quot;13&amp;quot;     &amp;quot;filterB&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;전체 항목이 벡터로 반환되는 것을 볼 수 있다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;리스트의 형태로 두 리스트를 묶을 수도 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;list01&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; list02&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [[1]]$id
## [1] &amp;quot;aaa&amp;quot;
## 
## [[1]]$data
## [[1]]$data[[1]]
## [[1]]$data[[1]]$media_id
## [1] &amp;quot;a01&amp;quot;
## 
## [[1]]$data[[1]]$like
## [1] 18
## 
## [[1]]$data[[1]]$filter
## [1] &amp;quot;filterA&amp;quot;
## 
## 
## [[1]]$data[[2]]
## [[1]]$data[[2]]$media_id
## [1] &amp;quot;a02&amp;quot;
## 
## [[1]]$data[[2]]$like
## [1] 5
## 
## [[1]]$data[[2]]$filter
## [1] &amp;quot;filterB&amp;quot;
## 
## 
## [[1]]$data[[3]]
## [[1]]$data[[3]]$media_id
## [1] &amp;quot;a03&amp;quot;
## 
## [[1]]$data[[3]]$like
## [1] 23
## 
## [[1]]$data[[3]]$filter
## [1] &amp;quot;filterC&amp;quot;
## 
## 
## 
## 
## [[2]]
## [[2]]$id
## [1] &amp;quot;bbb&amp;quot;
## 
## [[2]]$data
## [[2]]$data[[1]]
## [[2]]$data[[1]]$media_id
## [1] &amp;quot;b01&amp;quot;
## 
## [[2]]$data[[1]]$like
## [1] 8
## 
## [[2]]$data[[1]]$filter
## [1] &amp;quot;filterD&amp;quot;
## 
## 
## [[2]]$data[[2]]
## [[2]]$data[[2]]$media_id
## [1] &amp;quot;b02&amp;quot;
## 
## [[2]]$data[[2]]$like
## [1] 15
## 
## [[2]]$data[[2]]$filter
## [1] &amp;quot;filterA&amp;quot;
## 
## 
## [[2]]$data[[3]]
## [[2]]$data[[3]]$media_id
## [1] &amp;quot;b03&amp;quot;
## 
## [[2]]$data[[3]]$like
## [1] 13
## 
## [[2]]$data[[3]]$filter
## [1] &amp;quot;filterB&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;인스타그램에서 데이터를 받아오면 이런 형식일 것이다&lt;/p&gt;

&lt;p&gt;첫 번째 항목([[1]])에 list01이 들어가고 두 번째 항목([[2]])에 list02가 들어간다&lt;/p&gt;

&lt;p&gt;위에서 데이터를 data.frame으로 저장했던 방식을 응용하면 (for, sapply 또는 for + sapply) 필요한 항목만 정리할 수 있다&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/list-and-sapply&quot;&gt;List and sapply&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on October 11, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[networkD3]]></title>
  <link>http://lumiamitie.github.io/r/visualization/networkD3</link>
  <id>http://lumiamitie.github.io/r/visualization/networkD3</id>
  <published>2015-10-03T00:00:00+09:00</published>
  <updated>2015-10-03T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/note-and-pen.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;networkd3&quot;&gt;networkD3&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;networkD3&lt;/code&gt; 패키지는 &lt;code&gt;htmlwidget&lt;/code&gt; 패키지를 바탕으로 D3 기반의 네트워크 시각화를 가능하게 해준다.&lt;/p&gt;

&lt;p&gt;기존의 igraph 패키지로는 만족스러운 모양새의 그래프를 만들기 힘들다고 생각해서 gephi와 d3를 사용하고 있었는데 d3 기반의 시각화를 R로 빠르게 구현할 수 있어서 관심을 가지게 되었다. &lt;/p&gt;

&lt;p&gt;물론 세세한 부분까지 변경하는 것은 조금 무리가 있을 것 같지만 처음 d3로 force layout을 만들 때 고생했던 것을 생각하면 간단한 코드로 이렇게 force layout을 구현할 수 있다는 것 만으로도 상당히 유용하게 사용할 수 있을 것 같다. &lt;/p&gt;

&lt;p&gt;이렇게 생성한 그래프는 html 형태로 export 할 수 있고, RMarkdown 문서에 바로 첨부할 수도 있다&lt;/p&gt;

&lt;p&gt;이 글에서는 d3 그래프가 제대로 표시되지 않기 때문에 실제로 실행되는 결과물을 보려면 &lt;a href=&quot;http://lumiamitie.github.io/r_tutorial/blog_link/networkd3.html&quot;&gt;링크&lt;/a&gt; 에서 확인할 수 있다&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;data&quot;&gt;Data&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.thomsonreuters.com/index.php/mobile-patent-suits-graphic-of-the-day/&quot;&gt;http://blog.thomsonreuters.com/index.php/mobile-patent-suits-graphic-of-the-day/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;위 링크는 모바일 관련 소송에 대한 그래픽 자료이다. 해당 데이터를 d3를 이용해 네트워크 형태로 시각화한 자료는 &lt;a href=&quot;http://bl.ocks.org/mbostock/1153292&quot;&gt;여기&lt;/a&gt;에서 확인할 수 있다. 이 글에서는 link데이터를 가져와서 networkD3 패키지로 시각화 하는 작업을 진행할 것이다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;networkD3&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;시작하기 전에 네트워크 시각화를 하는데 필요한 데이터의 형태에 대해서 알아볼 필요가 있다. &lt;/p&gt;

&lt;p&gt;네트워크 형태로 데이터를 시각화할 때 필요한 데이터는 두 가지가 있다&lt;/p&gt;

&lt;p&gt;우선 노드(&lt;strong&gt;Node&lt;/strong&gt; 또는 &lt;strong&gt;Vertex&lt;/strong&gt;)에 대한 정보가 필요하고&lt;/p&gt;

&lt;p&gt;이 각각의 노드를 어떻게 연결할 것인지(&lt;strong&gt;Link&lt;/strong&gt; 또는 &lt;strong&gt;Edge&lt;/strong&gt;)에 대한 정보가 필요하다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;networkD3&lt;/code&gt;패키지에서 기본적으로 제공하는 데이터 중에서 소설 레미제라블의 인물 관계도를 나타내는 &lt;code&gt;MisLinks&lt;/code&gt;와 &lt;code&gt;MisNodes&lt;/code&gt; 데이터를 가지고 살펴보자 &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;data&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;MisLinks&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; MisNodes&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;MisNodes&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##              name group size
## 1          Myriel     1   15
## 2        Napoleon     1   20
## 3 Mlle.Baptistine     1   23
## 4    Mme.Magloire     1   30
## 5    CountessdeLo     1   11
## 6        Geborand     1    9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이름에서부터 느껴지듯이 &lt;code&gt;MisNodes&lt;/code&gt;는 Node에 대한 데이터다&lt;/p&gt;

&lt;p&gt;각각의 노드를 구별하는 열이 존재하고(여기서는 &lt;code&gt;name&lt;/code&gt;열)&lt;/p&gt;

&lt;p&gt;해당 노드가 그룹화 되어있는 경우 그룹을 표시해준다(&lt;code&gt;group&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;또 필수적이지는 않지만 각각의 노드가 가지는 값(중요도, 크기 등)이 있을 경우에 해당 값을 추가한다(&lt;code&gt;size&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kp&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;MisLinks&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##   source target value
## 1      1      0     1
## 2      2      0     8
## 3      3      0    10
## 4      3      2     6
## 5      4      0     1
## 6      5      0     1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;MisLinks&lt;/code&gt;는 노드를 연결하는 정보에 대한 데이터이다&lt;/p&gt;

&lt;p&gt;한 행은 &lt;code&gt;source&lt;/code&gt;로 부터 &lt;code&gt;target&lt;/code&gt;으로 연결되는 선 하나를 나타낸다&lt;/p&gt;

&lt;p&gt;각 &lt;code&gt;source&lt;/code&gt;와 &lt;code&gt;target&lt;/code&gt;열의 값은 Node 데이터의 인덱스(0부터 시작)를 나타낸다&lt;/p&gt;

&lt;p&gt;따라서 source = 1, target = 0은 source = Napoleon, target = Myriel을 의미한다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그러면 다시 돌아와서 우리가 처리할 데이터를 확인해보자&lt;/p&gt;

&lt;p&gt;데이터는 JSON 형태로 되어있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;links &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;[&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Microsoft&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Amazon&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;licensing&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Microsoft&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;HTC&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;licensing&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Samsung&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Apple&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Motorola&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Apple&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Nokia&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Apple&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;resolved&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;HTC&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Apple&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Kodak&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Apple&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Microsoft&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Barnes &amp;amp; Noble&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Microsoft&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Foxconn&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Oracle&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Google&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Apple&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;HTC&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Microsoft&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Inventec&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Samsung&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Kodak&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;resolved&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;LG&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Kodak&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;resolved&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;RIM&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Kodak&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Sony&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;LG&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Kodak&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;LG&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;resolved&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Apple&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Nokia&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;resolved&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Qualcomm&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Nokia&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;resolved&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Apple&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Motorola&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Microsoft&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Motorola&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Motorola&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Microsoft&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Huawei&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;ZTE&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Ericsson&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;ZTE&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Kodak&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Samsung&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;resolved&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Apple&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Samsung&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Kodak&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;RIM&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;},&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  {&amp;quot;source&amp;quot;: &amp;quot;Nokia&amp;quot;, &amp;quot;target&amp;quot;: &amp;quot;Qualcomm&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;suit&amp;quot;}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;]&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;jsonlite&lt;/code&gt; 패키지의 &lt;code&gt;fromJSON&lt;/code&gt;함수를 이용해서 json데이터를 data.frame으로 변환시킨다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;link_df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; jsonlite&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;fromJSON&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;links&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이렇게 가져온 데이터는 link만을 담고 있기 때문에 node는 link의 source와 target 전체에서 unique한 항목만 추출한다&lt;/p&gt;

&lt;p&gt;그리고 link에서 source와 target은 node의 인덱스를 가지고 표현해야 하기 때문에&lt;/p&gt;

&lt;p&gt;&lt;code&gt;node_df&lt;/code&gt;라는 data.frame에 0부터 시작하는 인덱스 번호를 부여하고&lt;/p&gt;

&lt;p&gt;다시 &lt;code&gt;link_df&lt;/code&gt;에 &lt;code&gt;left_join&lt;/code&gt;해서 source와 target 각각의 인덱스를 가져온다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# node의 index 숫자는 0부터 시작해야 한다&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# dplyr::row_number()가 1부터 숫자를 매기기 때문에 거기서 1씩을 빼도록 한다&lt;/span&gt;
node_df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;data.frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;node &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;unique&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;link_df&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; link_df&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;target&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  mutate&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;idx &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; row_number&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# node_df에서 index값을 가져와서 source와 target에 해당하는 index 값을 저장한다&lt;/span&gt;
link_df &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; link_df &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  left_join&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;node_df &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; rename&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;source_idx &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; idx&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; by&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;source&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  left_join&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;node_df &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; rename&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;target_idx &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; idx&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; by&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;target&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;완성된 데이터는 다음과 같은 형태를 가진다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;node_df
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##              node idx
## 1       Microsoft   0
## 2         Samsung   1
## 3        Motorola   2
## 4           Nokia   3
## 5             HTC   4
## 6           Kodak   5
## 7          Oracle   6
## 8           Apple   7
## 9              LG   8
## 10            RIM   9
## 11           Sony  10
## 12       Qualcomm  11
## 13         Huawei  12
## 14       Ericsson  13
## 15         Amazon  14
## 16 Barnes &amp;amp; Noble  15
## 17        Foxconn  16
## 18         Google  17
## 19       Inventec  18
## 20            ZTE  19
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;link_df
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;##       source         target      type source_idx target_idx
## 1  Microsoft         Amazon licensing          0         14
## 2  Microsoft            HTC licensing          0          4
## 3    Samsung          Apple      suit          1          7
## 4   Motorola          Apple      suit          2          7
## 5      Nokia          Apple  resolved          3          7
## 6        HTC          Apple      suit          4          7
## 7      Kodak          Apple      suit          5          7
## 8  Microsoft Barnes &amp;amp; Noble      suit          0         15
## 9  Microsoft        Foxconn      suit          0         16
## 10    Oracle         Google      suit          6         17
## 11     Apple            HTC      suit          7          4
## 12 Microsoft       Inventec      suit          0         18
## 13   Samsung          Kodak  resolved          1          5
## 14        LG          Kodak  resolved          8          5
## 15       RIM          Kodak      suit          9          5
## 16      Sony             LG      suit         10          8
## 17     Kodak             LG  resolved          5          8
## 18     Apple          Nokia  resolved          7          3
## 19  Qualcomm          Nokia  resolved         11          3
## 20     Apple       Motorola      suit          7          2
## 21 Microsoft       Motorola      suit          0          2
## 22  Motorola      Microsoft      suit          2          0
## 23    Huawei            ZTE      suit         12         19
## 24  Ericsson            ZTE      suit         13         19
## 25     Kodak        Samsung  resolved          5          1
## 26     Apple        Samsung      suit          7          1
## 27     Kodak            RIM      suit          5          9
## 28     Nokia       Qualcomm      suit          3         11
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;데이터를 모두 준비하고 나면 forceNetwork 함수로 그래프를 생성할 수 있다&lt;/p&gt;

&lt;p&gt;함수의 동작을 위해 최소한 필요한 옵션은 다음과 같다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Links&lt;/strong&gt;에는 link가 담긴 data.frame&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nodes&lt;/strong&gt;에는 node가 담긴 data.frame&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Source&lt;/strong&gt;에는 Links에서 source의 index가 담긴 열 이름&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Target&lt;/strong&gt;에는 Links에서 target의 index가 담긴 열 이름&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NodeID&lt;/strong&gt;에는 Nodes에서 node이름이 담긴 열 이름&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Group&lt;/strong&gt;은 Nodes에서 group이름이 담긴 열 이름(없으면 NodeID와 동일하게)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;forceNetwork&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Links &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; link_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Nodes &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; node_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             Source &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;source_idx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Target &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;target_idx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             NodeID &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/networkd3/networkd3_01.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bounded&lt;/code&gt; 옵션을 TRUE로 하면 Node들이 특정 범위 밖으로 나가지 못하는 범위가 생긴다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;opacityNoHover&lt;/code&gt; 옵션을 TRUE로 하면 마우스를 node에 올리지 않아도 label이 보인다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;forceNetwork&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Links &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; link_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Nodes &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; node_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             Source &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;source_idx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Target &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;target_idx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             NodeID &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             bounded &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             opacityNoHover &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/networkd3/networkd3_02.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;zoom = TRUE&lt;/code&gt;로는 zoom을 가능하게 한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;forceNetwork&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Links &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; link_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Nodes &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; node_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             Source &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;source_idx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Target &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;target_idx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             NodeID &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             bounded &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             opacityNoHover &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/networkd3/networkd3_03.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;fontSize&lt;/strong&gt;는 폰트 크기&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;linkDistance&lt;/strong&gt;는 link의 길이&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;opacity&lt;/strong&gt;는 전체적인 투명도를 조절한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;forceNetwork&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Links &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; link_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Nodes &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; node_df&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             Source &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;source_idx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Target &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;target_idx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             NodeID &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;node&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             opacityNoHover &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             fontSize &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             linkDistance &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             opacity &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/networkd3/networkd3_04.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/visualization/networkD3&quot;&gt;networkD3&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on October 03, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[leaflet in R]]></title>
  <link>http://lumiamitie.github.io/r/visualization/leaflet-in-R</link>
  <id>http://lumiamitie.github.io/r/visualization/leaflet-in-R</id>
  <published>2015-09-25T00:00:00+09:00</published>
  <updated>2015-09-25T00:00:00+09:00</updated>
  <author>
    <name>Minho Lee</name>
    <uri>http://lumiamitie.github.io</uri>
    <email>lumiamitie@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;/images/desk-pen-ruler.jpg&quot; alt=&quot;cover-image&quot;&gt;&lt;/p&gt;

&lt;h1 id=&quot;leaflet-in-r&quot;&gt;leaflet in R&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;leaflet&lt;/strong&gt;은 인터랙티브한 지도를 구현할 수 있게 해주는 오픈소스 자바스크립트 라이브러리이다&lt;/p&gt;

&lt;p&gt;R의 leaflet 패키지는 R에서 데이터를 가지고 쉽게 Leaflet 지도를 생성할 수 있게 해준다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;install.packages(&amp;#39;leaflet&amp;#39;)&lt;/code&gt;를 통해 해당 패키지를 설치하면 바로 사용할 수 있다&lt;/p&gt;

&lt;p&gt;실습을 위한 데이터는 서울 열린 데이터 광장의 &lt;a href=&quot;http://data.seoul.go.kr/openinf/sheetview.jsp?infId=OA-1218&amp;amp;tMenu=11&quot;&gt;공공 Wifi 위치정보&lt;/a&gt; 데이터 중에서 설치기관이 skt, kt, lgu+인 경우로만 필터링해서 사용했다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# install.packages(&amp;#39;leaflet&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;leaflet&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dplyr&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# 서울의 위도, 경도 값&lt;/span&gt;
seoul_lonlat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;unlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ggmap&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;geocode&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;seoul&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;google&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# 서울 열린데이터광장&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# http://data.seoul.go.kr/openinf/sheetview.jsp?infId=OA-1218&amp;amp;tMenu=11&lt;/span&gt;
wifi_data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; read.csv&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;../dataset/wifi_data.csv&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; stringsAsFactors &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;이-페이지에서는-leaflet이-구동-되지-않습니다-ㅠㅠ&quot;&gt;이 페이지에서는 leaflet이 구동 되지 않습니다 ㅠㅠ&lt;/h3&gt;

&lt;p&gt;현재 페이지에서 leaflet을 제대로 보이기 힘든 것 같아서 여기에는 지도의 캡쳐로 대신하고 실제 구동되는 페이지는 &lt;a href=&quot;http://lumiamitie.github.io/r_tutorial/blog_link/leaflet_in_r.html&quot;&gt;다음 링크&lt;/a&gt; 로 들어가시면 확인하실 수 있습니다&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br / &gt;
&lt;br / &gt;&lt;/p&gt;

&lt;h2 id=&quot;creating-default-map&quot;&gt;Creating default map&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;leaflet(data)&lt;/code&gt;를 통해 leaflet map widget을 생성하고 데이터를 연결한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;setView()&lt;/code&gt;함수를 사용하면 지도의 중심과 확대 정도를 설정한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;addTiles()&lt;/code&gt; 함수는 기본 타일(OpenStreetMap)을 불러와서 지도를 보여준다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;addCircles()&lt;/code&gt; 함수를 통해 데이터를 원의 형태로 지도에 나타낼 수 있다&lt;/p&gt;

&lt;p&gt;각각의 함수는 &lt;code&gt;%&amp;gt;%&lt;/code&gt;를 통해 연결할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;leaflet&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;wifi_data&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  setView&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; lat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addTiles&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addCircles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/leaflet_in_R/leaflet01.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br / &gt;
&lt;br / &gt;&lt;/p&gt;

&lt;h2 id=&quot;third-party-tiles&quot;&gt;Third Party Tiles&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;addTiles()&lt;/code&gt;대신에 &lt;code&gt;addProviderTiles()&lt;/code&gt;를 이용하면 OSM이 아닌 다른 형태의 지도를 사용할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Stamen.Toner&lt;/code&gt;,&lt;code&gt;Stamen.Watercolor&lt;/code&gt;, &lt;code&gt;Acetate.terrain&lt;/code&gt;, &lt;code&gt;CartoDB.Positron&lt;/code&gt; 등의 옵션을 사용할 수 있고&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/leaflet-extras/leaflet-providers&quot;&gt;https://github.com/leaflet-extras/leaflet-providers&lt;/a&gt;에서 다른 provider들의 지도를 불러올 수 있는 방법에 대해서 알아볼 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;leaflet&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;wifi_data&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  setView&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; lat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addProviderTiles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Stamen.Toner&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addCircles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/leaflet_in_R/leaflet02.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;leaflet&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;wifi_data&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  setView&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; lat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addProviderTiles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;CartoDB.Positron&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addCircles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/leaflet_in_R/leaflet03.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br / &gt;
&lt;br / &gt;&lt;/p&gt;

&lt;h2 id=&quot;popup&quot;&gt;Popup&lt;/h2&gt;

&lt;p&gt;popup 옵션을 이용하면 tooltip을 생성할 수 있다&lt;/p&gt;

&lt;p&gt;클릭하면 해당 데이터를 확인할 수 있다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;leaflet&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;wifi_data&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  setView&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; lat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addProviderTiles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Stamen.Toner&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addCircles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; popup &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/leaflet_in_R/leaflet04.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br / &gt;
&lt;br / &gt;&lt;/p&gt;

&lt;h2 id=&quot;color&quot;&gt;Color&lt;/h2&gt;

&lt;p&gt;leaftlet에서는 &lt;code&gt;colorNumeric&lt;/code&gt;, &lt;code&gt;colorBin&lt;/code&gt;, &lt;code&gt;colorQuantile&lt;/code&gt;, &lt;code&gt;colorFactor&lt;/code&gt; 등의 함수를 이용해서 색상을 지정하는 함수를 생성할 수 있다.&lt;/p&gt;

&lt;p&gt;위에서 사용한 와이파이 정보를 통신사별로 구별하기 위해서 서로 다른 색상을 지정해보려고 한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;colorFactor&lt;/code&gt;함수를 이용하면 &lt;code&gt;RColorBrewer&lt;/code&gt; 패키지의 색상이나 다른 함수의 색상을 가져와서 구성할 수 있다&lt;/p&gt;

&lt;p&gt;첫 번째 인수로는 RColorBrewer의 팔레트 이름, 두 번째 인수는 적용할 데이터(열까지)를 지정한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;telecom_color &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; colorFactor&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Set1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; wifi_data&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;색상 함수를 생성하면 &lt;code&gt;color&lt;/code&gt;옵션에서 해당 변수에 함수를 사용한 형태로 값을 지정한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;leaflet&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;wifi_data&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  setView&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; lat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addProviderTiles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Stamen.Toner&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addCircles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; popup &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; color &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;telecom_color&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/leaflet_in_R/leaflet05.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br / &gt;
&lt;br / &gt;&lt;/p&gt;

&lt;h2 id=&quot;legends&quot;&gt;Legends&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;addLegend&lt;/code&gt;함수를 이용해서 범례를 추가할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;position&lt;/code&gt; 항목에는 topright&amp;quot;, bottomright, bottomleft, topleft 중 하나를 선택하여 범례의 위치를 지정할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pal&lt;/code&gt; 옵션에는 우리가 사용했던 색상 팔레트 함수를 입력한다&lt;/p&gt;

&lt;p&gt;&lt;code&gt;values&lt;/code&gt; 옵션에는 색상 팔레트 함수가 색상을 생성하는데 사용한 변수값을 지정한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;leaflet&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;wifi_data&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  setView&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; lat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addProviderTiles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Stamen.Toner&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addCircles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; popup &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; color &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;telecom_color&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addLegend&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;position &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;bottomright&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            title &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Wifi Provider&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            pal &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; telecom_color&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; values &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; opacity &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/leaflet_in_R/leaflet06.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;interactive-layer&quot;&gt;Interactive Layer&lt;/h2&gt;

&lt;p&gt;각각의 레이어를 서로 다른 group으로 지정하면 사용자 선택에 의해서 원하는 레이어만 선택하여 볼 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;addCircles&lt;/code&gt;함수를 사용할 때 &lt;code&gt;group&lt;/code&gt;이라는 항목을 추가하고&lt;/p&gt;

&lt;p&gt;&lt;code&gt;addLayersControl&lt;/code&gt;함수에서 설정을 통해 선택창을 생성할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;baseGroups&lt;/strong&gt; 항목에 목록을 넣으면 라디오 버튼(항목 중에서 한 개만 선택가능)이 구성되고&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;overlayGroups&lt;/strong&gt; 항목에 들어가는 목록은 체크박스를 구성한다&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;leaflet&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  setView&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; lat &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; seoul_lonlat&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; zoom &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addProviderTiles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Stamen.Toner&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addCircles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; wifi_data &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;div &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;SKT&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
             lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; popup &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;skt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             color &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;telecom_color&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addCircles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; wifi_data &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;div &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;KT&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
             lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; popup &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;kt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             color &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;telecom_color&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addCircles&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; wifi_data &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;div &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;LGU+&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
             lng &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;lon&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lat&lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt;lat&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; popup &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; group &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;lg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
             color &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;telecom_color&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;div&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt; 
  addLayersControl&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;overlayGroups &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;skt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;kt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;lg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                   options &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; layersControlOptions&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;collapsed &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/post_image/leaflet_in_R/leaflet07.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://lumiamitie.github.io/r/visualization/leaflet-in-R&quot;&gt;leaflet in R&lt;/a&gt; was originally published by Minho Lee at &lt;a href=&quot;http://lumiamitie.github.io&quot;&gt;lmnsh&lt;/a&gt; on September 25, 2015.&lt;/p&gt;</content>
</entry>

</feed>
